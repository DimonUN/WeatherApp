%PDF-1.7

1 0 obj
  << /Length 2 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.976471 exch 0.733333 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.259967 mul 1.000000 add exch dup 0.000000 sub -0.196945 mul 0.976471 add exch dup 0.000000 sub 0.078778 mul 0.733333 add exch } if dup 0.497800 gt { exch pop exch pop exch pop dup 0.497800 sub -0.288925 mul 0.870588 add exch dup 0.497800 sub -0.218646 mul 0.878431 add exch dup 0.497800 sub 0.085897 mul 0.772549 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.725490 exch 0.768627 exch 0.815686 exch } if pop }
endstream
endobj

2 0 obj
  534
endobj

3 0 obj
  << /Length 4 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.964706 exch 0.588235 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.259967 mul 1.000000 add exch dup 0.000000 sub -0.181189 mul 0.964706 add exch dup 0.000000 sub 0.212701 mul 0.588235 add exch } if dup 0.497800 gt { exch pop exch pop exch pop dup 0.497800 sub -0.288925 mul 0.870588 add exch dup 0.497800 sub -0.210837 mul 0.874510 add exch dup 0.497800 sub 0.242072 mul 0.694118 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.725490 exch 0.768627 exch 0.815686 exch } if pop }
endstream
endobj

4 0 obj
  534
endobj

5 0 obj
  << /Length 6 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.976471 exch 0.733333 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.259967 mul 1.000000 add exch dup 0.000000 sub -0.196945 mul 0.976471 add exch dup 0.000000 sub 0.078778 mul 0.733333 add exch } if dup 0.497800 gt { exch pop exch pop exch pop dup 0.497800 sub -0.288925 mul 0.870588 add exch dup 0.497800 sub -0.218646 mul 0.878431 add exch dup 0.497800 sub 0.085897 mul 0.772549 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.725490 exch 0.768627 exch 0.815686 exch } if pop }
endstream
endobj

6 0 obj
  534
endobj

7 0 obj
  << /Length 8 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.945098 exch 0.000000 exch dup 0.005650 gt { exch pop exch pop exch pop dup 0.005650 sub 0.000000 mul 1.000000 add exch dup 0.005650 sub 0.045989 mul 0.945098 add exch dup 0.005650 sub 0.505883 mul 0.000000 add exch } if dup 0.090921 gt { exch pop exch pop exch pop dup 0.090921 sub 0.000000 mul 1.000000 add exch dup 0.090921 sub 0.026429 mul 0.949020 add exch dup 0.090921 sub 0.740024 mul 0.043137 add exch } if dup 0.239300 gt { exch pop exch pop exch pop dup 0.239300 sub 0.000000 mul 1.000000 add exch dup 0.239300 sub 0.060737 mul 0.952941 add exch dup 0.239300 sub 0.951542 mul 0.152941 add exch } if dup 0.433000 gt { exch pop exch pop exch pop dup 0.433000 sub 0.000000 mul 1.000000 add exch dup 0.433000 sub 0.050776 mul 0.964706 add exch dup 0.433000 sub 1.083213 mul 0.337255 add exch } if dup 0.664700 gt { exch pop exch pop exch pop dup 0.664700 sub 0.000000 mul 1.000000 add exch dup 0.664700 sub 0.075155 mul 0.976471 add exch dup 0.664700 sub 1.217505 mul 0.588235 add exch } if dup 0.925600 gt { exch pop exch pop exch pop dup 0.925600 sub 0.000000 mul 1.000000 add exch dup 0.925600 sub 0.052709 mul 0.996078 add exch dup 0.925600 sub 1.265022 mul 0.905882 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 1.000000 exch 1.000000 exch } if pop }
endstream
endobj

8 0 obj
  1306
endobj

9 0 obj
  << /Length 10 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

10 0 obj
  1892
endobj

11 0 obj
  << /Length 12 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

12 0 obj
  2281
endobj

13 0 obj
  << /Length 14 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

14 0 obj
  1892
endobj

15 0 obj
  << /Length 16 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

16 0 obj
  1892
endobj

17 0 obj
  << /Length 18 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

18 0 obj
  1892
endobj

19 0 obj
  << /Length 20 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

20 0 obj
  2281
endobj

21 0 obj
  << /Length 22 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

22 0 obj
  1892
endobj

23 0 obj
  << /Length 24 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

24 0 obj
  2281
endobj

25 0 obj
  << /Length 26 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

26 0 obj
  1892
endobj

27 0 obj
  << /Length 28 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

28 0 obj
  1892
endobj

29 0 obj
  << /Length 30 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

30 0 obj
  2281
endobj

31 0 obj
  << /Length 32 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

32 0 obj
  1892
endobj

33 0 obj
  << /Length 34 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

34 0 obj
  1892
endobj

35 0 obj
  << /Length 36 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

36 0 obj
  1892
endobj

37 0 obj
  << /Length 38 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

38 0 obj
  2281
endobj

39 0 obj
  << /Length 40 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

40 0 obj
  1892
endobj

41 0 obj
  << /Length 42 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

42 0 obj
  2281
endobj

43 0 obj
  << /Length 44 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

44 0 obj
  1892
endobj

45 0 obj
  << /Length 46 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

46 0 obj
  1892
endobj

47 0 obj
  << /Length 48 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

48 0 obj
  1892
endobj

49 0 obj
  << /Length 50 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

50 0 obj
  2281
endobj

51 0 obj
  << /Length 52 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

52 0 obj
  2281
endobj

53 0 obj
  << /Length 54 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

54 0 obj
  530
endobj

55 0 obj
  << /Length 56 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

56 0 obj
  2281
endobj

57 0 obj
  << /Length 58 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

58 0 obj
  2281
endobj

59 0 obj
  << /Length 60 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

60 0 obj
  1892
endobj

61 0 obj
  << /Length 62 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

62 0 obj
  1892
endobj

63 0 obj
  << /Length 64 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

64 0 obj
  2281
endobj

65 0 obj
  << /Length 66 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

66 0 obj
  2281
endobj

67 0 obj
  << /Length 68 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

68 0 obj
  2281
endobj

69 0 obj
  << /Length 70 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

70 0 obj
  530
endobj

71 0 obj
  << /Length 72 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

72 0 obj
  1892
endobj

73 0 obj
  << /Length 74 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

74 0 obj
  2281
endobj

75 0 obj
  << /Length 76 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

76 0 obj
  530
endobj

77 0 obj
  << /Length 78 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

78 0 obj
  2281
endobj

79 0 obj
  << /Length 80 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

80 0 obj
  2281
endobj

81 0 obj
  << /Length 82 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

82 0 obj
  1892
endobj

83 0 obj
  << /Length 84 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

84 0 obj
  2281
endobj

85 0 obj
  << /Length 86 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

86 0 obj
  1892
endobj

87 0 obj
  << /Length 88 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

88 0 obj
  2281
endobj

89 0 obj
  << /Length 90 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

90 0 obj
  2281
endobj

91 0 obj
  << /Length 92 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

92 0 obj
  1892
endobj

93 0 obj
  << /Length 94 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

94 0 obj
  2281
endobj

95 0 obj
  << /Length 96 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

96 0 obj
  1892
endobj

97 0 obj
  << /Length 98 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

98 0 obj
  2281
endobj

99 0 obj
  << /Length 100 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

100 0 obj
  530
endobj

101 0 obj
  << /Length 102 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

102 0 obj
  1892
endobj

103 0 obj
  << /Length 104 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

104 0 obj
  1892
endobj

105 0 obj
  << /Length 106 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

106 0 obj
  1892
endobj

107 0 obj
  << /Length 108 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

108 0 obj
  1892
endobj

109 0 obj
  << /Length 110 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

110 0 obj
  2281
endobj

111 0 obj
  << /Length 112 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

112 0 obj
  2281
endobj

113 0 obj
  << /Length 114 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

114 0 obj
  530
endobj

115 0 obj
  << /Length 116 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

116 0 obj
  1892
endobj

117 0 obj
  << /Length 118 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

118 0 obj
  2281
endobj

119 0 obj
  << /Length 120 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

120 0 obj
  2281
endobj

121 0 obj
  << /Length 122 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

122 0 obj
  2281
endobj

123 0 obj
  << /Length 124 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

124 0 obj
  2281
endobj

125 0 obj
  << /Length 126 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

126 0 obj
  1892
endobj

127 0 obj
  << /Length 128 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

128 0 obj
  1892
endobj

129 0 obj
  << /Length 130 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

130 0 obj
  1892
endobj

131 0 obj
  << /Length 132 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

132 0 obj
  2281
endobj

133 0 obj
  << /Length 134 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

134 0 obj
  2281
endobj

135 0 obj
  << /Length 136 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

136 0 obj
  2281
endobj

137 0 obj
  << /Length 138 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

138 0 obj
  1892
endobj

139 0 obj
  << /Length 140 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

140 0 obj
  1892
endobj

141 0 obj
  << /Length 142 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

142 0 obj
  2281
endobj

143 0 obj
  << /Length 144 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

144 0 obj
  2281
endobj

145 0 obj
  << /Length 146 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

146 0 obj
  2281
endobj

147 0 obj
  << /Length 148 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

148 0 obj
  2281
endobj

149 0 obj
  << /Length 150 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

150 0 obj
  1892
endobj

151 0 obj
  << /Length 152 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

152 0 obj
  530
endobj

153 0 obj
  << /Length 154 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

154 0 obj
  530
endobj

155 0 obj
  << /Length 156 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

156 0 obj
  530
endobj

157 0 obj
  << /Length 158 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

158 0 obj
  530
endobj

159 0 obj
  << /Length 160 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

160 0 obj
  530
endobj

161 0 obj
  << /Length 162 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

162 0 obj
  1892
endobj

163 0 obj
  << /Length 164 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

164 0 obj
  530
endobj

165 0 obj
  << /Length 166 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

166 0 obj
  2281
endobj

167 0 obj
  << /Length 168 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

168 0 obj
  530
endobj

169 0 obj
  << /Length 170 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

170 0 obj
  1892
endobj

171 0 obj
  << /Length 172 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

172 0 obj
  2281
endobj

173 0 obj
  << /Length 174 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

174 0 obj
  530
endobj

175 0 obj
  << /Length 176 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

176 0 obj
  2281
endobj

177 0 obj
  << /Length 178 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

178 0 obj
  2281
endobj

179 0 obj
  << /Length 180 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

180 0 obj
  530
endobj

181 0 obj
  << /Length 182 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

182 0 obj
  1892
endobj

183 0 obj
  << /Length 184 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

184 0 obj
  530
endobj

185 0 obj
  << /Length 186 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

186 0 obj
  1892
endobj

187 0 obj
  << /Length 188 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

188 0 obj
  2281
endobj

189 0 obj
  << /Length 190 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

190 0 obj
  2281
endobj

191 0 obj
  << /Length 192 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

192 0 obj
  2281
endobj

193 0 obj
  << /Length 194 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

194 0 obj
  530
endobj

195 0 obj
  << /Length 196 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

196 0 obj
  530
endobj

197 0 obj
  << /Length 198 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

198 0 obj
  530
endobj

199 0 obj
  << /Length 200 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

200 0 obj
  2281
endobj

201 0 obj
  << /Length 202 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

202 0 obj
  530
endobj

203 0 obj
  << /Length 204 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

204 0 obj
  2281
endobj

205 0 obj
  << /Length 206 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

206 0 obj
  1892
endobj

207 0 obj
  << /Length 208 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

208 0 obj
  530
endobj

209 0 obj
  << /Length 210 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

210 0 obj
  530
endobj

211 0 obj
  << /Length 212 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

212 0 obj
  2281
endobj

213 0 obj
  << /Length 214 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

214 0 obj
  530
endobj

215 0 obj
  << /Length 216 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

216 0 obj
  1892
endobj

217 0 obj
  << /Length 218 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

218 0 obj
  530
endobj

219 0 obj
  << /Length 220 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

220 0 obj
  530
endobj

221 0 obj
  << /Length 222 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

222 0 obj
  530
endobj

223 0 obj
  << /Length 224 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

224 0 obj
  530
endobj

225 0 obj
  << /Length 226 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

226 0 obj
  1892
endobj

227 0 obj
  << /Length 228 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

228 0 obj
  530
endobj

229 0 obj
  << /Length 230 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

230 0 obj
  530
endobj

231 0 obj
  << /Length 232 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

232 0 obj
  530
endobj

233 0 obj
  << /Length 234 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

234 0 obj
  530
endobj

235 0 obj
  << /Length 236 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

236 0 obj
  530
endobj

237 0 obj
  << /Length 238 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

238 0 obj
  530
endobj

239 0 obj
  << /Length 240 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

240 0 obj
  530
endobj

241 0 obj
  << /Length 242 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.964706 exch 0.588235 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.259967 mul 1.000000 add exch dup 0.000000 sub -0.181189 mul 0.964706 add exch dup 0.000000 sub 0.212701 mul 0.588235 add exch } if dup 0.497800 gt { exch pop exch pop exch pop dup 0.497800 sub -0.288925 mul 0.870588 add exch dup 0.497800 sub -0.210837 mul 0.874510 add exch dup 0.497800 sub 0.242072 mul 0.694118 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.725490 exch 0.768627 exch 0.815686 exch } if pop }
endstream
endobj

242 0 obj
  534
endobj

243 0 obj
  << /Length 244 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

244 0 obj
  1892
endobj

245 0 obj
  << /Length 246 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

246 0 obj
  1892
endobj

247 0 obj
  << /Length 248 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

248 0 obj
  2281
endobj

249 0 obj
  << /Length 250 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.925490 exch 0.835294 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.000000 mul 1.000000 add exch dup 0.000000 sub -0.006800 mul 0.925490 add exch dup 0.000000 sub -0.013600 mul 0.835294 add exch } if dup 0.576700 gt { exch pop exch pop exch pop dup 0.576700 sub 0.000000 mul 1.000000 add exch dup 0.576700 sub -0.056643 mul 0.921569 add exch dup 0.576700 sub -0.132166 mul 0.827451 add exch } if dup 0.784400 gt { exch pop exch pop exch pop dup 0.784400 sub 0.000000 mul 1.000000 add exch dup 0.784400 sub -0.106276 mul 0.909804 add exch dup 0.784400 sub -0.292258 mul 0.800000 add exch } if dup 0.932000 gt { exch pop exch pop exch pop dup 0.932000 sub 0.000000 mul 1.000000 add exch dup 0.932000 sub -0.230680 mul 0.894118 add exch dup 0.932000 sub -0.519031 mul 0.756863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.878431 exch 0.721569 exch } if pop }
endstream
endobj

250 0 obj
  926
endobj

251 0 obj
  << /Length 252 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

252 0 obj
  530
endobj

253 0 obj
  << /Length 254 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

254 0 obj
  530
endobj

255 0 obj
  << /Length 256 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.945098 exch 0.000000 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.000000 mul 1.000000 add exch dup 0.000000 sub -0.016505 mul 0.945098 add exch dup 0.000000 sub 0.008252 mul 0.000000 add exch } if dup 0.475200 gt { exch pop exch pop exch pop dup 0.475200 sub -0.022906 mul 1.000000 add exch dup 0.475200 sub -0.160345 mul 0.937255 add exch dup 0.475200 sub 0.045813 mul 0.003922 add exch } if dup 0.646400 gt { exch pop exch pop exch pop dup 0.646400 sub -0.032118 mul 0.996078 add exch dup 0.646400 sub -0.353294 mul 0.909804 add exch dup 0.646400 sub 0.128471 mul 0.011765 add exch } if dup 0.768500 gt { exch pop exch pop exch pop dup 0.768500 sub -0.039772 mul 0.992157 add exch dup 0.768500 sub -0.676132 mul 0.866667 add exch dup 0.768500 sub 0.238635 mul 0.027451 add exch } if dup 0.867100 gt { exch pop exch pop exch pop dup 0.867100 sub -0.093930 mul 0.988235 add exch dup 0.867100 sub -1.033227 mul 0.800000 add exch dup 0.867100 sub 0.328754 mul 0.050980 add exch } if dup 0.950600 gt { exch pop exch pop exch pop dup 0.950600 sub -0.079384 mul 0.980392 add exch dup 0.950600 sub -1.349528 mul 0.713726 add exch dup 0.950600 sub 0.476304 mul 0.078431 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.976471 exch 0.647059 exch 0.101961 exch } if pop }
endstream
endobj

256 0 obj
  1317
endobj

257 0 obj
  << /Length 258 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

258 0 obj
  2281
endobj

259 0 obj
  << /Length 260 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

260 0 obj
  2281
endobj

261 0 obj
  << /Length 262 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

262 0 obj
  530
endobj

263 0 obj
  << /Length 264 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

264 0 obj
  530
endobj

265 0 obj
  << /Length 266 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

266 0 obj
  1892
endobj

267 0 obj
  << /Length 268 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.956863 exch 0.486275 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.000000 mul 1.000000 add exch dup 0.000000 sub 0.000000 mul 0.956863 add exch dup 0.000000 sub 0.018411 mul 0.486275 add exch } if dup 0.426000 gt { exch pop exch pop exch pop dup 0.426000 sub 0.000000 mul 1.000000 add exch dup 0.426000 sub 0.025548 mul 0.956863 add exch dup 0.426000 sub 0.178834 mul 0.494118 add exch } if dup 0.579500 gt { exch pop exch pop exch pop dup 0.579500 sub 0.000000 mul 1.000000 add exch dup 0.579500 sub 0.035846 mul 0.960784 add exch dup 0.579500 sub 0.394308 mul 0.521569 add exch } if dup 0.688900 gt { exch pop exch pop exch pop dup 0.688900 sub 0.000000 mul 1.000000 add exch dup 0.688900 sub 0.044362 mul 0.964706 add exch dup 0.688900 sub 0.754148 mul 0.564706 add exch } if dup 0.777300 gt { exch pop exch pop exch pop dup 0.777300 sub 0.000000 mul 1.000000 add exch dup 0.777300 sub 0.103608 mul 0.968627 add exch dup 0.777300 sub 1.139690 mul 0.631373 add exch } if dup 0.853000 gt { exch pop exch pop exch pop dup 0.853000 sub 0.000000 mul 1.000000 add exch dup 0.853000 sub 0.116887 mul 0.976471 add exch dup 0.853000 sub 1.636422 mul 0.717647 add exch } if dup 0.920100 gt { exch pop exch pop exch pop dup 0.920100 sub 0.000000 mul 1.000000 add exch dup 0.920100 sub 0.198728 mul 0.984314 add exch dup 0.920100 sub 2.053522 mul 0.827451 add exch } if dup 0.979300 gt { exch pop exch pop exch pop dup 0.979300 sub 0.000000 mul 1.000000 add exch dup 0.979300 sub 0.189448 mul 0.996078 add exch dup 0.979300 sub 2.462823 mul 0.949020 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 1.000000 exch 1.000000 exch } if pop }
endstream
endobj

268 0 obj
  1694
endobj

269 0 obj
  << /Length 270 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

270 0 obj
  530
endobj

271 0 obj
  << /Length 272 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

272 0 obj
  2281
endobj

273 0 obj
  << /Length 274 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

274 0 obj
  530
endobj

275 0 obj
  << /Length 276 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

276 0 obj
  530
endobj

277 0 obj
  << /Length 278 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

278 0 obj
  530
endobj

279 0 obj
  << /Length 280 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

280 0 obj
  1892
endobj

281 0 obj
  << /Length 282 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

282 0 obj
  530
endobj

283 0 obj
  << /Length 284 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

284 0 obj
  530
endobj

285 0 obj
  << /Length 286 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

286 0 obj
  530
endobj

287 0 obj
  << /Length 288 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

288 0 obj
  1892
endobj

289 0 obj
  << /Length 290 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

290 0 obj
  1892
endobj

291 0 obj
  << /Length 292 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

292 0 obj
  1892
endobj

293 0 obj
  << /Length 294 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

294 0 obj
  1892
endobj

295 0 obj
  << /Length 296 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

296 0 obj
  530
endobj

297 0 obj
  << /Length 298 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

298 0 obj
  530
endobj

299 0 obj
  << /Length 300 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

300 0 obj
  1892
endobj

301 0 obj
  << /Length 302 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

302 0 obj
  530
endobj

303 0 obj
  << /Length 304 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

304 0 obj
  530
endobj

305 0 obj
  << /Pattern << /P139 << /Matrix [ 21.216791 0.000000 -0.000000 21.566750 19.029297 4.833580 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 15 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P90 << /Matrix [ 21.217266 0.000000 -0.000000 21.567230 19.029297 4.833282 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 63 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P130 << /Matrix [ 21.217020 0.000000 -0.000000 21.566982 19.029297 4.833530 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 23 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P111 << /Matrix [ 21.215883 0.000000 -0.000000 21.565826 19.030273 4.834015 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 39 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P131 << /Matrix [ 21.217514 0.000000 -0.000000 21.567474 19.029297 4.833282 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 21 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P137 << /Matrix [ 21.215363 0.000000 -0.000000 21.565308 19.030762 4.834290 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 17 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P150 << /Matrix [ 36.646233 0.000000 -0.000000 37.250694 11.908203 -4.859215 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 3 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P141 << /Matrix [ 21.216814 0.000000 -0.000000 21.566761 19.029297 4.833630 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 13 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P125 << /Matrix [ 21.217428 0.000000 -0.000000 21.567396 19.028809 4.833361 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 27 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P149 << /Matrix [ 57.857777 0.000000 -0.000000 58.812088 -3.801270 -33.998123 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 5 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P76 << /Matrix [ 21.217617 0.000000 -0.000000 21.567587 19.029297 4.833414 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 89 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P78 << /Matrix [ 21.217564 0.000000 -0.000000 21.567543 19.028809 4.833214 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 87 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P107 << /Matrix [ 21.216993 0.000000 -0.000000 21.566957 19.029785 4.833494 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 43 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P105 << /Matrix [ 21.217165 0.000000 -0.000000 21.567148 19.029297 4.833426 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 45 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P74 << /Matrix [ 21.217659 0.000000 -0.000000 21.567640 19.028809 4.833117 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 93 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P64 << /Matrix [ 21.217400 0.000000 -0.000000 21.567339 19.029297 4.833296 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 133 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P86 << /Matrix [ 21.217167 0.000000 -0.000000 21.567148 19.029297 4.833487 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 131 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P132 << /Matrix [ 21.216570 0.000000 -0.000000 21.566511 19.029297 4.833757 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 19 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P122 << /Matrix [ 21.217176 0.000000 -0.000000 21.567146 19.029297 4.833305 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 29 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P70 << /Matrix [ 21.217339 0.000000 -0.000000 21.567316 19.028809 4.833319 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 109 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P83 << /Matrix [ 21.217463 0.000000 -0.000000 21.567423 19.029297 4.833395 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 107 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P55 << /Matrix [ 21.216835 0.000000 -0.000000 21.566786 19.029297 4.833605 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 149 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P118 << /Matrix [ 21.216959 0.000000 -0.000000 21.566927 19.029297 4.833464 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 49 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P98 << /Matrix [ 21.217186 0.000000 -0.000000 21.567150 19.029297 4.833363 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 51 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P68 << /Matrix [ 21.217165 0.000000 -0.000000 21.567120 19.029297 4.833637 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 111 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P145 << /Matrix [ 21.216995 0.000000 -0.000000 21.566957 19.029785 4.833494 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 9 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P119 << /Matrix [ 21.217125 0.000000 -0.000000 21.567091 19.028809 4.833422 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 31 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P75 << /Matrix [ 21.217447 0.000000 -0.000000 21.567427 19.028809 4.833086 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 91 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P144 << /Matrix [ 21.216785 0.000000 -0.000000 21.566732 19.029297 4.833597 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 11 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P113 << /Matrix [ 21.216982 0.000000 -0.000000 21.566961 19.029785 4.833368 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 35 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P121 << /Matrix [ 21.216904 0.000000 -0.000000 21.566872 19.029785 4.833702 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 33 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P112 << /Matrix [ 21.217131 0.000000 -0.000000 21.567097 19.029297 4.833416 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 37 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P151 << /Matrix [ 37.493587 0.000000 -0.000000 38.112026 -2.460938 -16.484524 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 1 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P127 << /Matrix [ 21.217709 0.000000 -0.000000 21.567675 19.028809 4.833204 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 25 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P110 << /Matrix [ 21.217205 0.000000 -0.000000 21.567175 19.029785 4.833399 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 41 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P101 << /Matrix [ 21.217127 0.000000 -0.000000 21.567066 19.029297 4.833385 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 47 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P71 << /Matrix [ 21.218243 0.000000 -0.000000 21.568245 19.028320 4.832878 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 105 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P96 << /Matrix [ 21.216915 0.000000 -0.000000 21.566864 19.029297 4.833588 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 55 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P29 << /Matrix [ 7.296150 0.000000 -0.000000 7.416495 24.960938 6.082284 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 53 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P93 << /Matrix [ 21.216629 0.000000 -0.000000 21.566620 19.029785 4.833588 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 61 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P84 << /Matrix [ 21.217098 0.000000 -0.000000 21.567074 19.029297 4.833439 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 65 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P148 << /Matrix [ 9.225432 0.000000 -0.000000 10.562210 24.672852 11.297714 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 7 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P95 << /Matrix [ 21.216967 0.000000 -0.000000 21.566916 19.029297 4.833902 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 59 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P124 << /Matrix [ 21.217028 0.000000 -0.000000 21.566986 19.028809 4.833527 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 57 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P126 << /Matrix [ 21.217028 0.000000 -0.000000 21.566984 19.028809 4.833529 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 67 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P22 << /Matrix [ 7.170290 0.000000 -0.000000 7.288560 22.352539 16.655106 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 69 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P77 << /Matrix [ 21.216948 0.000000 -0.000000 21.566904 19.029785 4.833548 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 71 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P82 << /Matrix [ 21.217157 0.000000 -0.000000 21.567123 19.029297 4.833450 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 73 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P40 << /Matrix [ 6.168542 0.000000 -0.000000 6.270289 32.185059 9.961888 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 75 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P80 << /Matrix [ 21.216778 0.000000 -0.000000 21.566727 19.029297 4.833786 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 77 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P97 << /Matrix [ 21.216219 0.000000 -0.000000 21.566141 19.029785 4.833883 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 81 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P128 << /Matrix [ 21.217117 0.000000 -0.000000 21.567091 19.028809 4.833483 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 79 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P136 << /Matrix [ 21.216560 0.000000 -0.000000 21.566519 19.029785 4.833628 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 83 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P79 << /Matrix [ 21.217718 0.000000 -0.000000 21.567688 19.028809 4.833191 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 85 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P69 << /Matrix [ 21.216677 0.000000 -0.000000 21.566631 19.029785 4.833576 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 185 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P60 << /Matrix [ 21.216919 0.000000 -0.000000 21.566875 19.029297 4.833454 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 187 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P39 << /Matrix [ 6.536639 0.000000 -0.000000 6.644451 28.915527 18.122028 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 99 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P57 << /Matrix [ 21.216158 0.000000 -0.000000 21.566107 19.029785 4.834162 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 101 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P108 << /Matrix [ 21.217443 0.000000 -0.000000 21.567425 19.028809 4.833271 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 97 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P73 << /Matrix [ 21.216288 0.000000 -0.000000 21.566227 19.029785 4.833797 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 103 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P129 << /Matrix [ 21.217293 0.000000 -0.000000 21.567265 19.029297 4.833248 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 95 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P67 << /Matrix [ 21.217665 0.000000 -0.000000 21.567640 19.029297 4.833239 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 115 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P4 << /Matrix [ 7.285013 0.000000 -0.000000 7.405177 22.834473 7.027868 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 113 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P134 << /Matrix [ 21.216738 0.000000 -0.000000 21.566675 19.029297 4.833593 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 117 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P94 << /Matrix [ 21.216780 0.000000 -0.000000 21.566746 19.029785 4.833584 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 119 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P66 << /Matrix [ 21.216450 0.000000 -0.000000 21.566383 19.029297 4.833885 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 123 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P52 << /Matrix [ 21.216871 0.000000 -0.000000 21.566851 19.029297 4.833540 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 121 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P133 << /Matrix [ 21.217287 0.000000 -0.000000 21.567234 19.029297 4.833340 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 125 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P65 << /Matrix [ 21.217035 0.000000 -0.000000 21.566959 19.029297 4.833492 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 129 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P115 << /Matrix [ 21.217602 0.000000 -0.000000 21.567566 19.028809 4.833130 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 127 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P106 << /Matrix [ 21.217209 0.000000 -0.000000 21.567175 19.029297 4.833338 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 135 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P89 << /Matrix [ 21.216732 0.000000 -0.000000 21.566713 19.029785 4.833677 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 137 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P63 << /Matrix [ 21.216719 0.000000 -0.000000 21.566681 19.029297 4.833649 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 139 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P102 << /Matrix [ 21.218084 0.000000 -0.000000 21.568056 19.029297 4.833128 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 141 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P88 << /Matrix [ 21.217405 0.000000 -0.000000 21.567362 19.029297 4.833578 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 143 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P58 << /Matrix [ 21.216513 0.000000 -0.000000 21.566454 19.029297 4.833693 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 145 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P56 << /Matrix [ 21.217260 0.000000 -0.000000 21.567232 19.029785 4.833342 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 147 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P33 << /Matrix [ 7.183459 0.000000 -0.000000 7.301943 21.541992 8.152586 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 151 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P48 << /Matrix [ 7.093472 0.000000 -0.000000 7.210477 27.564453 6.379244 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 153 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P10 << /Matrix [ 6.169461 0.000000 -0.000000 6.271224 23.386230 17.725662 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 155 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P25 << /Matrix [ 7.042402 0.000000 -0.000000 7.158562 21.232422 8.111458 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 157 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P47 << /Matrix [ 7.067683 0.000000 -0.000000 7.184258 31.786133 13.599678 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 159 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P109 << /Matrix [ 21.216619 0.000000 -0.000000 21.566568 19.029785 4.833639 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 161 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P44 << /Matrix [ 7.163589 0.000000 -0.000000 7.281741 22.745605 6.952512 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 163 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P54 << /Matrix [ 21.216587 0.000000 -0.000000 21.566540 19.029785 4.833546 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 165 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P16 << /Matrix [ 6.031139 0.000000 -0.000000 6.130612 32.792480 11.160464 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 167 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P43 << /Matrix [ 7.002222 0.000000 -0.000000 7.117723 31.250977 8.530958 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 173 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P103 << /Matrix [ 21.214443 0.000000 -0.000000 21.564320 19.031250 4.834850 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 169 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P92 << /Matrix [ 21.217152 0.000000 -0.000000 21.567087 19.029297 4.833364 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 171 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P72 << /Matrix [ 21.216808 0.000000 -0.000000 21.566769 19.029785 4.833561 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 175 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P45 << /Matrix [ 7.309496 0.000000 -0.000000 7.430072 29.459961 17.030010 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 179 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P140 << /Matrix [ 21.217127 0.000000 -0.000000 21.567066 19.029297 4.833630 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 177 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P135 << /Matrix [ 21.216995 0.000000 -0.000000 21.566929 19.029297 4.833401 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 181 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P41 << /Matrix [ 6.279155 0.000000 -0.000000 6.382727 20.942871 15.063623 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 183 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P120 << /Matrix [ 21.217529 0.000000 -0.000000 21.567509 19.028809 4.832943 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 191 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P37 << /Matrix [ 6.199530 0.000000 -0.000000 6.301785 24.673828 18.504368 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 193 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P142 << /Matrix [ 21.217264 0.000000 -0.000000 21.567223 19.029297 4.833473 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 189 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P34 << /Matrix [ 6.153050 0.000000 -0.000000 6.254539 20.691895 10.643105 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 195 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P32 << /Matrix [ 7.332787 0.000000 -0.000000 7.453737 30.479980 15.557371 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 197 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P100 << /Matrix [ 21.216932 0.000000 -0.000000 21.566896 19.029785 4.833433 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 199 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P30 << /Matrix [ 7.289202 0.000000 -0.000000 7.409432 22.475586 16.511162 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 201 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P104 << /Matrix [ 21.216381 0.000000 -0.000000 21.566355 19.029785 4.833670 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 203 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P53 << /Matrix [ 21.216850 0.000000 -0.000000 21.566816 19.029297 4.833574 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 205 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P35 << /Matrix [ 6.080887 0.000000 -0.000000 6.181185 32.575195 14.541777 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 207 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P49 << /Matrix [ 7.050350 0.000000 -0.000000 7.166643 24.658691 17.816633 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 209 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P116 << /Matrix [ 21.217632 0.000000 -0.000000 21.567612 19.028320 4.833084 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 211 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P19 << /Matrix [ 6.910624 0.000000 -0.000000 7.024605 31.988281 11.192314 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 213 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P81 << /Matrix [ 21.217241 0.000000 -0.000000 21.567202 19.029297 4.833311 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 215 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P9 << /Matrix [ 7.365691 0.000000 -0.000000 7.487184 24.298340 17.598997 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 217 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P23 << /Matrix [ 7.326436 0.000000 -0.000000 7.447277 29.623535 6.993886 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 219 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P28 << /Matrix [ 7.466088 0.000000 -0.000000 7.589231 26.772461 17.583315 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 221 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P21 << /Matrix [ 7.181563 0.000000 -0.000000 7.300021 25.137207 6.177518 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 223 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P59 << /Matrix [ 21.216047 0.000000 -0.000000 21.565968 19.030273 4.833935 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 225 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P17 << /Matrix [ 6.207913 0.000000 -0.000000 6.310306 20.409668 13.713803 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 227 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P27 << /Matrix [ 7.422629 0.000000 -0.000000 7.545069 31.691895 10.869970 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 229 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P36 << /Matrix [ 6.063497 0.000000 -0.000000 6.163516 28.379395 6.450376 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 231 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P38 << /Matrix [ 6.303218 0.000000 -0.000000 6.407184 23.913574 6.877789 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 233 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P26 << /Matrix [ 7.325890 0.000000 -0.000000 7.446730 20.323242 12.854906 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 235 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P15 << /Matrix [ 6.341496 0.000000 -0.000000 6.446103 25.143555 5.924625 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 237 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P2 << /Matrix [ 7.132217 0.000000 -0.000000 7.249862 21.286133 15.170731 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 239 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P152 << /Matrix [ 23.748148 0.000000 -0.000000 24.139853 7.719238 2.398417 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 241 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P143 << /Matrix [ 21.217058 0.000000 -0.000000 21.567041 19.028809 4.833532 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 243 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P61 << /Matrix [ 21.216831 0.000000 -0.000000 21.566792 19.029785 4.833599 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 245 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P62 << /Matrix [ 21.217205 0.000000 -0.000000 21.567173 19.029297 4.833523 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 247 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P147 << /Matrix [ 7.872140 0.000000 -0.000000 8.001977 25.672363 11.431739 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 249 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P13 << /Matrix [ 6.202746 0.000000 -0.000000 6.305059 21.252930 9.198236 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 251 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P12 << /Matrix [ 6.197691 0.000000 -0.000000 6.299917 31.717773 15.667429 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 253 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P146 << /Matrix [ 10.006123 0.000000 -0.000000 10.171171 24.519043 10.707552 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 255 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P114 << /Matrix [ 21.217861 0.000000 -0.000000 21.567837 19.028809 4.833225 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 257 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P50 << /Matrix [ 21.218229 0.000000 -0.000000 21.568224 19.029297 4.833021 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 259 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P20 << /Matrix [ 6.988705 0.000000 -0.000000 7.103980 26.948242 17.757408 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 261 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P46 << /Matrix [ 7.033073 0.000000 -0.000000 7.149080 20.513184 10.673002 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 263 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P123 << /Matrix [ 21.217604 0.000000 -0.000000 21.567600 19.028809 4.833340 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 265 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P1 << /Matrix [ 19.304087 0.000000 -0.000000 19.622499 19.812988 6.039549 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 267 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P5 << /Matrix [ 7.011905 0.000000 -0.000000 7.127561 29.336914 16.875980 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 269 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P138 << /Matrix [ 21.216881 0.000000 -0.000000 21.566845 19.029785 4.833607 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 271 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P8 << /Matrix [ 7.474226 0.000000 -0.000000 7.597503 27.498535 6.152741 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 273 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P42 << /Matrix [ 7.270709 0.000000 -0.000000 7.390634 20.911133 15.362540 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 275 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P11 << /Matrix [ 6.081860 0.000000 -0.000000 6.182178 29.778320 7.022229 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 277 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P117 << /Matrix [ 21.217075 0.000000 -0.000000 21.567036 19.029297 4.833355 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 279 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P14 << /Matrix [ 6.110569 0.000000 -0.000000 6.211365 27.718750 18.703247 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 281 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P7 << /Matrix [ 7.188918 0.000000 -0.000000 7.307495 31.691406 13.709900 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 283 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P31 << /Matrix [ 7.006393 0.000000 -0.000000 7.121952 29.772461 7.374325 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 285 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P85 << /Matrix [ 21.217386 0.000000 -0.000000 21.567350 19.029297 4.833284 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 287 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P91 << /Matrix [ 21.215469 0.000000 -0.000000 21.565420 19.030273 4.834482 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 289 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P99 << /Matrix [ 21.217136 0.000000 -0.000000 21.567102 19.029785 4.833410 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 291 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P87 << /Matrix [ 21.217527 0.000000 -0.000000 21.567503 19.028809 4.833010 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 293 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P18 << /Matrix [ 7.107481 0.000000 -0.000000 7.224714 20.333496 12.813128 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 295 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P24 << /Matrix [ 7.295556 0.000000 -0.000000 7.415893 30.624023 15.626832 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 297 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P51 << /Matrix [ 21.217159 0.000000 -0.000000 21.567123 19.029297 4.833450 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 299 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P3 << /Matrix [ 7.193921 0.000000 -0.000000 7.312577 30.875488 8.658737 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 301 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P6 << /Matrix [ 7.407922 0.000000 -0.000000 7.530117 20.465332 10.079990 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 303 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
              >> >>
endobj

306 0 obj
  << /Length 307 0 R >>
stream
/DeviceRGB CS
/DeviceRGB cs
q
1.000000 0.000000 -0.000000 1.000000 19.849609 6.019531 cm
/Pattern cs
/P1 scn
19.300890 9.809638 m
19.300890 4.403198 14.969154 0.000013 9.650444 0.000013 c
4.331733 0.000013 0.000000 4.403198 0.000000 9.809638 c
0.000000 15.216079 4.331733 19.619263 9.650444 19.619263 c
14.969154 19.619263 19.300890 15.216079 19.300890 9.809638 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 21.809082 14.742310 cm
/Pattern cs
/P2 scn
1.494824 2.508168 m
2.509217 1.086887 3.934850 0.195103 5.524979 0.027893 c
5.634644 0.000025 l
5.607228 0.111497 l
5.497564 0.445916 5.497564 0.780336 5.497564 1.114755 c
5.497564 1.198359 l
5.415317 1.198359 l
4.400924 1.114755 3.304282 1.560647 2.180225 2.563904 c
0.644927 4.124527 -0.067890 6.298250 0.288518 8.471973 c
0.124022 8.527710 l
-0.259802 6.493327 0.261103 4.208131 1.494824 2.508168 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.528809 8.137512 cm
/Pattern cs
/P3 scn
0.027416 8.639174 m
0.383825 7.552312 l
0.438656 7.552312 l
3.755998 7.106420 5.483211 3.399944 5.236466 0.027887 c
5.400960 0.000019 l
5.702537 2.368820 5.071968 4.904830 3.755997 6.604793 c
2.823852 7.830995 1.562715 8.555569 0.109665 8.722778 c
0.000000 8.722778 l
0.027416 8.639174 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 21.905762 8.081787 cm
/Pattern cs
/P4 scn
8.581223 5.573633 m
8.471559 5.517896 8.334479 5.517896 8.197399 5.517896 c
8.032903 5.517896 7.868406 5.517896 7.868406 5.378554 c
7.895821 5.434291 l
7.566829 4.960531 7.320084 4.458902 7.073340 3.985141 c
6.716931 3.288435 6.387940 2.647465 5.867035 2.090099 c
4.605897 0.891764 2.851269 0.222926 0.959562 0.222926 c
0.685401 0.222926 0.356408 0.250795 0.027416 0.278663 c
0.000000 0.111452 l
0.301577 0.083584 0.630570 0.055717 0.932146 0.055717 c
3.235094 -0.000020 5.099385 0.585214 6.497603 1.839286 c
7.566829 2.703202 8.307063 3.929405 8.663471 5.434291 c
8.690887 5.601501 l
8.581223 5.573633 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 28.513184 17.856567 cm
/Pattern cs
/P5 scn
6.991093 5.608493 m
5.483210 5.552757 4.112408 5.246206 2.878685 4.660973 c
1.069226 3.629848 0.000000 1.902015 0.000000 0.118447 c
0.000000 0.006974 l
1.178891 0.397130 l
1.178891 0.452867 l
1.370803 3.490506 4.249488 5.274075 6.991093 5.469152 c
7.402334 5.469152 7.813574 5.469152 8.224815 5.441284 c
8.224815 5.608493 l
7.840991 5.636362 7.402334 5.636362 6.991093 5.608493 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 18.999512 11.398071 cm
/Pattern cs
/P6 scn
0.000000 4.319593 m
1.727210 1.281953 5.812199 0.000012 8.937626 1.532767 c
9.156955 1.755713 9.376282 1.978659 9.705274 2.090132 c
9.869772 2.145869 l
9.705274 2.229474 l
9.623026 2.257342 9.540779 2.340947 9.458531 2.424552 c
9.321451 2.563893 9.156955 2.703235 9.047291 2.563893 c
9.074706 2.591761 l
8.663465 2.480288 8.252225 2.313078 7.840985 2.173737 c
7.045920 1.867186 6.250855 1.560635 5.346127 1.560635 c
3.372172 1.672108 1.343384 2.758971 0.082247 4.403198 c
0.000000 4.319593 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.294922 15.394592 cm
/Pattern cs
/P7 scn
0.054831 2.719764 m
0.000000 2.664027 l
0.054831 2.608291 l
0.191911 2.468950 0.328992 2.413213 0.466072 2.357477 c
0.603152 2.301740 0.740233 2.246004 0.849897 2.134531 c
0.904730 2.078794 l
0.959561 2.106662 l
3.646333 4.141044 7.594244 2.859105 9.458534 0.406699 c
9.568197 0.490304 l
9.074708 1.187010 8.361893 1.883716 7.402331 2.580422 c
7.237835 2.691895 7.045924 2.775500 6.881428 2.886973 c
6.716932 2.970578 6.552435 3.054183 6.387938 3.165656 c
4.249487 4.336122 1.644962 4.141045 0.054831 2.719764 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 29.198242 5.127808 cm
/Pattern cs
/P8 scn
2.467446 9.837467 m
2.467446 9.725994 2.467445 9.642389 2.385197 9.558784 c
2.138452 9.447311 1.919124 9.196497 1.809460 8.945683 c
1.782044 8.889946 l
1.809460 8.862079 l
2.577109 8.026031 2.960936 6.967038 2.960936 5.768703 c
2.960936 5.601494 2.960934 5.406415 2.933518 5.239206 c
2.741606 3.316297 1.590132 1.309782 0.000000 0.139316 c
0.082249 -0.000026 l
1.754629 1.086836 3.015766 2.954010 3.454423 5.016260 c
3.810832 6.799829 3.509256 8.527660 2.604526 9.893204 c
2.467446 10.116150 l
2.467446 9.837467 l
2.467446 9.837467 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 25.990723 16.581604 cm
/Pattern cs
/P9 scn
2.494859 9.085059 m
1.014393 7.608041 0.191912 6.047419 0.027416 4.375324 c
0.000000 3.706486 l
0.000000 2.173732 0.438656 0.947529 1.288553 0.055745 c
1.343384 0.000008 l
1.398218 0.055745 l
1.535298 0.195086 1.590130 0.334427 1.644962 0.473768 c
1.699794 0.613110 1.754625 0.752452 1.864289 0.863925 c
1.919123 0.919661 l
1.864289 0.975397 l
1.151472 1.895049 0.767648 3.065516 0.767648 4.319587 c
0.767648 5.991683 1.453050 7.719514 2.631939 8.973586 c
2.960932 9.308004 3.262509 9.586687 3.564085 9.809633 c
3.454420 9.948975 l
3.152844 9.726028 2.823852 9.447346 2.494859 9.085059 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 24.208496 17.055359 cm
/Pattern cs
/P10 scn
0.000000 7.914576 m
0.109664 7.245738 0.219328 6.521163 0.466072 5.852325 c
0.877313 3.232710 1.727210 1.477009 3.207677 0.167202 c
3.372173 -0.000008 3.536669 0.167202 3.646333 0.278675 c
3.755997 0.473753 3.838245 0.585226 3.920494 0.585226 c
4.084990 0.585226 l
3.975327 0.724567 l
1.946539 3.065500 0.657985 5.490038 0.137080 7.942444 c
0.000000 7.914576 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.678711 6.420654 cm
/Pattern cs
/P11 scn
0.301576 7.764281 m
0.109664 7.652808 0.000000 7.429862 0.000000 7.290520 c
0.000000 6.956101 0.246743 6.761024 0.493487 6.510209 c
0.630568 6.370868 0.795064 6.259395 0.904728 6.092185 c
1.069226 5.841371 l
1.206306 5.618424 1.315970 5.451215 1.480467 5.284006 c
2.604524 3.388964 3.317341 1.716869 3.728581 0.016906 c
3.865661 0.044774 l
3.509252 1.605395 l
3.015763 3.890592 2.522276 6.287263 0.657985 7.792149 c
0.548321 7.847885 0.438656 7.847886 0.301576 7.764281 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.733398 16.916016 cm
/Pattern cs
/P12 scn
0.054833 0.975376 m
0.000000 0.919640 l
0.054833 0.863904 l
0.164498 0.752430 0.274161 0.613089 0.383825 0.473748 c
0.493489 0.334407 0.603154 0.195065 0.740235 0.055725 c
0.795066 -0.000012 l
0.849897 0.055725 l
1.069226 0.278670 1.315970 0.501616 1.535298 0.696694 c
1.754627 0.891772 2.001371 1.114717 2.220700 1.337663 c
2.330364 1.449136 2.440028 1.504873 2.604525 1.560610 c
2.741605 1.616346 2.906101 1.672083 3.015766 1.811424 c
3.372174 2.173711 3.756000 2.396657 4.194656 2.675340 c
4.496233 2.842549 l
4.523649 2.870418 4.605898 2.870417 4.660731 2.870417 c
4.742979 2.870417 4.852643 2.870418 4.934891 2.954022 c
5.565460 3.372046 6.278276 3.594992 6.963677 3.817938 c
7.758741 4.096621 l
7.731328 4.235962 l
5.291299 3.817938 2.248117 3.065495 0.054833 0.975376 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 20.206055 10.589905 cm
/Pattern cs
/P13 scn
7.320083 3.845825 m
4.578479 1.895047 2.330363 0.780317 0.000000 0.167215 c
0.027418 0.000005 l
3.317342 0.139346 5.949281 1.142604 7.895819 3.009777 c
8.005484 3.204855 7.813570 3.372065 7.649075 3.539275 c
7.566826 3.622880 7.484580 3.706484 7.429747 3.762221 c
7.402329 3.845825 l
7.320083 3.845825 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 28.841797 18.002869 cm
/Pattern cs
/P14 scn
0.000000 0.083636 m
0.000000 0.000031 l
1.178890 0.000031 l
1.178890 0.083636 l
1.069225 2.480306 1.836873 5.155657 3.427002 7.970350 c
3.289922 8.053955 l
1.754625 5.713022 0.246744 3.149144 0.000000 0.083636 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 26.127930 5.239258 cm
/Pattern cs
/P15 scn
3.783410 8.193262 m
3.454417 8.081790 3.125425 8.081790 2.823849 8.193262 c
2.714184 8.221130 l
2.714184 8.221130 2.714184 7.217874 2.714184 7.190006 c
2.248112 4.932677 1.809457 3.037635 0.685400 1.142594 c
0.466072 0.919649 0.219326 0.668834 0.109662 0.306547 c
0.000000 -0.000004 l
0.219327 0.222943 l
2.522273 2.424535 3.372170 5.573647 3.865659 8.081789 c
3.893074 8.221130 l
3.783410 8.193262 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.692871 12.468262 cm
/Pattern cs
/P16 scn
0.054833 3.611699 m
0.000000 3.583831 l
0.000000 2.524837 l
0.082249 2.524837 l
2.604526 2.524837 4.907473 1.688791 7.018508 0.824876 c
7.237837 0.657666 7.484583 0.462589 7.731328 0.239643 c
7.840990 0.351115 l
7.621662 0.574061 7.374917 0.824876 7.155589 0.936349 c
7.128175 0.936349 l
6.250862 1.605187 5.291300 2.134683 4.112410 2.636311 c
3.893080 2.747784 l
2.686774 3.333017 1.343388 3.946118 0.054833 3.611699 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.273438 14.798035 cm
/Pattern cs
/P17 scn
0.000000 3.901552 m
1.206305 3.065505 l
3.262509 1.560620 5.428378 -0.000002 8.005486 0.668836 c
8.087736 0.696704 l
8.032903 0.780309 l
7.978070 0.891782 7.840990 1.254069 7.923238 1.393411 c
7.978071 1.504883 l
7.868406 1.504883 l
4.934889 1.783566 2.769020 2.480272 0.767648 3.790079 c
0.630568 3.845816 0.520905 3.873684 0.411241 3.929421 c
0.301577 3.957289 0.191911 3.985157 0.082247 4.040894 c
0.000000 3.901552 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.575195 13.543945 cm
/Pattern cs
/P18 scn
0.000000 5.991688 m
0.603153 3.511414 2.275532 1.421295 4.359151 0.529510 c
5.784785 0.000014 7.018506 0.000014 8.142564 0.529510 c
8.197397 0.557379 l
7.813572 1.644240 l
7.731323 1.588504 l
6.470185 0.808193 4.770391 0.975402 3.070596 2.062264 c
1.699794 2.926180 0.630569 4.375329 0.164496 6.047424 c
0.000000 5.991688 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.144531 11.360291 cm
/Pattern cs
/P19 scn
0.137080 6.085221 m
0.000000 6.057352 l
0.109665 5.973748 l
0.137081 5.945879 0.164498 5.834406 0.191914 5.750802 c
0.219330 5.611461 0.274161 5.472119 0.383825 5.472119 c
2.604525 5.472119 4.441401 4.914754 6.004116 3.772156 c
6.854013 2.991845 7.539415 2.016457 8.005488 0.818122 c
8.142569 0.873858 l
6.963678 4.245916 3.646335 7.116346 0.137080 6.085221 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 27.537109 17.306152 cm
/Pattern cs
/P20 scn
0.180744 0.167195 m
0.235577 -0.000013 l
0.317824 0.139328 l
0.482320 0.390142 0.701649 0.445879 0.948394 0.501615 c
1.277385 0.585219 l
1.249970 0.668824 l
0.729065 1.922895 0.756482 3.288440 1.332219 4.598248 c
2.072452 6.270343 3.635165 7.663756 5.389791 8.276857 c
5.334960 8.416199 l
1.716043 7.440810 -0.696570 3.594991 0.180744 0.167195 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 25.634277 5.796570 cm
/Pattern cs
/P21 scn
5.373544 8.276896 m
5.263880 7.970345 4.962304 7.747399 4.660727 7.747399 c
4.551063 7.747399 l
4.578478 7.635925 l
4.715559 7.217902 4.797807 6.772010 4.797807 6.298249 c
4.797807 5.044178 4.222071 3.790106 3.783415 2.981926 c
3.454422 2.452430 3.043181 2.090142 2.577108 1.699986 c
2.248116 1.421304 1.919123 1.142622 1.644963 0.808203 c
1.644963 0.808203 1.453051 0.668862 1.453051 0.640994 c
0.986978 0.418048 0.493489 0.250837 0.000000 0.139364 c
0.027416 0.000023 l
0.109665 0.027891 l
0.575737 0.111496 1.096641 0.222969 1.535298 0.529521 c
2.302947 0.891808 3.043181 1.421304 3.920495 2.229484 c
5.099385 3.511423 5.784784 5.155651 5.784784 6.716273 c
5.784784 7.273639 5.702536 7.803135 5.538040 8.304764 c
5.455793 8.527710 l
5.373544 8.276896 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 23.982422 15.661987 cm
/Pattern cs
/P22 scn
3.104849 0.027845 m
3.159681 -0.000022 l
3.187096 0.027845 l
3.324177 0.167187 3.324177 0.334397 3.324177 0.473739 c
3.324177 0.613080 3.324177 0.724552 3.406425 0.808157 c
3.488672 0.891762 l
3.406425 0.947498 l
0.335827 2.563858 -0.267326 6.688360 0.938980 9.586658 c
0.801900 9.642395 l
-0.459238 6.799832 -0.596318 1.727809 3.104849 0.027845 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.391602 5.935974 cm
/Pattern cs
/P23 scn
0.520905 9.865334 m
0.438656 9.558783 l
0.383824 9.280101 0.301577 8.973549 0.082249 8.750604 c
0.000000 8.666999 l
0.109665 8.611262 l
1.315971 8.026029 2.193283 6.967035 2.659356 5.545755 c
3.235093 3.817924 3.070598 1.699937 2.220700 0.083579 c
2.357780 -0.000027 l
3.207678 1.532727 3.509255 3.316295 3.262511 5.350677 c
3.262511 6.270329 2.906102 7.329323 2.330364 8.137502 c
1.946540 8.611262 1.562716 8.973549 1.178891 9.335836 c
0.520905 9.976807 l
0.520905 9.865334 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 29.170898 17.519653 cm
/Pattern cs
/P24 scn
2.659355 3.158580 m
1.782042 2.824161 0.959561 2.043850 0.466072 1.068461 c
0.000000 0.594701 l
0.411241 0.622569 l
0.712817 0.650437 1.014393 0.650437 1.288553 0.399623 c
1.370802 0.316018 l
1.425633 0.399623 l
1.836874 1.207803 2.440027 1.932377 3.317340 2.545478 c
5.181631 3.604472 7.511995 3.632340 9.705278 2.656951 c
9.787527 2.796293 l
7.923236 3.938891 5.263878 4.078232 2.659355 3.158580 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.849609 10.053406 cm
/Pattern cs
/P25 scn
8.690886 3.462669 m
7.155587 1.205340 4.468814 0.174214 1.699794 0.759448 c
1.206305 0.898789 0.657984 1.065999 0.054831 1.316813 c
0.000000 1.149604 l
0.520905 0.898789 1.069225 0.731580 1.672378 0.592239 c
3.646333 0.034874 5.236464 0.034874 6.744347 0.564371 c
8.224813 1.121736 9.184374 2.152861 9.403702 3.379064 c
9.403702 3.462669 l
9.321455 3.462669 l
9.102126 3.490537 l
8.937630 3.546274 8.773133 3.574142 8.690886 3.462669 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 18.999512 14.519348 cm
/Pattern cs
/P26 scn
4.770389 4.096634 m
2.769018 3.567137 0.959561 2.117987 0.000000 0.306551 c
0.137080 0.222946 l
1.233722 2.145856 3.098011 3.372059 5.291294 3.595005 c
6.771760 3.650742 7.895819 3.316323 8.636052 2.591748 c
8.690884 2.536011 l
8.745714 2.591748 l
8.965043 2.870431 9.156957 3.121244 9.458533 3.316322 c
9.568195 3.372059 l
9.458533 3.427796 l
8.115148 4.319580 6.442767 4.542526 4.770389 4.096634 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.377441 12.484985 cm
/Pattern cs
/P27 scn
1.096641 1.783583 m
1.041808 1.811451 l
0.000000 1.142613 l
0.109662 1.086876 l
1.315968 0.278697 2.769020 0.055750 4.249485 0.390170 c
6.333104 0.863930 8.361888 2.424552 9.623026 4.458936 c
9.485946 4.542542 l
7.594239 1.755715 3.920493 0.000014 1.096641 1.783583 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 28.238770 16.665222 cm
/Pattern cs
/P28 scn
0.000000 9.726015 m
1.891708 8.471944 3.098016 6.632639 3.372176 4.570389 c
3.372176 4.431048 3.399592 4.291707 3.399592 4.152365 c
3.399592 3.539264 3.289927 2.954031 3.152847 2.340929 c
3.043183 1.811432 2.933518 1.281935 2.878686 0.696702 c
2.906102 0.752439 l
2.823854 0.640965 2.933517 0.557362 3.070598 0.445889 c
3.180262 0.362284 3.289926 0.250811 3.344759 0.167206 c
3.427007 -0.000005 l
3.509256 0.139337 l
4.167242 1.560617 4.359154 2.981899 4.057578 4.347443 c
3.701169 6.493299 2.357782 8.360471 0.082249 9.865356 c
0.000000 9.726015 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 26.347168 5.211365 cm
/Pattern cs
/P29 scn
1.041810 9.530923 m
0.356409 8.694875 0.000000 7.608012 0.000000 6.437546 c
0.000000 5.685103 0.137080 4.904793 0.438656 4.152350 c
1.041809 2.870410 1.973954 1.672075 3.180260 0.668818 c
3.481837 0.390136 3.755999 0.167190 4.030159 -0.000020 c
4.112406 0.139321 l
3.838245 0.334399 3.564085 0.557345 3.289925 0.808160 c
1.809458 2.145836 0.904730 4.068745 0.904730 5.796576 c
0.904730 6.799833 1.178890 7.719485 1.754627 8.527665 c
1.782043 8.583402 l
1.124057 9.642395 l
1.041810 9.530923 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 21.412109 17.090942 cm
/Pattern cs
/P30 scn
0.000000 5.454477 m
0.054833 5.315136 l
2.056204 5.761028 4.304318 5.315136 5.894449 4.144669 c
6.579850 3.587304 7.018506 2.806993 7.429747 2.082418 c
7.649075 1.720131 7.868403 1.329976 8.115148 0.967689 c
8.169980 0.828347 8.334476 0.828348 8.498973 0.856216 c
8.608637 0.856216 8.718301 0.856216 8.800549 0.856216 c
8.992462 0.828347 l
8.882798 0.995557 l
8.690886 1.274240 8.663469 1.580790 8.636053 1.915209 c
7.183003 5.092190 3.207677 6.708549 0.000000 5.454477 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 28.677246 8.444092 cm
/Pattern cs
/P31 scn
0.082249 5.072021 m
0.000000 5.072021 l
0.027416 4.988417 l
0.383824 2.870430 2.275533 1.058994 4.633314 0.557365 c
4.852643 0.529497 5.017138 0.501629 5.209051 0.445893 c
5.400963 0.418025 5.592875 0.362288 5.784788 0.334419 c
6.963678 0.250815 7.950658 0.334419 8.773140 0.557365 c
8.745723 0.696706 l
5.784788 0.000000 1.891708 1.504887 1.096642 4.821208 c
1.069227 4.876944 l
1.014395 4.876944 l
0.877315 4.849075 0.740235 4.904813 0.603154 4.960549 c
0.411242 5.044154 0.274161 5.072021 0.082249 5.072021 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.528809 14.825928 cm
/Pattern cs
/P32 scn
4.304319 9.307972 m
4.441399 8.722738 4.523648 8.109636 4.523648 7.496535 c
4.523648 6.047386 4.139824 4.570368 3.399591 3.455638 c
2.631941 2.285172 1.535299 1.560597 0.274161 1.365520 c
0.219329 1.365520 l
0.219329 1.309783 l
0.191913 1.226178 0.191912 1.142573 0.191912 1.031100 c
0.191912 0.836022 0.219328 0.640944 0.301576 0.473735 c
0.301576 0.445867 l
0.301576 0.334394 0.246744 0.278657 0.191912 0.195052 c
0.000000 -0.000025 l
0.246745 0.083578 l
1.809460 0.557339 3.125428 1.699938 3.947910 3.316297 c
4.907471 5.183470 5.099385 7.440799 4.441399 9.363708 c
4.304319 9.307972 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 22.481445 7.496582 cm
/Pattern cs
/P33 scn
4.770391 9.057154 m
3.399590 8.917813 2.165867 8.053897 1.096642 6.521143 c
0.383825 5.406414 0.000000 4.068738 0.000000 2.508117 c
0.000000 2.090093 0.027417 1.644202 0.082249 1.142573 c
0.109665 0.696682 0.191912 0.334393 0.274160 -0.000027 c
0.411241 0.027843 l
0.328992 0.390131 0.274161 0.780287 0.219329 1.142573 c
0.219329 1.226177 l
0.219329 1.755674 l
0.219329 4.347421 1.754627 7.329323 4.660727 7.970292 c
4.715559 7.998161 l
4.715559 8.137503 l
4.715559 8.248976 4.742975 8.388316 4.797807 8.499789 c
4.825223 8.639131 4.880056 8.778472 4.880056 8.917813 c
4.880056 9.085022 l
4.770391 9.057154 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.685059 11.929688 cm
/Pattern cs
/P34 scn
7.292666 4.094542 m
5.318712 4.038805 3.591501 3.230626 1.644963 1.447059 c
1.041810 1.056903 0.520905 0.583143 0.000000 0.137251 c
0.109662 0.025779 l
2.028785 1.614269 4.523646 2.645394 7.566827 3.147022 c
7.731323 3.174890 l
7.594243 3.286364 l
7.539411 3.342100 7.511995 3.481441 7.566827 3.704387 c
7.566827 3.871597 7.539411 4.122410 7.292666 4.094542 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.583496 15.773438 cm
/Pattern cs
/P35 scn
2.494861 1.477004 m
2.248116 1.449136 2.083620 1.393399 1.836876 1.309794 c
1.562715 1.226189 l
1.370803 1.170453 1.178891 1.170453 0.986979 1.170453 c
0.657987 1.170453 0.328993 1.142584 0.109665 0.891770 c
0.054832 0.808165 0.000000 0.696693 0.000000 0.557352 c
0.000000 0.473747 0.000002 0.390142 0.027418 0.306537 c
0.082250 0.167196 0.164496 0.055723 0.274160 0.027855 c
2.659355 -0.000013 4.523648 1.532740 6.333106 3.009757 c
7.566827 3.985146 l
7.484579 4.096619 l
6.141193 3.065494 4.551064 2.229446 2.494861 1.477004 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 29.198242 5.908081 cm
/Pattern cs
/P36 scn
1.096641 7.663783 m
0.932145 7.635914 0.740232 7.608046 0.575736 7.580178 c
0.411240 7.552310 0.219329 7.496573 0.082249 7.496573 c
0.000000 7.496573 l
0.000000 7.412968 l
0.383824 4.375328 2.275529 1.867185 3.893075 0.000012 c
4.030155 0.083618 l
3.591499 0.808192 l
3.207675 1.421294 2.796435 2.034395 2.577107 2.786838 c
2.577107 2.758970 l
2.577107 2.870443 2.494859 2.954047 2.412611 3.009784 c
2.357779 3.065520 2.302947 3.093389 2.302947 3.149125 c
2.193282 3.483544 l
2.028786 3.957304 1.864289 4.375328 1.809457 4.904825 c
1.782041 5.072034 1.699794 5.239244 1.644962 5.378585 c
1.562714 5.517927 1.507882 5.629400 1.480466 5.768742 c
1.453050 6.103160 1.398218 6.409711 1.343386 6.688394 c
1.288554 6.994945 1.233722 7.301495 1.206306 7.608046 c
1.206306 7.691650 l
1.096641 7.663783 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 25.387207 18.002869 cm
/Pattern cs
/P37 scn
0.000000 7.635902 m
1.453050 5.685125 2.494860 3.344192 3.399590 0.083607 c
3.427005 0.000001 l
3.509254 0.027870 l
3.591502 0.055738 3.701166 0.083607 3.810830 0.083607 c
4.030159 0.111475 4.276903 0.111475 4.331736 0.334421 c
4.002743 3.037641 2.577108 5.517916 0.109665 7.747375 c
0.000000 7.635902 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 25.168457 6.075256 cm
/Pattern cs
/P38 scn
2.412611 8.332630 m
0.685400 5.796619 0.274161 2.842585 0.000000 0.027892 c
0.164496 0.000025 l
0.685401 3.232741 1.754627 5.768751 3.317342 7.580187 c
3.372173 7.635924 l
2.467445 8.388367 l
2.412611 8.332630 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.459473 17.250488 cm
/Pattern cs
/P39 scn
2.878687 8.555546 m
2.796439 8.360468 2.796440 8.165391 2.796440 7.970313 c
2.796440 7.830972 2.823856 7.663762 2.823856 7.524421 c
2.494863 5.322829 1.672381 3.567130 0.630570 1.532748 c
0.000000 0.752437 l
0.109665 0.724568 l
0.438658 0.613095 0.685401 0.390149 0.849898 0.111466 c
0.932147 -0.000006 l
0.986978 0.111466 l
2.165869 2.368795 3.454424 5.350698 3.043183 8.555546 c
2.988352 8.834229 l
2.878687 8.555546 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.035156 11.565308 cm
/Pattern cs
/P40 scn
0.603154 3.372060 m
0.000000 2.619617 l
0.027418 2.563880 l
0.822483 1.477018 2.248116 1.086863 3.481837 0.752444 c
3.701164 0.696707 l
4.934885 0.334419 6.004112 0.139342 7.100753 0.083605 c
7.155585 0.055737 l
7.402329 0.000001 7.731322 0.027869 8.060314 0.055737 c
8.060314 0.222946 l
7.758738 0.195078 7.457161 0.222946 7.155585 0.222946 c
4.989718 0.919653 2.686772 1.727833 0.740234 3.372060 c
0.685401 3.427795 l
0.603154 3.372060 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.739746 16.860291 cm
/Pattern cs
/P41 scn
0.000000 3.093386 m
0.109664 3.065517 0.219327 3.009781 0.328992 2.981913 c
0.438656 2.926176 0.548321 2.870440 0.685401 2.842572 c
3.043181 2.591757 5.181633 1.727841 7.621660 0.055746 c
7.703907 0.000010 l
7.731323 0.111483 l
7.758739 0.278692 8.087732 0.473770 8.197397 0.529507 c
8.279644 0.557375 l
8.224813 0.640979 l
6.634682 2.814703 4.030159 2.981913 1.480467 3.149122 c
0.000000 3.232727 l
0.000000 3.093386 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.465820 17.195007 cm
/Pattern cs
/P42 scn
0.000000 2.034104 m
0.082249 1.894763 l
1.480467 2.898020 3.207676 3.343912 4.825223 3.120966 c
6.826594 2.842284 8.252229 1.894763 8.745718 0.473482 c
8.773133 0.389877 l
9.760110 0.975110 l
9.732695 1.030847 l
9.184374 2.173445 8.224813 2.953756 6.799179 3.455385 c
4.605896 4.124223 2.001371 3.566858 0.000000 2.034104 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 29.773926 10.245667 cm
/Pattern cs
/P43 scn
0.328994 3.326168 m
0.246746 3.270432 0.191912 3.214695 0.137080 3.214695 c
0.000000 3.214695 l
0.082249 3.103222 l
2.165868 0.037714 6.525015 0.149187 9.540779 2.016360 c
9.458534 2.155701 l
8.361893 1.542600 7.210417 1.208181 6.058943 1.152445 c
4.167237 1.263917 2.385195 1.988492 0.657985 3.437642 c
0.548321 3.493378 0.438658 3.409773 0.328994 3.326168 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 24.576172 5.908081 cm
/Pattern cs
/P44 scn
2.483772 9.698133 m
-0.312666 7.608016 -0.833570 3.065492 1.359714 -0.000015 c
1.496794 0.083591 l
0.509816 1.672080 0.180824 3.762198 0.646897 5.545766 c
1.003306 6.939178 1.825786 8.026039 3.032093 8.639141 c
3.114342 8.667008 l
2.922430 8.945691 l
2.757934 9.168637 2.648269 9.335847 2.675685 9.614530 c
2.703101 9.781738 l
2.483772 9.698133 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.418945 15.912781 cm
/Pattern cs
/P45 scn
1.178888 9.976856 m
1.507880 9.558832 1.782040 9.140809 2.001368 8.639180 c
2.056199 8.388366 l
2.056199 7.942474 2.138447 7.496582 2.220695 7.078558 c
2.302943 6.632666 2.385192 6.186774 2.385192 5.740882 c
2.357775 5.322859 l
2.083615 3.901578 1.590128 2.145878 0.082249 1.226226 c
0.000000 1.170489 l
0.082249 1.086884 l
0.246745 0.947542 0.356409 0.724596 0.356409 0.473783 c
0.356409 0.390178 0.328991 0.306573 0.301575 0.222968 c
0.219329 0.000023 l
0.411240 0.111495 l
2.001367 1.142620 2.960928 3.093399 2.960928 5.350727 c
2.933512 5.824487 l
2.741600 6.994953 2.494856 7.886738 2.138448 8.667048 c
2.001368 9.168677 1.644960 9.586700 1.343384 9.976856 c
1.288553 10.032593 l
1.178888 9.976856 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.904297 10.456787 cm
/Pattern cs
/P46 scn
0.000000 0.941324 m
0.137080 0.885587 l
1.014393 3.895358 4.030158 6.737920 7.402330 6.013345 c
7.511995 5.985476 l
7.511995 6.096950 l
7.511995 6.236291 7.566827 6.319896 7.649075 6.431369 c
7.731323 6.542842 7.840987 6.682183 7.840987 6.877261 c
7.840987 6.932997 l
7.786155 6.932997 l
3.838246 7.991991 0.795065 3.978963 0.000000 0.941324 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.309082 14.101318 cm
/Pattern cs
/P47 scn
4.386568 2.090141 m
3.152845 1.281962 1.809459 1.031147 0.520905 1.365566 c
0.411241 1.393435 l
0.411241 1.281961 l
0.438657 0.947543 0.301578 0.696729 0.191914 0.418046 c
0.000000 0.000022 l
0.137080 0.027890 l
0.904730 0.083627 l
1.425635 0.111495 1.946541 0.167232 2.522278 0.278705 c
3.481839 0.557387 4.413983 1.142620 4.989720 1.867194 c
6.442770 3.260607 7.320084 4.849098 7.594244 6.576929 c
7.457164 6.604797 l
7.073339 4.793361 5.894450 3.065530 4.386568 2.090141 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 27.772461 6.214661 cm
/Pattern cs
/P48 scn
0.054831 7.775223 m
0.054831 7.775223 0.109662 7.329331 0.109662 7.301463 c
0.027414 6.967044 0.000000 6.632625 0.000000 6.298206 c
0.000000 5.573632 0.164495 4.849058 0.493487 4.263824 c
1.919121 1.867155 4.057572 0.278664 6.196023 -0.000018 c
6.223439 0.139323 l
3.920492 0.780293 2.138449 2.313046 1.343384 4.319560 c
1.069224 5.378553 1.014392 6.326075 1.206304 7.217858 c
1.233721 7.329331 l
1.124057 7.329331 l
0.767649 7.301464 0.548320 7.496541 0.328992 7.719486 c
0.027416 7.998169 l
0.054831 7.775223 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 24.812012 17.696350 cm
/Pattern cs
/P49 scn
0.000000 7.691652 m
0.630569 7.468706 1.178889 7.245760 1.672378 7.022814 c
3.975325 5.768743 5.373543 3.539283 5.373543 1.003272 c
5.346128 0.473775 l
5.373544 0.306565 5.483208 0.250829 5.620288 0.167224 c
5.867033 0.000014 l
5.921864 0.055751 l
6.196024 0.529511 6.305689 1.031140 6.305689 1.616374 c
6.305689 2.368816 6.058945 3.176996 5.620288 3.957307 c
4.797807 5.322851 3.564086 6.326108 1.727211 7.162156 c
1.178890 7.440838 0.630569 7.691652 0.027416 7.830994 c
0.000000 7.691652 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 21.890137 14.853638 cm
/Pattern cs
/P50 scn
0.125697 8.388367 m
-0.559704 4.821230 1.606161 0.445914 5.444407 0.000022 c
5.334743 0.334441 5.334744 0.696728 5.334744 1.031147 c
4.101022 0.919674 2.949549 1.616381 2.044820 2.424560 c
0.482106 4.013051 -0.203295 6.214643 0.125697 8.388367 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 22.262207 14.965149 cm
/Pattern cs
/P51 scn
1.151474 2.396678 m
1.836875 1.449157 3.070597 0.250823 4.962303 0.000009 c
4.880055 0.278691 4.880054 0.585242 4.880054 0.863925 c
3.838245 0.808188 2.741603 1.254080 1.617546 2.257337 c
0.877313 3.009780 0.328992 3.901564 0.000000 4.876953 c
0.246744 3.957301 0.630570 3.121253 1.151474 2.396678 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.638672 8.165283 cm
/Pattern cs
/P52 scn
5.209044 0.000001 m
5.675116 3.567138 3.975324 8.165400 0.000000 8.639160 c
0.109664 8.304741 0.219327 7.942455 0.328992 7.608036 c
3.838243 7.134275 5.428372 3.232718 5.209044 0.000001 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.748047 10.729187 cm
/Pattern cs
/P53 scn
0.000000 5.963806 m
0.000000 5.963806 0.246744 5.183495 0.274160 5.099890 c
2.878684 4.737603 4.441397 2.508143 4.989717 0.000001 c
4.770390 1.477018 4.222069 2.842562 3.427004 3.901556 c
2.522275 5.072022 1.343386 5.796597 0.000000 5.963806 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 21.905762 8.053833 cm
/Pattern cs
/P54 scn
0.000000 0.222917 m
2.275531 -0.000029 4.633310 0.334390 6.442769 1.950748 c
7.566827 2.870400 8.252226 4.124471 8.581219 5.517883 c
8.361891 5.406410 7.895818 5.517883 7.895818 5.406410 c
7.100753 4.263812 6.771762 2.981873 5.867033 2.062221 c
4.304318 0.585204 2.138451 -0.000029 0.000000 0.222917 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 25.168457 8.527588 cm
/Pattern cs
/P55 scn
4.907470 4.904835 m
4.852638 4.904835 4.742974 4.904835 4.715559 4.904835 c
4.386566 4.431075 4.139821 3.957315 3.920493 3.483555 c
3.564084 2.786849 3.235092 2.118010 2.686771 1.560645 c
1.919122 0.836071 1.014394 0.334443 0.000000 0.000024 c
1.233722 0.250838 2.275532 0.780334 3.152845 1.560645 c
4.167238 2.396693 4.880055 3.539291 5.236464 4.960571 c
5.126799 4.932703 5.017134 4.904835 4.907470 4.904835 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 28.595703 17.627197 cm
/Pattern cs
/P56 scn
8.142561 5.726277 m
6.333103 5.837750 4.523644 5.614804 2.823850 4.806625 c
1.233720 3.886973 0.000000 2.270614 0.000000 0.319837 c
0.328992 0.431310 0.685400 0.542782 1.014392 0.654255 c
1.233721 4.109919 4.962301 6.088565 8.142561 5.726277 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 28.677734 18.058533 cm
/Pattern cs
/P57 scn
2.769020 4.319590 m
1.069225 3.316333 0.027416 1.727842 0.000000 0.000010 c
0.082248 0.027879 0.795066 0.278693 0.877315 0.306561 c
1.069227 2.703231 2.851268 4.319590 4.962303 5.016296 c
4.167238 4.849087 3.454421 4.626141 2.769020 4.319590 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.082031 11.509460 cm
/Pattern cs
/P58 scn
0.000000 4.263855 m
1.699795 1.281954 5.784787 0.000014 8.827968 1.504899 c
9.047296 1.727845 9.294039 1.978659 9.623032 2.090132 c
9.403703 2.201605 9.156959 2.563892 9.047295 2.424551 c
7.813573 2.062263 6.662099 1.365558 5.318713 1.365558 c
3.289926 1.504899 1.233722 2.647497 0.000000 4.263855 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.767578 11.760315 cm
/Pattern cs
/P59 scn
8.087731 1.309807 m
8.279644 1.504884 8.498972 1.699961 8.773132 1.839302 c
8.718300 1.867171 8.663468 1.922907 8.608637 1.978643 c
8.553804 2.034380 8.444141 2.117985 8.416725 2.117985 c
8.389307 2.117985 l
8.361892 2.117985 l
7.950651 2.006512 7.539410 1.839302 7.155586 1.699961 c
6.360520 1.393411 5.538041 1.086861 4.605896 1.086861 c
2.960933 1.170466 1.261138 1.950775 0.000000 3.149109 c
1.946539 0.836046 5.400959 0.000000 8.087731 1.309807 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.404785 15.464722 cm
/Pattern cs
/P60 scn
9.376287 0.420085 m
8.800550 1.228264 8.005485 1.924971 7.237835 2.482336 c
6.908843 2.705282 6.552435 2.816755 6.223443 3.067569 c
4.304320 4.098694 1.699795 4.098694 0.000000 2.593809 c
0.219328 2.370863 0.575737 2.370863 0.795066 2.120049 c
3.509254 4.210168 7.457165 2.956096 9.376287 0.420085 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.514648 17.274292 cm
/Pattern cs
/P61 scn
0.000000 0.784172 m
0.082248 0.728435 0.191912 0.672699 0.301576 0.616962 c
0.438656 0.561226 0.548319 0.505489 0.657983 0.421884 c
2.659355 1.926770 5.346127 1.620219 7.374914 0.366148 c
7.265250 0.449753 7.183004 0.533357 7.073340 0.616962 c
6.908844 0.728435 6.744347 0.812040 6.579851 0.895645 c
6.415354 0.979249 6.223440 1.062854 6.058943 1.202196 c
4.057572 2.261189 1.562714 2.093980 0.000000 0.784172 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 29.253418 5.183411 cm
/Pattern cs
/P62 scn
0.000000 -0.000016 m
3.043178 1.950761 4.633309 6.549022 2.494859 9.781738 c
2.494859 9.670265 2.494859 9.558792 2.385195 9.447319 c
2.165867 9.335846 1.919123 9.112901 1.809459 8.862086 c
4.194653 6.214603 2.604522 1.950761 0.000000 -0.000016 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.815918 6.632568 cm
/Pattern cs
/P63 scn
0.877313 7.914578 m
0.657984 7.803105 0.466072 7.608027 0.356407 7.412950 c
1.124057 6.549034 1.507883 5.462173 1.507883 4.263838 c
1.507883 4.068760 1.507883 3.901551 1.480467 3.706473 c
1.370803 2.424534 0.795065 1.114725 0.000000 -0.000005 c
0.849898 1.003253 1.453049 2.201588 1.727210 3.511395 c
1.836874 3.985156 1.864290 4.458915 1.864290 4.932675 c
1.864290 6.075274 1.562714 7.162135 0.986977 8.081787 c
0.959561 8.053919 0.932145 7.998183 0.877313 7.914578 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 26.075195 16.692993 cm
/Pattern cs
/P64 scn
3.424799 9.781738 m
1.725003 8.388326 0.244534 6.549022 0.025206 4.263825 c
-0.084458 2.758940 0.134870 1.170450 1.258929 -0.000016 c
1.478258 0.222930 1.478259 0.585217 1.725003 0.808163 c
-0.440866 3.567119 0.710608 7.803093 3.424799 9.781738 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 26.155273 16.804504 cm
/Pattern cs
/P65 scn
0.027416 4.124485 m
0.000000 3.455647 l
0.000000 2.006498 0.411240 0.836031 1.178891 -0.000017 c
1.233723 0.083588 1.288557 0.195062 1.343389 0.306535 c
1.398222 0.445876 1.453053 0.557349 1.535301 0.668822 c
0.822483 1.616343 0.438657 2.786809 0.438657 4.068748 c
0.438657 5.211347 0.740233 6.353945 1.315972 7.385071 c
0.575737 6.353945 0.137080 5.267083 0.027416 4.124485 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 24.291016 17.166748 cm
/Pattern cs
/P66 scn
0.000000 7.803101 m
0.575737 5.044144 2.028789 2.619606 3.838249 0.557355 c
3.728585 0.557355 3.618922 0.445882 3.509257 0.222936 c
3.399593 0.111463 3.289927 -0.000010 3.180263 0.111463 c
1.480467 1.616348 0.795067 3.567126 0.466074 5.740849 c
0.219330 6.409688 0.109664 7.106394 0.000000 7.803101 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 24.812012 17.278259 cm
/Pattern cs
/P67 scn
0.000000 5.657227 m
0.411241 3.065480 1.233722 1.337648 2.686772 0.055709 c
2.741604 -0.000028 2.769019 0.027841 2.906099 0.167182 c
2.988348 0.334392 3.070596 0.445864 3.180260 0.501601 c
1.727210 2.173696 0.657985 3.901527 0.000000 5.657227 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.706543 6.346802 cm
/Pattern cs
/P68 scn
3.755998 0.090684 m
3.317342 1.929988 2.522277 3.657820 1.480467 5.385652 c
1.261139 5.608598 1.151475 5.859411 0.904731 6.193830 c
0.575738 6.667590 0.000000 6.890537 0.000000 7.336429 c
0.000000 7.559375 0.328992 7.921661 0.575737 7.810188 c
2.851269 5.970884 3.098013 2.849641 3.755998 0.090684 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.815918 8.276733 cm
/Pattern cs
/P69 scn
0.246745 5.768752 m
0.109665 5.685147 0.000000 5.517937 0.000000 5.406464 c
0.000000 5.155650 0.219328 4.960571 0.438656 4.765493 c
0.603153 4.626152 0.740232 4.486812 0.877313 4.319602 c
1.041809 4.068787 l
1.178889 3.873709 1.288553 3.706501 1.425634 3.539291 c
2.165867 2.285219 2.741605 1.114752 3.152845 0.000022 c
2.686773 2.201614 2.165868 4.431075 0.411241 5.852356 c
0.383825 5.852356 0.274161 5.796620 0.246745 5.768752 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.815918 17.055298 cm
/Pattern cs
/P70 scn
7.621656 4.013000 m
6.716928 3.678581 5.702533 3.427767 4.797804 2.870402 c
4.688140 2.758929 4.468812 2.870402 4.331732 2.758929 c
3.755996 2.424510 3.317341 2.173696 2.851268 1.727804 c
2.631940 1.504858 2.275531 1.504858 2.056203 1.254044 c
1.590130 0.780283 1.151474 0.445864 0.685401 -0.000028 c
0.466073 0.222918 0.219328 0.585205 0.000000 0.808151 c
2.083619 2.731061 4.907469 3.539240 7.621656 4.013000 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.953125 17.166748 cm
/Pattern cs
/P71 scn
0.000000 0.668818 m
0.109664 0.557345 0.191912 0.445872 0.301576 0.334399 c
0.383824 0.222926 0.493488 0.083585 0.575736 -0.000019 c
0.795064 0.195058 0.986977 0.390136 1.206305 0.585213 c
1.425633 0.780291 1.644961 0.975368 1.891706 1.226183 c
2.028786 1.365524 2.165866 1.421261 2.302946 1.476997 c
2.440026 1.532734 2.577104 1.588470 2.686769 1.699943 c
3.070593 2.090099 3.454417 2.313045 3.893074 2.591727 c
4.167236 2.758936 l
4.139818 2.758936 l
4.222066 2.842541 4.331730 2.842541 4.413979 2.842541 c
4.496226 2.842541 4.551060 2.842542 4.578476 2.870410 c
5.181629 3.260565 5.812194 3.483511 6.442762 3.678589 c
4.331729 3.176960 1.864289 2.424518 0.000000 0.668818 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 20.206055 10.701355 cm
/Pattern cs
/P72 scn
0.000000 -0.000021 m
2.714188 0.696685 5.099385 2.062230 7.347500 3.678589 c
7.457164 3.455643 7.923236 3.204829 7.813572 2.981883 c
5.675120 0.919631 2.823852 0.111452 0.000000 -0.000021 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 20.973633 10.840637 cm
/Pattern cs
/P73 scn
0.000000 0.000028 m
2.878684 0.250842 5.236463 1.226229 6.991089 2.898324 c
6.991089 2.926193 l
6.991089 3.009797 6.908840 3.093402 6.771760 3.232743 c
6.689512 3.288479 6.634681 3.372084 6.579848 3.455688 c
4.139822 1.727858 2.083619 0.640997 0.000000 0.000028 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 28.924316 18.058533 cm
/Pattern cs
/P74 scn
3.289923 7.942444 m
1.919122 5.517906 0.904728 2.758949 1.014392 -0.000008 c
0.685400 -0.000008 0.328992 -0.000008 0.000000 -0.000008 c
0.219328 3.009764 1.699793 5.517906 3.289923 7.942444 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 29.006348 18.142090 cm
/Pattern cs
/P75 scn
0.000000 0.000006 m
0.137080 0.000006 0.740233 0.000006 0.849897 0.000006 c
0.849897 0.111479 0.849897 0.222952 0.849897 0.334425 c
0.849897 2.229466 1.370801 4.263849 2.357779 6.381836 c
1.206305 4.486794 0.219328 2.396675 0.000000 0.000006 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 26.319824 5.517761 cm
/Pattern cs
/P76 scn
0.000000 0.000016 m
0.109664 0.334435 0.328992 0.585250 0.575737 0.808196 c
1.699795 2.758973 2.165868 4.709750 2.604525 6.911342 c
2.604525 7.245761 2.604525 7.496575 2.604525 7.830994 c
2.933517 7.719521 3.289925 7.719521 3.618917 7.830994 c
3.070596 4.960565 2.165868 2.090135 0.000000 0.000016 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 27.005371 6.381714 cm
/Pattern cs
/P77 scn
2.001372 6.047412 m
1.535299 3.790084 1.096642 1.895042 0.000000 0.000000 c
1.699795 2.062251 2.412612 4.709736 2.851269 6.855591 c
2.577108 6.771986 2.275532 6.771986 2.001372 6.855591 c
2.001372 6.716249 2.001372 6.047412 2.001372 6.047412 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.748047 12.518616 cm
/Pattern cs
/P78 scn
7.703907 0.244945 m
7.484579 0.467891 7.237834 0.718706 7.018506 0.830179 c
4.742974 1.749832 2.494860 2.558012 0.000000 2.558012 c
0.000000 2.892431 0.000000 3.143245 0.000000 3.477664 c
1.370802 3.812083 2.714189 3.143245 3.975327 2.558012 c
5.318713 1.972778 6.579849 1.303939 7.703907 0.244945 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.830566 13.478821 cm
/Pattern cs
/P79 scn
0.000000 2.461712 m
0.000000 2.350239 0.000000 1.792874 0.000000 1.681401 c
2.302947 1.653533 4.386565 0.984696 6.333103 0.204385 c
5.620286 0.706013 4.825222 1.124037 3.865660 1.542060 c
3.646331 1.653533 l
2.467442 2.183029 1.233721 2.740394 0.000000 2.461712 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.301270 14.742249 cm
/Pattern cs
/P80 scn
0.000000 4.013000 m
0.219328 3.901528 0.466073 3.901527 0.685401 3.790054 c
2.960932 2.285169 5.318711 1.727805 7.813570 1.476991 c
7.703906 1.254045 7.923234 0.780285 7.923234 0.780285 c
4.880054 -0.000026 2.385195 2.396643 0.000000 4.013000 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.739746 14.992981 cm
/Pattern cs
/P81 scn
0.795066 2.981916 m
2.823853 1.504900 4.907473 0.000014 7.374917 0.613116 c
7.320084 0.724589 7.265252 0.919667 7.265252 1.086876 c
7.265252 1.114744 7.265251 1.142612 7.292667 1.170481 c
4.386567 1.449163 2.193283 2.145869 0.191911 3.455677 c
0.137079 3.483545 0.082248 3.511414 0.000000 3.511414 c
0.356409 3.288468 0.795066 2.981916 0.795066 2.981916 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.630371 13.543884 cm
/Pattern cs
/P82 scn
0.000000 6.019531 m
0.466073 4.403172 1.480467 2.926155 2.933517 1.978634 c
4.413983 1.058982 6.223440 0.585222 7.676490 1.504874 c
7.786154 1.170455 7.895820 0.919641 8.005484 0.585222 c
6.771762 -0.000011 5.510623 0.111462 4.276901 0.585222 c
2.165866 1.532743 0.575737 3.706466 0.000000 6.019531 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 20.727051 13.738953 cm
/Pattern cs
/P83 scn
3.235095 0.501619 m
4.578481 -0.000010 5.757370 -0.000010 6.854012 0.473750 c
6.826596 0.585223 6.607267 1.114719 6.579851 1.254061 c
5.291297 0.501618 3.564087 0.668828 1.836876 1.755690 c
1.124059 2.201582 0.520905 2.786814 0.000000 3.483521 c
0.795065 2.117976 1.919124 1.058984 3.235095 0.501619 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.336914 11.381287 cm
/Pattern cs
/P84 scn
7.895816 0.824949 m
7.429744 1.967547 6.771757 2.998673 5.867028 3.806853 c
4.167234 5.060925 2.248113 5.534685 0.219327 5.534685 c
0.109663 5.534685 0.109664 5.869104 0.000000 6.008446 c
3.481835 7.039571 6.744343 4.029799 7.895816 0.824949 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.419434 14.252319 cm
/Pattern cs
/P85 scn
0.000000 3.081666 m
0.027416 3.025929 0.054833 2.970193 0.054833 2.914457 c
0.082249 2.858720 0.082249 2.775115 0.109665 2.747247 c
2.385197 2.747247 4.222074 2.189881 5.812205 1.019414 c
6.004117 0.852204 6.168612 0.684995 6.333108 0.489918 c
4.797810 2.468564 2.440029 3.750504 0.000000 3.081666 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 27.619141 17.473328 cm
/Pattern cs
/P86 scn
5.280615 8.193237 m
2.237437 7.162112 -0.257422 3.706449 1.085963 0.473732 c
0.756971 0.362258 0.400564 0.362258 0.181235 -0.000029 c
-0.723493 3.594975 1.881028 7.273585 5.280615 8.193237 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 27.690430 17.668396 cm
/Pattern cs
/P87 scn
0.000000 1.254050 m
0.000000 0.836027 0.054832 0.418003 0.137080 -0.000021 c
0.301576 0.167189 0.520904 0.250793 0.740232 0.306530 c
0.740232 0.306530 0.822482 0.334398 0.904730 0.362266 c
0.657985 0.947499 0.548320 1.560601 0.548320 2.173702 c
0.548320 2.898277 0.712816 3.622851 1.014392 4.347425 c
1.453048 5.350682 2.220698 6.270335 3.125427 6.967041 c
1.233721 5.629365 0.000000 3.455642 0.000000 1.254050 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 25.634277 5.880127 cm
/Pattern cs
/P88 scn
0.000000 0.000010 m
0.575737 0.111484 1.233721 0.222957 1.699794 0.696717 c
2.385195 1.504896 3.289925 1.950788 3.838245 2.870440 c
4.633310 4.375324 5.209048 5.963814 4.633311 7.580172 c
4.962304 7.580172 5.318712 7.803118 5.428377 8.165405 c
6.113778 6.103155 5.318711 3.790091 3.838245 2.173732 c
2.714188 1.142607 1.590130 0.334430 0.000000 0.000010 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 27.608398 6.716125 cm
/Pattern cs
/P89 scn
2.769019 6.688397 m
2.906099 6.270373 2.988345 5.824481 2.988345 5.378589 c
2.988345 4.068781 2.412611 2.814709 1.946538 1.978661 c
1.617546 1.421296 1.151474 1.031141 0.712818 0.668854 c
0.466074 0.473776 0.219328 0.250829 0.000000 0.000015 c
0.575736 0.334434 1.178890 0.780326 1.836874 1.393428 c
2.988346 2.647500 3.646330 4.235990 3.646330 5.740876 c
3.646330 6.214636 3.564083 6.660528 3.454419 7.078552 c
3.289923 6.883474 3.043179 6.716266 2.769019 6.688397 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 24.043457 15.745422 cm
/Pattern cs
/P90 scn
0.795794 9.558838 m
-0.437928 6.576935 0.220056 2.424566 3.290653 0.808208 c
3.071325 0.585261 3.290654 0.222975 3.071326 0.000029 c
-0.437928 1.644255 -0.547593 6.465462 0.795794 9.558838 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 24.126953 15.856934 cm
/Pattern cs
/P91 scn
0.000000 5.517924 m
0.000000 3.288464 0.795065 1.031136 2.960931 0.000011 c
3.015763 0.083616 3.015762 0.195088 3.015762 0.306561 c
3.015762 0.418034 3.015763 0.557376 3.098011 0.696717 c
1.014394 1.839315 0.054831 4.152380 0.054831 6.437576 c
0.054831 6.521181 0.054831 6.576918 0.054831 6.660522 c
0.027415 6.270367 0.000000 5.880211 0.000000 5.517924 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.528809 5.991577 cm
/Pattern cs
/P92 scn
2.138455 -0.000015 m
3.618923 2.870414 3.043184 7.134254 0.000000 8.639139 c
0.328993 8.973558 0.328992 9.447319 0.466072 9.781738 c
1.041810 9.196506 1.590133 8.750613 2.165870 8.053907 c
2.741608 7.245728 3.070600 6.214602 3.070600 5.294950 c
3.289928 3.455646 3.043185 1.616343 2.138455 -0.000015 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.638672 8.639099 cm
/Pattern cs
/P93 scn
0.328991 6.799832 m
0.274159 6.549018 0.191912 6.242467 0.000000 5.991652 c
1.206304 5.378551 2.083614 4.319558 2.549686 2.898278 c
2.769014 2.201572 2.878679 1.449129 2.878679 0.668818 c
2.878679 0.445872 2.851264 0.222927 2.851264 -0.000019 c
2.906096 0.418005 2.960926 0.863896 2.960926 1.309788 c
2.960926 1.727811 2.933511 2.173704 2.878679 2.619596 c
2.878679 3.539248 2.549687 4.542504 1.973951 5.350683 c
1.590127 5.796575 1.233719 6.158862 0.849895 6.521150 c
0.849895 6.521150 0.520904 6.855568 0.383824 6.967041 c
0.356408 6.883436 0.328991 6.799832 0.328991 6.799832 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 29.390625 17.663696 cm
/Pattern cs
/P94 scn
9.485950 2.596419 m
7.457163 3.516071 5.071968 3.627544 3.043182 2.484946 c
2.248116 1.899713 1.562716 1.230874 1.124059 0.311222 c
0.795067 0.645641 0.328992 0.534168 0.000000 0.534168 c
0.109664 0.645641 0.219330 0.757114 0.328994 0.868587 c
0.767650 1.788239 1.562714 2.596419 2.467443 2.930838 c
4.742974 3.739018 7.457163 3.850490 9.485950 2.596419 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 29.554688 17.892883 cm
/Pattern cs
/P95 scn
2.330363 2.618096 m
1.480466 2.283678 0.685400 1.531235 0.219327 0.583715 c
0.219327 0.583715 0.027416 0.388637 0.000000 0.360769 c
0.274160 0.388637 0.630568 0.388638 0.904728 0.165692 c
1.315969 0.973871 1.946538 1.670576 2.796435 2.311546 c
4.222069 3.119725 5.921864 3.342670 7.594242 3.008252 c
6.058944 3.398407 4.194654 3.286934 2.330363 2.618096 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.876953 9.831177 cm
/Pattern cs
/P96 scn
0.000000 1.455384 m
2.933516 0.061972 6.689514 0.647205 8.718300 3.629106 c
8.827964 3.740579 9.047292 3.629106 9.294037 3.629106 c
9.074708 2.235694 7.923234 1.316043 6.689513 0.870151 c
4.413982 0.061972 2.138451 0.647205 0.000000 1.455384 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 22.975098 10.259705 cm
/Pattern cs
/P97 scn
5.675122 3.144823 m
4.386568 1.249783 2.275532 0.190791 0.000000 0.218659 c
1.315971 0.023582 2.467445 0.107186 3.564087 0.497341 c
4.962306 1.026838 5.867034 1.974357 6.086363 3.116954 c
6.004115 3.116954 5.921867 3.144823 5.921867 3.144823 c
5.812203 3.172691 5.702538 3.200559 5.675122 3.144823 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.054688 13.553528 cm
/Pattern cs
/P98 scn
0.000000 1.244405 m
1.699795 4.449254 6.086361 6.455768 9.348869 4.337780 c
9.047294 4.142703 8.827966 3.864020 8.608638 3.613206 c
7.703908 4.504990 6.415354 4.700068 5.209048 4.644331 c
2.988348 4.421385 1.096642 3.139446 0.000000 1.244405 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 21.412598 17.063538 cm
/Pattern cs
/P99 scn
2.385197 1.413005 m
1.535300 1.190059 0.712817 0.772035 0.000000 0.270407 c
0.849897 0.799904 1.809460 1.134323 2.851269 1.217927 c
4.359152 1.273664 5.483211 0.939245 6.250860 0.214670 c
6.415356 0.437616 6.607267 0.660562 6.854012 0.827772 c
5.209049 1.831029 3.536671 1.691688 2.385197 1.413005 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.514648 11.398010 cm
/Pattern cs
/P100 scn
9.403698 5.545776 m
7.539408 2.480269 3.372171 -0.000004 0.000000 2.201587 c
0.301576 2.396665 0.603151 2.591743 0.904728 2.786821 c
3.920491 0.891780 7.594240 2.926162 9.403698 5.545776 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.679199 12.679993 cm
/Pattern cs
/P101 scn
0.767648 1.421267 m
0.712816 1.393399 0.137080 1.003243 0.000000 0.919638 c
1.151474 0.195064 2.522274 -0.000013 3.920492 0.306538 c
5.209046 0.613088 6.497601 1.337661 7.566826 2.313049 c
5.592872 0.752429 2.988347 0.027856 0.767648 1.421267 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 28.266602 16.832336 cm
/Pattern cs
/P102 scn
0.000000 9.642395 m
1.891707 8.360456 3.536670 6.576888 3.920495 4.152350 c
4.222071 2.703201 3.975327 1.281920 3.372174 -0.000019 c
3.262510 0.222927 2.851268 0.445872 2.906100 0.529477 c
3.015764 1.922890 3.536670 3.121225 3.399590 4.431033 c
3.125429 6.604756 1.809459 8.416192 0.000000 9.642395 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.733887 16.971619 cm
/Pattern cs
/P103 scn
1.041812 4.291740 m
1.069228 4.152399 1.069227 4.013058 1.069227 3.845848 c
1.069227 3.232747 0.932147 2.619645 0.822482 2.006544 c
0.712818 1.477047 0.603153 0.947550 0.575737 0.390184 c
0.575737 0.390184 0.575737 0.390185 0.575737 0.362317 c
0.603153 0.334448 0.657985 0.278712 0.712817 0.222976 c
0.795066 0.167239 0.877315 0.083634 0.932147 0.000030 c
1.343388 0.919682 1.562717 1.839334 1.562717 2.758986 c
1.562717 3.177011 1.507885 3.567166 1.425637 3.985190 c
1.233725 5.127788 0.740234 6.186781 0.000000 7.162170 c
0.520905 6.298254 0.877315 5.322866 1.041812 4.291740 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 26.413086 5.266968 cm
/Pattern cs
/P104 scn
3.991913 0.000026 m
2.511448 1.086887 1.250312 2.424564 0.427831 4.124527 c
-0.230153 5.852359 -0.202738 7.914609 1.030983 9.419495 c
1.222895 9.112944 1.414806 8.806394 1.606719 8.499843 c
-0.367234 5.685149 1.305144 1.755725 3.991913 0.000026 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 26.484375 7.412842 cm
/Pattern cs
/P105 scn
0.000000 4.235979 m
0.000000 3.511405 0.137080 2.731093 0.411240 2.006519 c
0.740232 1.309813 1.178889 0.640975 1.699793 0.000006 c
0.986977 1.114736 0.548320 2.368807 0.548320 3.567142 c
0.548320 4.598267 0.822479 5.517919 1.398215 6.353967 c
1.343383 6.409703 0.986977 6.994936 0.904729 7.134277 c
0.328993 6.326098 0.000000 5.322841 0.000000 4.235979 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 21.439941 17.128479 cm
/Pattern cs
/P106 scn
0.000000 5.361118 m
3.180260 6.587321 7.128170 4.943094 8.553803 1.821850 c
8.581220 1.487431 8.608636 1.180881 8.800549 0.874330 c
8.553803 0.930066 8.169979 0.818594 8.142563 0.957935 c
7.402330 2.016928 6.936256 3.298868 5.894447 4.162784 c
4.249485 5.388987 1.946538 5.807010 0.000000 5.361118 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 22.509277 17.631470 cm
/Pattern cs
/P107 scn
0.000000 5.081039 m
1.727211 5.192512 3.509254 4.718751 4.852640 3.743362 c
5.565457 3.158129 6.004112 2.377818 6.442769 1.625375 c
6.662097 1.263088 6.881426 0.872932 7.128170 0.510645 c
7.128170 0.482777 l
7.128170 0.454909 l
7.155586 0.427041 7.292666 0.427041 7.374915 0.427041 c
7.429747 0.427041 7.511994 0.427041 7.566826 0.427041 c
7.429746 0.705723 7.402331 0.984406 7.374915 1.263088 c
6.113777 4.049913 2.933516 5.610536 0.000000 5.081039 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 28.759766 8.334900 cm
/Pattern cs
/P108 scn
8.663464 0.750021 m
7.731319 0.499207 6.689509 0.471338 5.702532 0.527074 c
5.291292 0.554942 4.962300 0.694284 4.551060 0.722152 c
2.412610 1.168044 0.411240 2.840139 0.000000 5.069599 c
0.328992 5.097467 0.575735 4.874522 0.904728 4.930258 c
1.727208 1.586068 5.592869 0.025446 8.663464 0.750021 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 28.896973 8.917786 cm
/Pattern cs
/P109 scn
4.441398 0.222925 m
4.633311 0.195056 4.825222 0.167189 5.017135 0.111453 c
5.209047 0.083584 5.373545 0.027847 5.592874 -0.000021 c
5.702538 -0.000021 5.812201 -0.000021 5.921865 -0.000021 c
3.591501 0.362266 1.370801 1.839283 0.740232 4.263820 c
0.603152 4.263820 0.466072 4.291689 0.328992 4.347426 c
0.219328 4.375294 0.109664 4.403162 0.000000 4.431030 c
0.356409 2.396648 2.193283 0.696685 4.441398 0.222925 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.775879 14.965149 cm
/Pattern cs
/P110 scn
4.139821 9.168640 m
5.291295 5.685109 3.673749 1.114717 0.000000 -0.000013 c
0.082248 0.083591 0.137080 0.167196 0.137080 0.334406 c
0.027416 0.557352 -0.000001 0.891770 0.054831 1.142585 c
3.509252 1.672081 4.934886 5.991660 4.139821 9.168640 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.830566 15.160217 cm
/Pattern cs
/P111 scn
3.207679 3.037666 m
2.412613 1.839331 1.315970 1.086888 0.027416 0.891811 c
0.027416 0.836074 0.000000 0.752469 0.000000 0.696733 c
0.000000 0.529523 0.027416 0.334445 0.109665 0.195105 c
0.109665 0.167236 0.109665 0.167236 0.109665 0.139368 c
0.109665 0.083631 0.109665 0.027894 0.082249 0.000026 c
1.507883 0.501655 2.714190 1.588516 3.481839 3.093402 c
4.057576 4.208132 4.331734 5.462203 4.331734 6.716274 c
4.331734 6.772011 4.331734 6.827747 4.331734 6.883484 c
4.304318 5.462203 3.920496 4.096659 3.207679 3.037666 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 22.552246 7.496460 cm
/Pattern cs
/P112 scn
0.285802 -0.000006 m
-0.180270 2.173717 -0.180272 4.542520 1.080866 6.465429 c
1.930763 7.691632 3.109654 8.806362 4.699784 8.973572 c
4.727201 8.639153 4.507872 8.388338 4.562704 8.053919 c
1.163115 7.301476 -0.591511 3.260579 0.285802 -0.000006 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 22.673828 10.506165 cm
/Pattern cs
/P113 scn
1.041810 3.399950 m
0.411241 2.424561 0.054832 1.281962 0.000000 0.000023 c
0.411240 2.257351 1.891706 4.514680 4.359148 5.099913 c
4.359148 5.239254 4.413980 5.378595 4.441397 5.517937 c
4.468812 5.629410 4.496227 5.740883 4.523643 5.852356 c
3.207674 5.713015 2.056202 4.876967 1.041810 3.399950 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.739746 11.986328 cm
/Pattern cs
/P114 scn
0.000000 0.024791 m
2.165867 1.808359 4.797808 2.728011 7.484580 3.173903 c
7.402331 3.257508 7.374914 3.396850 7.429746 3.647664 c
7.402330 3.814873 7.402331 3.982083 7.237834 3.954214 c
4.989719 3.898478 3.262509 2.811615 1.617547 1.334598 c
1.041810 0.944442 0.520905 0.470683 0.000000 0.024791 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 21.412109 13.216064 cm
/Pattern cs
/P115 scn
5.592875 2.640839 m
3.646335 2.585103 1.946539 1.776923 0.027416 0.021223 c
0.027416 0.021223 0.027416 0.021223 0.000000 0.021223 c
1.617547 0.940875 3.509255 1.609714 5.702539 1.972001 c
5.675123 2.027737 5.675124 2.083475 5.675124 2.139211 c
5.675124 2.222816 5.675123 2.306420 5.702539 2.390025 c
5.675123 2.612971 5.647707 2.668708 5.592875 2.640839 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.674316 15.856934 cm
/Pattern cs
/P116 scn
7.475762 3.957275 m
5.967881 2.814677 4.295503 1.978631 2.431213 1.309793 c
2.102221 1.281925 1.882892 1.170451 1.499068 1.058978 c
0.950748 0.919637 0.375012 1.114715 0.073436 0.752428 c
-0.063644 0.585219 -0.008813 0.083590 0.237932 0.027853 c
3.144030 -0.000015 5.227648 2.257313 7.475762 3.957275 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.775391 15.940552 cm
/Pattern cs
/P117 scn
2.357779 1.170471 m
2.111034 1.142603 1.919122 1.086866 1.699793 1.003261 c
1.425633 0.919657 l
1.206305 0.863920 1.014394 0.863920 0.795065 0.863920 c
0.466073 0.863920 0.191911 0.836052 0.054831 0.640974 c
0.027415 0.585238 0.000000 0.501634 0.000000 0.390161 c
0.000000 0.334424 -0.000000 0.250819 0.027416 0.195083 c
0.054832 0.139347 0.082248 0.055741 0.164496 0.027873 c
2.412611 0.000005 4.194653 1.421285 5.921863 2.814697 c
4.880054 2.201596 3.728580 1.644231 2.357779 1.170471 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 29.280762 5.935852 cm
/Pattern cs
/P118 scn
3.865660 0.000012 m
3.372171 0.836060 2.741602 1.672108 2.385194 2.703233 c
2.357778 2.870443 2.111033 2.926178 2.111033 3.093388 c
1.891705 3.734358 1.672376 4.180249 1.617544 4.849087 c
1.590128 5.183506 1.315969 5.378583 1.288553 5.713002 c
1.233721 6.353972 1.096640 6.911337 1.014392 7.552307 c
0.685400 7.524439 0.301576 7.385098 0.000000 7.357229 c
0.356408 4.542537 2.056202 2.117999 3.865660 0.000012 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 29.362793 6.799683 cm
/Pattern cs
/P119 scn
0.438656 6.549061 m
0.301576 6.521193 0.137080 6.493324 0.000000 6.465456 c
0.356408 3.929446 1.782042 1.727854 3.180260 0.000023 c
2.823851 0.557388 2.467444 1.170491 2.248116 1.839329 c
2.248116 1.895065 2.193284 1.922932 2.138452 1.978669 c
2.056204 2.034405 1.973956 2.118011 1.973956 2.229483 c
1.973956 2.201614 l
1.864291 2.508166 l
1.672379 2.981926 1.535298 3.427818 1.480466 3.957314 c
1.453050 4.096656 1.398219 4.235996 1.315971 4.347469 c
1.233722 4.486811 1.151475 4.626152 1.151475 4.821229 c
1.124059 5.155648 1.069227 5.434330 1.014395 5.740881 c
0.959562 6.019564 0.932146 6.298247 0.877314 6.604797 c
0.740234 6.604797 0.575736 6.576929 0.438656 6.549061 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 25.442383 18.086365 cm
/Pattern cs
/P120 scn
0.000000 7.580139 m
1.672378 5.294942 2.659356 2.703195 3.427005 -0.000026 c
3.646333 0.111447 4.139821 -0.000026 4.194653 0.250788 c
3.838244 3.232691 2.138451 5.685098 0.000000 7.580139 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 25.963379 18.197876 cm
/Pattern cs
/P121 scn
2.960931 0.000003 m
3.043179 0.027872 3.152843 0.027871 3.235091 0.027871 c
3.427003 0.055739 3.591500 0.055740 3.618916 0.139344 c
3.317339 2.563881 2.083617 4.821209 0.000000 6.855591 c
1.206305 5.044155 2.138450 2.898300 2.960931 0.000003 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 25.250488 6.102966 cm
/Pattern cs
/P122 scn
0.000000 0.000022 m
0.438657 2.758978 1.370801 5.545804 3.180260 7.608054 c
2.906099 7.831000 2.659357 8.053946 2.385196 8.249023 c
0.685402 5.796618 0.274160 2.898319 0.000000 0.000022 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 25.497070 7.775146 cm
/Pattern cs
/P123 scn
0.000000 -0.000019 m
0.575737 2.452388 1.535297 4.431035 2.796434 5.935921 c
2.714186 6.019526 2.248116 6.409681 2.138451 6.493286 c
0.822482 4.486772 0.301576 2.229442 0.000000 -0.000019 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.568848 17.389648 cm
/Pattern cs
/P124 scn
2.851269 8.388367 m
2.714189 8.053947 2.769019 7.719529 2.796435 7.412978 c
2.467443 5.183517 1.590130 3.372081 0.575736 1.365567 c
0.356408 1.086884 0.219328 0.919675 0.000000 0.640993 c
0.328993 0.501651 0.603153 0.306574 0.795066 0.000023 c
2.138452 2.591771 3.207677 5.378595 2.851269 8.388367 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.678711 17.528992 cm
/Pattern cs
/P125 scn
0.520905 1.170496 m
0.520905 1.170496 0.109664 0.641000 0.000000 0.529527 c
0.274160 0.418054 0.493489 0.222977 0.657985 0.000031 c
1.644962 1.922940 2.714188 4.403214 2.714188 7.050697 c
2.714188 7.078566 2.714188 7.106434 2.714188 7.162170 c
2.385195 4.960579 1.562714 3.232747 0.520905 1.170496 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.089844 11.648804 cm
/Pattern cs
/P126 scn
7.978069 0.055747 m
7.649077 0.027879 7.347501 0.000010 7.100757 0.055747 c
4.770393 0.808189 2.522276 1.616369 0.575737 3.232727 c
0.356408 2.954045 0.219328 2.786834 0.000000 2.508152 c
0.849897 1.365554 2.330363 1.031136 3.646333 0.668848 c
5.071968 0.250825 6.470187 0.000010 7.978069 0.055747 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.199707 11.843933 cm
/Pattern cs
/P127 scn
0.000000 2.313046 m
0.767650 1.309789 2.083620 0.947502 3.344758 0.613083 c
3.564087 0.557346 l
4.551065 0.250795 5.428379 0.083586 6.305693 -0.000019 c
4.331737 0.640951 2.275532 1.449130 0.493488 2.926147 c
0.438656 2.842543 0.082248 2.396650 0.000000 2.313046 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.739746 16.971619 cm
/Pattern cs
/P128 scn
0.000000 3.037659 m
0.246744 2.981922 0.411241 2.842581 0.657985 2.786844 c
3.344756 2.480294 5.538038 1.421300 7.621656 0.000020 c
7.676488 0.250834 8.142559 0.473780 8.142559 0.473780 c
6.278269 3.037659 2.851267 2.758976 0.000000 3.037659 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 20.233398 17.083130 cm
/Pattern cs
/P129 scn
0.191911 2.758960 m
2.549691 2.508146 4.688141 1.644230 7.100753 0.000003 c
7.183001 0.167213 7.402331 0.306555 7.539412 0.362292 c
6.004113 2.424542 3.427005 2.591751 0.959561 2.731092 c
0.959561 2.731092 0.438657 2.758961 0.000000 2.814697 c
0.054832 2.786829 0.137079 2.758960 0.191911 2.758960 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.493164 17.288208 cm
/Pattern cs
/P130 scn
0.000000 1.885055 m
1.343386 2.832576 3.070596 3.362072 4.797807 3.111258 c
6.497601 2.888312 8.197395 2.080132 8.773132 0.408038 c
9.074709 0.603115 9.294037 0.714589 9.595613 0.909666 c
8.992460 2.163738 7.950652 2.860444 6.689514 3.306336 c
4.468814 3.975174 1.891707 3.306336 0.000000 1.885055 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 21.741211 17.636963 cm
/Pattern cs
/P131 scn
0.000000 2.651028 m
0.849897 2.873974 1.727209 2.957578 2.577106 2.846105 c
4.605893 2.567423 6.031529 1.592034 6.579850 0.170754 c
6.689514 0.226490 7.183003 0.533041 7.265251 0.588778 c
6.716930 1.647771 5.812200 2.400213 4.441398 2.873974 c
3.043180 3.319865 1.480466 3.208393 0.000000 2.651028 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 29.911133 10.271057 cm
/Pattern cs
/P132 scn
9.348870 2.046654 m
8.279645 1.433552 7.100755 1.071266 5.921865 1.043397 c
3.810830 1.154871 2.028789 2.018785 0.466074 3.328592 c
0.383826 3.412197 0.164496 3.133515 0.000000 3.105647 c
2.056203 0.068008 6.470186 0.263086 9.348870 2.046654 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 30.020996 10.729248 cm
/Pattern cs
/P133 scn
0.164496 2.703200 m
0.109664 2.675331 0.054832 2.647463 0.000000 2.619595 c
1.480468 0.529476 4.084995 -0.000021 6.525024 0.557344 c
6.278280 0.529476 6.031536 0.501608 5.784791 0.473739 c
3.838251 0.585212 2.028789 1.337655 0.274161 2.786804 c
0.274161 2.786804 0.219328 2.758936 0.164496 2.703200 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 24.645996 5.935791 cm
/Pattern cs
/P134 scn
1.344548 0.000019 m
-0.382664 2.758975 -0.163336 7.050685 2.879847 8.667044 c
2.687934 8.973594 2.413774 9.196539 2.468606 9.614563 c
-0.464912 7.440840 -0.711656 2.898316 1.344548 0.000019 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 24.729492 8.276794 cm
/Pattern cs
/P135 scn
0.000000 1.950758 m
0.000000 1.309788 0.082248 0.640950 0.274161 -0.000020 c
0.164496 0.501608 0.109665 1.003237 0.109665 1.504866 c
0.109665 2.090099 0.191914 2.647464 0.328994 3.204829 c
0.712819 4.626110 1.535300 5.712972 2.714191 6.353941 c
2.659359 6.409678 2.631944 6.493282 2.631944 6.493282 c
2.494864 6.660492 2.385200 6.855570 2.357784 7.106384 c
0.795068 5.908050 0.000000 3.957272 0.000000 1.950758 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.528809 16.163513 cm
/Pattern cs
/P136 scn
1.151473 9.781738 m
1.507881 9.335846 1.973955 8.806350 2.028787 8.165380 c
2.056203 7.106386 2.467443 6.158866 2.330363 5.099872 c
2.001371 3.427777 1.453050 1.811418 0.000000 0.947502 c
0.274160 0.724556 0.383825 0.334400 0.246745 -0.000019 c
2.056203 1.170447 2.878684 3.455645 2.741604 5.657237 c
2.522275 7.134254 2.138450 8.499799 1.151473 9.781738 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.666016 16.302856 cm
/Pattern cs
/P137 scn
2.138450 6.744094 m
2.220699 6.298202 2.302946 5.852310 2.302946 5.378550 c
2.275531 4.932657 l
2.001370 3.483509 1.507881 1.727808 0.000000 0.780288 c
0.164496 0.613078 0.274160 0.362265 0.274160 0.111450 c
0.274160 0.083582 0.246745 0.027845 0.246745 -0.000023 c
1.699794 1.031102 2.577106 2.870407 2.577106 4.988394 c
2.549691 5.462154 l
2.412611 6.353938 2.248115 7.078513 2.001370 7.719482 c
2.028786 7.385063 2.083618 7.050644 2.138450 6.744094 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.959473 10.534973 cm
/Pattern cs
/P138 scn
0.000000 0.835143 m
0.904729 3.956387 4.002738 6.715344 7.374910 6.018638 c
7.347494 6.353057 7.731320 6.464530 7.703904 6.798949 c
3.975324 7.802206 0.877313 4.123596 0.000000 0.835143 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 21.220215 13.446167 cm
/Pattern cs
/P139 scn
0.000000 0.543600 m
1.425633 2.382903 3.646331 3.664842 6.031525 3.191082 c
6.058941 3.330423 6.141189 3.441896 6.196021 3.525501 c
6.278269 3.609106 6.333101 3.692710 6.333101 3.804183 c
3.646331 4.500889 1.370801 2.717322 0.000000 0.543600 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.446289 14.212708 cm
/Pattern cs
/P140 scn
7.374922 6.465454 m
6.744352 3.288474 3.646336 0.362308 0.356410 1.170486 c
0.411242 0.696726 0.109664 0.334439 0.000000 0.000020 c
0.795066 0.083625 1.507884 0.083625 2.385198 0.250834 c
3.317344 0.501649 4.222073 1.086882 4.797810 1.811456 c
6.113780 3.065527 7.073345 4.654018 7.374922 6.465454 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 31.556152 14.268494 cm
/Pattern cs
/P141 scn
4.222071 1.783573 m
2.988349 0.975394 1.644964 0.724579 0.328994 1.003262 c
0.328994 1.003262 0.328994 1.003262 0.328994 0.975394 c
0.328994 0.668843 0.191913 0.390160 0.082249 0.167214 c
0.082249 0.167214 0.054832 0.083610 0.000000 0.000005 c
0.191912 0.027873 0.657985 0.055742 0.657985 0.055742 c
1.151474 0.083610 1.672380 0.139347 2.248117 0.250820 c
3.180262 0.501634 4.057575 1.086867 4.633311 1.783573 c
5.263880 2.396675 5.784787 3.037644 6.168612 3.706482 c
5.647707 2.954039 4.962304 2.285202 4.222071 1.783573 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 27.856934 6.270264 cm
/Pattern cs
/P142 scn
6.139242 -0.000021 m
4.000791 0.585213 2.081668 2.034360 1.204355 4.235952 c
0.957611 5.183472 0.847946 6.158861 1.067275 7.162117 c
0.601202 7.106381 0.299627 7.496536 0.052882 7.719482 c
0.080298 7.552273 0.080297 7.385063 0.107713 7.245722 c
-0.111615 6.242465 -0.001950 5.099867 0.491538 4.263820 c
1.725260 2.173701 3.781463 0.334399 6.139242 -0.000021 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 27.937012 6.966980 cm
/Pattern cs
/P143 scn
0.082247 6.799830 m
0.109665 6.549015 l
0.027416 6.214596 0.000000 5.880177 0.000000 5.545758 c
0.000000 4.849052 0.164495 4.152346 0.466072 3.594980 c
1.453049 1.950753 2.769017 0.724551 4.194651 -0.000024 c
2.741601 0.808156 1.644960 2.034359 1.041808 3.511376 c
0.877312 4.152346 0.795065 4.765448 0.795065 5.322813 c
0.795065 5.685100 0.822480 6.047387 0.904728 6.381806 c
0.548319 6.381806 0.274159 6.632620 0.082247 6.827698 c
0.082247 6.827698 0.082247 6.799830 0.082247 6.799830 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 24.839355 17.807678 cm
/Pattern cs
/P144 scn
0.000000 7.635925 m
3.125428 6.827746 5.675121 3.985185 5.400961 0.362313 c
5.428377 0.195103 5.675121 0.139367 5.839617 0.000026 c
6.525018 1.226229 6.223442 2.647509 5.538041 3.817975 c
4.276903 5.880226 2.165867 6.883482 0.000000 7.635925 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 27.635742 17.891296 cm
/Pattern cs
/P145 scn
2.686771 0.808195 m
2.659355 0.250830 l
2.659355 0.195094 2.741603 0.139356 2.851267 0.083620 c
2.851267 0.083620 2.933515 0.027884 2.988347 0.000015 c
3.207675 0.418039 3.317341 0.891799 3.317341 1.393428 c
3.317341 2.118002 3.070596 2.898314 2.631940 3.650757 c
2.028787 4.654014 1.178890 5.490061 0.000000 6.186768 c
1.727211 4.876960 2.686771 2.954050 2.686771 0.808195 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 24.510254 10.757141 cm
/Pattern cs
/P146 scn
9.979435 5.072021 m
9.979435 2.257327 7.731319 -0.000001 4.989717 -0.000001 c
2.220697 -0.000001 0.000000 2.285195 0.000000 5.072021 c
0.000000 7.886714 2.248114 10.144043 4.989717 10.144043 c
7.758736 10.144043 9.979435 7.886714 9.979435 5.072021 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 26.209961 11.537415 cm
/Pattern cs
/P147 scn
0.000000 1.811462 m
0.712818 0.724601 1.919124 0.000027 3.289927 0.000027 c
4.605898 0.000027 5.757373 0.640996 6.470191 1.644252 c
5.647708 0.919678 4.551066 0.501655 3.317343 0.501655 c
2.001372 0.501655 0.822482 1.003283 0.000000 1.811462 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 26.429199 16.498047 cm
/Pattern cs
/P148 scn
6.141191 1.672082 m
6.141191 0.752429 4.770389 -0.000013 3.070595 -0.000013 c
1.370801 -0.000013 0.000000 0.752429 0.000000 1.672082 c
0.000000 2.591734 1.370801 3.344177 3.070595 3.344177 c
4.770389 3.344177 6.141191 2.619603 6.141191 1.672082 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 0.000000 cm
/Pattern cs
/P149 scn
29.993151 13.460361 m
30.020565 13.627571 30.020565 13.822649 30.020565 13.989859 c
30.020565 17.807808 26.867722 20.901184 22.974644 20.901184 c
19.794382 20.901184 17.107611 18.838934 16.230297 16.024240 c
15.215903 16.776684 13.899933 17.222576 12.501715 17.222576 c
9.266622 17.222576 6.634682 14.853775 6.634682 11.955477 c
6.634682 11.704663 6.662098 11.453849 6.689514 11.203034 c
2.823852 10.589932 0.000000 8.444078 0.000000 5.880199 c
0.000000 2.842560 4.030158 0.362288 8.992461 0.362288 c
10.747088 0.362288 12.364635 0.668839 13.735436 1.198334 c
15.215902 0.501629 17.052778 0.111469 19.026733 0.111469 c
20.918440 0.111469 22.673067 0.473759 24.126116 1.114729 c
25.414671 0.390154 26.977385 -0.000002 28.649763 -0.000002 c
33.173409 -0.000002 36.819744 3.037638 36.819744 6.799850 c
36.819744 10.144040 33.858810 12.930865 29.993151 13.460361 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 1.535156 1.086914 cm
/Pattern cs
/P150 scn
15.270734 14.491468 m
15.051406 13.822630 l
14.475669 14.240654 l
13.570940 14.909492 12.419465 15.271779 11.240576 15.271779 c
8.471556 15.271779 6.196025 13.265265 6.196025 10.812859 c
6.196025 10.617781 6.223441 10.394835 6.250856 10.171889 c
6.333105 9.670261 l
5.867032 9.586656 l
2.412611 9.029290 0.000000 7.162119 0.000000 5.044132 c
-0.000000 2.480253 3.564085 0.362265 7.978067 0.362265 c
9.513366 0.362265 10.993833 0.613079 12.282386 1.114706 c
12.474298 1.198313 l
12.666210 1.114706 l
14.064428 0.473738 15.709392 0.139318 17.464018 0.139318 c
19.136396 0.139318 20.726524 0.445869 22.069912 1.031103 c
22.289240 1.114706 l
22.508568 1.003235 l
23.687456 0.334398 25.085676 -0.000023 26.538727 -0.000023 c
30.514051 -0.000023 33.749142 2.647463 33.749142 5.908048 c
33.749142 8.806345 31.226870 11.230883 27.745031 11.732512 c
27.278957 11.788248 l
27.333792 12.735768 l
27.333792 16.052090 24.564772 18.755310 21.165182 18.755310 c
18.450994 18.755310 16.065800 17.027479 15.270734 14.491468 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 19.081543 3.483582 cm
1.000000 1.000000 1.000000 scn
15.270733 3.706455 m
15.270733 6.047388 13.132280 8.053903 10.171349 8.444057 c
8.745716 8.639135 l
8.745716 8.639135 8.827965 10.478440 8.827965 10.534177 c
8.827965 13.265265 6.552432 15.466858 3.728580 15.466858 c
2.275531 15.466858 0.959561 14.881625 0.000000 13.906237 c
0.795065 14.407865 1.754626 14.714416 2.769019 14.714416 c
5.565455 14.714416 7.868403 12.512824 7.868403 9.781734 c
7.868403 9.725998 7.786155 7.886693 7.786155 7.886693 c
9.211787 7.691616 l
12.172719 7.273592 14.311172 5.294946 14.311172 2.954013 c
14.311172 1.839283 13.817682 0.836026 13.022617 -0.000021 c
14.393418 0.891763 15.270733 2.229438 15.270733 3.706455 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 5.545776 cm
/Pattern cs
/P151 scn
19.437973 8.722763 m
19.437973 8.834236 19.465389 8.945708 19.465389 9.085050 c
19.465389 11.565324 17.409185 13.571838 14.886910 13.571838 c
12.830708 13.571838 11.103498 12.234162 10.527761 10.394857 c
9.869776 10.896486 9.019877 11.175169 8.115149 11.175169 c
6.004113 11.175169 4.304318 9.642414 4.304318 7.775241 c
4.304318 7.608032 4.331735 7.440823 4.331735 7.273613 c
1.836875 6.883458 0.000000 5.490045 0.000000 3.817950 c
0.000000 1.839304 2.604524 0.250813 5.812201 0.250813 c
6.936259 0.250813 8.005485 0.445890 8.882798 0.780310 c
9.869776 0.334417 11.048665 0.083604 12.337218 0.083604 c
13.570941 0.083604 14.694998 0.334418 15.627144 0.724574 c
16.477041 0.250813 17.464018 -0.000002 18.560659 -0.000002 c
21.494175 -0.000002 23.851955 1.978644 23.851955 4.403183 c
23.851955 6.576907 21.932835 8.388344 19.437973 8.722763 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.986816 6.270386 cm
/Pattern cs
/P152 scn
9.924606 9.363725 m
9.787526 8.917831 l
9.431118 9.196514 l
8.855381 9.642406 8.087731 9.865353 7.347498 9.865353 c
5.538040 9.865353 4.084990 8.555545 4.084990 6.967054 c
4.084990 6.827713 4.084990 6.688372 4.112406 6.549031 c
4.167238 6.214612 l
3.838245 6.158876 l
1.562714 5.824457 0.000000 4.626122 0.000000 3.260577 c
0.000000 1.588482 2.330363 0.222938 5.181631 0.222938 c
6.168609 0.222938 7.128170 0.390148 7.978067 0.724567 c
8.115148 0.780303 l
8.224811 0.724567 l
9.129540 0.306543 10.198768 0.083596 11.322824 0.083596 c
12.392051 0.083596 13.433859 0.278674 14.311172 0.668829 c
14.448253 0.724567 l
14.585333 0.640962 l
15.352982 0.222938 16.257711 -0.000007 17.189857 -0.000007 c
19.766966 -0.000007 21.878000 1.727823 21.878000 3.817943 c
21.878000 5.685115 20.233036 7.273605 17.984921 7.580156 c
17.683346 7.608024 l
17.710760 8.221126 l
17.710760 10.366981 15.928719 12.122681 13.735435 12.122681 c
11.953393 12.122681 10.418095 11.007952 9.924606 9.363725 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 12.419434 7.803101 cm
1.000000 1.000000 1.000000 scn
9.842358 2.396694 m
9.842358 3.901579 8.444139 5.211387 6.552433 5.462201 c
5.647705 5.601542 l
5.647705 5.601542 5.702536 6.799876 5.702536 6.827744 c
5.702536 8.583444 4.222070 10.032593 2.412611 10.032593 c
1.480466 10.032593 0.603153 9.642438 0.000000 9.029336 c
0.520905 9.363755 1.151474 9.530965 1.809459 9.530965 c
3.618918 9.530965 5.099384 8.109684 5.099384 6.326116 c
5.099384 6.270380 5.044551 5.099913 5.044551 5.099913 c
5.949281 4.960572 l
7.868403 4.709757 9.239205 3.399950 9.239205 1.895064 c
9.239205 1.170490 8.937629 0.529522 8.416724 0.000025 c
9.266622 0.585258 9.842358 1.449173 9.842358 2.396694 c
h
f
n
Q

endstream
endobj

307 0 obj
  72363
endobj

308 0 obj
  << /Annots []
     /Type /Page
     /MediaBox [ 0.000000 0.000000 40.000488 26.530579 ]
     /Resources 305 0 R
     /Contents 306 0 R
     /Parent 309 0 R
  >>
endobj

309 0 obj
  << /Kids [ 308 0 R ]
     /Count 1
     /Type /Pages
  >>
endobj

310 0 obj
  << /Pages 309 0 R
     /Type /Catalog
  >>
endobj

xref
0 311
0000000000 65535 f
0000000010 00000 n
0000000728 00000 n
0000000750 00000 n
0000001468 00000 n
0000001490 00000 n
0000002208 00000 n
0000002230 00000 n
0000003720 00000 n
0000003743 00000 n
0000005820 00000 n
0000005844 00000 n
0000008311 00000 n
0000008335 00000 n
0000010413 00000 n
0000010437 00000 n
0000012515 00000 n
0000012539 00000 n
0000014617 00000 n
0000014641 00000 n
0000017108 00000 n
0000017132 00000 n
0000019210 00000 n
0000019234 00000 n
0000021701 00000 n
0000021725 00000 n
0000023803 00000 n
0000023827 00000 n
0000025905 00000 n
0000025929 00000 n
0000028396 00000 n
0000028420 00000 n
0000030498 00000 n
0000030522 00000 n
0000032600 00000 n
0000032624 00000 n
0000034702 00000 n
0000034726 00000 n
0000037193 00000 n
0000037217 00000 n
0000039295 00000 n
0000039319 00000 n
0000041786 00000 n
0000041810 00000 n
0000043888 00000 n
0000043912 00000 n
0000045990 00000 n
0000046014 00000 n
0000048092 00000 n
0000048116 00000 n
0000050583 00000 n
0000050607 00000 n
0000053074 00000 n
0000053098 00000 n
0000053814 00000 n
0000053837 00000 n
0000056304 00000 n
0000056328 00000 n
0000058795 00000 n
0000058819 00000 n
0000060897 00000 n
0000060921 00000 n
0000062999 00000 n
0000063023 00000 n
0000065490 00000 n
0000065514 00000 n
0000067981 00000 n
0000068005 00000 n
0000070472 00000 n
0000070496 00000 n
0000071212 00000 n
0000071235 00000 n
0000073313 00000 n
0000073337 00000 n
0000075804 00000 n
0000075828 00000 n
0000076544 00000 n
0000076567 00000 n
0000079034 00000 n
0000079058 00000 n
0000081525 00000 n
0000081549 00000 n
0000083627 00000 n
0000083651 00000 n
0000086118 00000 n
0000086142 00000 n
0000088220 00000 n
0000088244 00000 n
0000090711 00000 n
0000090735 00000 n
0000093202 00000 n
0000093226 00000 n
0000095304 00000 n
0000095328 00000 n
0000097795 00000 n
0000097819 00000 n
0000099897 00000 n
0000099921 00000 n
0000102388 00000 n
0000102412 00000 n
0000103129 00000 n
0000103153 00000 n
0000105233 00000 n
0000105258 00000 n
0000107338 00000 n
0000107363 00000 n
0000109443 00000 n
0000109468 00000 n
0000111548 00000 n
0000111573 00000 n
0000114042 00000 n
0000114067 00000 n
0000116536 00000 n
0000116561 00000 n
0000117279 00000 n
0000117303 00000 n
0000119383 00000 n
0000119408 00000 n
0000121877 00000 n
0000121902 00000 n
0000124371 00000 n
0000124396 00000 n
0000126865 00000 n
0000126890 00000 n
0000129359 00000 n
0000129384 00000 n
0000131464 00000 n
0000131489 00000 n
0000133569 00000 n
0000133594 00000 n
0000135674 00000 n
0000135699 00000 n
0000138168 00000 n
0000138193 00000 n
0000140662 00000 n
0000140687 00000 n
0000143156 00000 n
0000143181 00000 n
0000145261 00000 n
0000145286 00000 n
0000147366 00000 n
0000147391 00000 n
0000149860 00000 n
0000149885 00000 n
0000152354 00000 n
0000152379 00000 n
0000154848 00000 n
0000154873 00000 n
0000157342 00000 n
0000157367 00000 n
0000159447 00000 n
0000159472 00000 n
0000160190 00000 n
0000160214 00000 n
0000160932 00000 n
0000160956 00000 n
0000161674 00000 n
0000161698 00000 n
0000162416 00000 n
0000162440 00000 n
0000163158 00000 n
0000163182 00000 n
0000165262 00000 n
0000165287 00000 n
0000166005 00000 n
0000166029 00000 n
0000168498 00000 n
0000168523 00000 n
0000169241 00000 n
0000169265 00000 n
0000171345 00000 n
0000171370 00000 n
0000173839 00000 n
0000173864 00000 n
0000174582 00000 n
0000174606 00000 n
0000177075 00000 n
0000177100 00000 n
0000179569 00000 n
0000179594 00000 n
0000180312 00000 n
0000180336 00000 n
0000182416 00000 n
0000182441 00000 n
0000183159 00000 n
0000183183 00000 n
0000185263 00000 n
0000185288 00000 n
0000187757 00000 n
0000187782 00000 n
0000190251 00000 n
0000190276 00000 n
0000192745 00000 n
0000192770 00000 n
0000193488 00000 n
0000193512 00000 n
0000194230 00000 n
0000194254 00000 n
0000194972 00000 n
0000194996 00000 n
0000197465 00000 n
0000197490 00000 n
0000198208 00000 n
0000198232 00000 n
0000200701 00000 n
0000200726 00000 n
0000202806 00000 n
0000202831 00000 n
0000203549 00000 n
0000203573 00000 n
0000204291 00000 n
0000204315 00000 n
0000206784 00000 n
0000206809 00000 n
0000207527 00000 n
0000207551 00000 n
0000209631 00000 n
0000209656 00000 n
0000210374 00000 n
0000210398 00000 n
0000211116 00000 n
0000211140 00000 n
0000211858 00000 n
0000211882 00000 n
0000212600 00000 n
0000212624 00000 n
0000214704 00000 n
0000214729 00000 n
0000215447 00000 n
0000215471 00000 n
0000216189 00000 n
0000216213 00000 n
0000216931 00000 n
0000216955 00000 n
0000217673 00000 n
0000217697 00000 n
0000218415 00000 n
0000218439 00000 n
0000219157 00000 n
0000219181 00000 n
0000219899 00000 n
0000219923 00000 n
0000220645 00000 n
0000220669 00000 n
0000222749 00000 n
0000222774 00000 n
0000224854 00000 n
0000224879 00000 n
0000227348 00000 n
0000227373 00000 n
0000228487 00000 n
0000228511 00000 n
0000229229 00000 n
0000229253 00000 n
0000229971 00000 n
0000229995 00000 n
0000231500 00000 n
0000231525 00000 n
0000233994 00000 n
0000234019 00000 n
0000236488 00000 n
0000236513 00000 n
0000237231 00000 n
0000237255 00000 n
0000237973 00000 n
0000237997 00000 n
0000240077 00000 n
0000240102 00000 n
0000241984 00000 n
0000242009 00000 n
0000242727 00000 n
0000242751 00000 n
0000245220 00000 n
0000245245 00000 n
0000245963 00000 n
0000245987 00000 n
0000246705 00000 n
0000246729 00000 n
0000247447 00000 n
0000247471 00000 n
0000249551 00000 n
0000249576 00000 n
0000250294 00000 n
0000250318 00000 n
0000251036 00000 n
0000251060 00000 n
0000251778 00000 n
0000251802 00000 n
0000253882 00000 n
0000253907 00000 n
0000255987 00000 n
0000256012 00000 n
0000258092 00000 n
0000258117 00000 n
0000260197 00000 n
0000260222 00000 n
0000260940 00000 n
0000260964 00000 n
0000261682 00000 n
0000261706 00000 n
0000263786 00000 n
0000263811 00000 n
0000264529 00000 n
0000264553 00000 n
0000265271 00000 n
0000265295 00000 n
0000361916 00000 n
0000434339 00000 n
0000434365 00000 n
0000434546 00000 n
0000434624 00000 n
trailer
<< /ID [ (some) (id) ]
   /Root 310 0 R
   /Size 311
>>
startxref
434687
%%EOF