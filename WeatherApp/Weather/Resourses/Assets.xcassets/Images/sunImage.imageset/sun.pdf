%PDF-1.7

1 0 obj
  << /Length 2 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.945098 exch 0.000000 exch dup 0.005650 gt { exch pop exch pop exch pop dup 0.005650 sub 0.000000 mul 1.000000 add exch dup 0.005650 sub 0.045989 mul 0.945098 add exch dup 0.005650 sub 0.505883 mul 0.000000 add exch } if dup 0.090921 gt { exch pop exch pop exch pop dup 0.090921 sub 0.000000 mul 1.000000 add exch dup 0.090921 sub 0.026429 mul 0.949020 add exch dup 0.090921 sub 0.740024 mul 0.043137 add exch } if dup 0.239300 gt { exch pop exch pop exch pop dup 0.239300 sub 0.000000 mul 1.000000 add exch dup 0.239300 sub 0.060737 mul 0.952941 add exch dup 0.239300 sub 0.951542 mul 0.152941 add exch } if dup 0.433000 gt { exch pop exch pop exch pop dup 0.433000 sub 0.000000 mul 1.000000 add exch dup 0.433000 sub 0.050776 mul 0.964706 add exch dup 0.433000 sub 1.083213 mul 0.337255 add exch } if dup 0.664700 gt { exch pop exch pop exch pop dup 0.664700 sub 0.000000 mul 1.000000 add exch dup 0.664700 sub 0.075155 mul 0.976471 add exch dup 0.664700 sub 1.217505 mul 0.588235 add exch } if dup 0.925600 gt { exch pop exch pop exch pop dup 0.925600 sub 0.000000 mul 1.000000 add exch dup 0.925600 sub 0.052709 mul 0.996078 add exch dup 0.925600 sub 1.265022 mul 0.905882 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 1.000000 exch 1.000000 exch } if pop }
endstream
endobj

2 0 obj
  1306
endobj

3 0 obj
  << /Length 4 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

4 0 obj
  1892
endobj

5 0 obj
  << /Length 6 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

6 0 obj
  2281
endobj

7 0 obj
  << /Length 8 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

8 0 obj
  1892
endobj

9 0 obj
  << /Length 10 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

10 0 obj
  1892
endobj

11 0 obj
  << /Length 12 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

12 0 obj
  1892
endobj

13 0 obj
  << /Length 14 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

14 0 obj
  2281
endobj

15 0 obj
  << /Length 16 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

16 0 obj
  1892
endobj

17 0 obj
  << /Length 18 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

18 0 obj
  2281
endobj

19 0 obj
  << /Length 20 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

20 0 obj
  1892
endobj

21 0 obj
  << /Length 22 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

22 0 obj
  1892
endobj

23 0 obj
  << /Length 24 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

24 0 obj
  2281
endobj

25 0 obj
  << /Length 26 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

26 0 obj
  1892
endobj

27 0 obj
  << /Length 28 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

28 0 obj
  1892
endobj

29 0 obj
  << /Length 30 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

30 0 obj
  1892
endobj

31 0 obj
  << /Length 32 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

32 0 obj
  2281
endobj

33 0 obj
  << /Length 34 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

34 0 obj
  1892
endobj

35 0 obj
  << /Length 36 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

36 0 obj
  2281
endobj

37 0 obj
  << /Length 38 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

38 0 obj
  1892
endobj

39 0 obj
  << /Length 40 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

40 0 obj
  1892
endobj

41 0 obj
  << /Length 42 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

42 0 obj
  1892
endobj

43 0 obj
  << /Length 44 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

44 0 obj
  2281
endobj

45 0 obj
  << /Length 46 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

46 0 obj
  2281
endobj

47 0 obj
  << /Length 48 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

48 0 obj
  530
endobj

49 0 obj
  << /Length 50 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

50 0 obj
  2281
endobj

51 0 obj
  << /Length 52 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

52 0 obj
  2281
endobj

53 0 obj
  << /Length 54 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

54 0 obj
  1892
endobj

55 0 obj
  << /Length 56 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

56 0 obj
  1892
endobj

57 0 obj
  << /Length 58 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

58 0 obj
  2281
endobj

59 0 obj
  << /Length 60 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

60 0 obj
  2281
endobj

61 0 obj
  << /Length 62 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

62 0 obj
  2281
endobj

63 0 obj
  << /Length 64 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

64 0 obj
  530
endobj

65 0 obj
  << /Length 66 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

66 0 obj
  1892
endobj

67 0 obj
  << /Length 68 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

68 0 obj
  2281
endobj

69 0 obj
  << /Length 70 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

70 0 obj
  530
endobj

71 0 obj
  << /Length 72 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

72 0 obj
  2281
endobj

73 0 obj
  << /Length 74 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

74 0 obj
  2281
endobj

75 0 obj
  << /Length 76 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

76 0 obj
  1892
endobj

77 0 obj
  << /Length 78 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

78 0 obj
  2281
endobj

79 0 obj
  << /Length 80 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

80 0 obj
  1892
endobj

81 0 obj
  << /Length 82 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

82 0 obj
  2281
endobj

83 0 obj
  << /Length 84 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

84 0 obj
  2281
endobj

85 0 obj
  << /Length 86 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

86 0 obj
  1892
endobj

87 0 obj
  << /Length 88 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

88 0 obj
  2281
endobj

89 0 obj
  << /Length 90 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

90 0 obj
  1892
endobj

91 0 obj
  << /Length 92 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

92 0 obj
  2281
endobj

93 0 obj
  << /Length 94 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

94 0 obj
  530
endobj

95 0 obj
  << /Length 96 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

96 0 obj
  1892
endobj

97 0 obj
  << /Length 98 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

98 0 obj
  1892
endobj

99 0 obj
  << /Length 100 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

100 0 obj
  1892
endobj

101 0 obj
  << /Length 102 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

102 0 obj
  1892
endobj

103 0 obj
  << /Length 104 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

104 0 obj
  2281
endobj

105 0 obj
  << /Length 106 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

106 0 obj
  2281
endobj

107 0 obj
  << /Length 108 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

108 0 obj
  530
endobj

109 0 obj
  << /Length 110 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

110 0 obj
  1892
endobj

111 0 obj
  << /Length 112 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

112 0 obj
  2281
endobj

113 0 obj
  << /Length 114 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

114 0 obj
  2281
endobj

115 0 obj
  << /Length 116 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

116 0 obj
  2281
endobj

117 0 obj
  << /Length 118 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

118 0 obj
  2281
endobj

119 0 obj
  << /Length 120 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

120 0 obj
  1892
endobj

121 0 obj
  << /Length 122 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

122 0 obj
  1892
endobj

123 0 obj
  << /Length 124 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

124 0 obj
  1892
endobj

125 0 obj
  << /Length 126 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

126 0 obj
  2281
endobj

127 0 obj
  << /Length 128 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

128 0 obj
  2281
endobj

129 0 obj
  << /Length 130 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

130 0 obj
  2281
endobj

131 0 obj
  << /Length 132 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

132 0 obj
  1892
endobj

133 0 obj
  << /Length 134 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

134 0 obj
  1892
endobj

135 0 obj
  << /Length 136 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

136 0 obj
  2281
endobj

137 0 obj
  << /Length 138 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

138 0 obj
  2281
endobj

139 0 obj
  << /Length 140 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

140 0 obj
  2281
endobj

141 0 obj
  << /Length 142 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

142 0 obj
  2281
endobj

143 0 obj
  << /Length 144 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

144 0 obj
  1892
endobj

145 0 obj
  << /Length 146 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

146 0 obj
  530
endobj

147 0 obj
  << /Length 148 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

148 0 obj
  530
endobj

149 0 obj
  << /Length 150 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

150 0 obj
  530
endobj

151 0 obj
  << /Length 152 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

152 0 obj
  530
endobj

153 0 obj
  << /Length 154 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

154 0 obj
  530
endobj

155 0 obj
  << /Length 156 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

156 0 obj
  1892
endobj

157 0 obj
  << /Length 158 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

158 0 obj
  530
endobj

159 0 obj
  << /Length 160 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

160 0 obj
  2281
endobj

161 0 obj
  << /Length 162 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

162 0 obj
  530
endobj

163 0 obj
  << /Length 164 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

164 0 obj
  1892
endobj

165 0 obj
  << /Length 166 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

166 0 obj
  2281
endobj

167 0 obj
  << /Length 168 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

168 0 obj
  530
endobj

169 0 obj
  << /Length 170 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

170 0 obj
  2281
endobj

171 0 obj
  << /Length 172 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

172 0 obj
  2281
endobj

173 0 obj
  << /Length 174 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

174 0 obj
  530
endobj

175 0 obj
  << /Length 176 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

176 0 obj
  1892
endobj

177 0 obj
  << /Length 178 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

178 0 obj
  530
endobj

179 0 obj
  << /Length 180 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

180 0 obj
  1892
endobj

181 0 obj
  << /Length 182 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

182 0 obj
  2281
endobj

183 0 obj
  << /Length 184 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

184 0 obj
  2281
endobj

185 0 obj
  << /Length 186 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

186 0 obj
  2281
endobj

187 0 obj
  << /Length 188 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

188 0 obj
  530
endobj

189 0 obj
  << /Length 190 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

190 0 obj
  530
endobj

191 0 obj
  << /Length 192 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

192 0 obj
  530
endobj

193 0 obj
  << /Length 194 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

194 0 obj
  2281
endobj

195 0 obj
  << /Length 196 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

196 0 obj
  530
endobj

197 0 obj
  << /Length 198 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

198 0 obj
  2281
endobj

199 0 obj
  << /Length 200 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

200 0 obj
  1892
endobj

201 0 obj
  << /Length 202 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

202 0 obj
  530
endobj

203 0 obj
  << /Length 204 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

204 0 obj
  530
endobj

205 0 obj
  << /Length 206 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

206 0 obj
  2281
endobj

207 0 obj
  << /Length 208 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

208 0 obj
  530
endobj

209 0 obj
  << /Length 210 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

210 0 obj
  1892
endobj

211 0 obj
  << /Length 212 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

212 0 obj
  530
endobj

213 0 obj
  << /Length 214 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

214 0 obj
  530
endobj

215 0 obj
  << /Length 216 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

216 0 obj
  530
endobj

217 0 obj
  << /Length 218 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

218 0 obj
  530
endobj

219 0 obj
  << /Length 220 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

220 0 obj
  1892
endobj

221 0 obj
  << /Length 222 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

222 0 obj
  530
endobj

223 0 obj
  << /Length 224 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

224 0 obj
  530
endobj

225 0 obj
  << /Length 226 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

226 0 obj
  530
endobj

227 0 obj
  << /Length 228 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

228 0 obj
  530
endobj

229 0 obj
  << /Length 230 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

230 0 obj
  530
endobj

231 0 obj
  << /Length 232 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

232 0 obj
  530
endobj

233 0 obj
  << /Length 234 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

234 0 obj
  530
endobj

235 0 obj
  << /Length 236 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

236 0 obj
  1892
endobj

237 0 obj
  << /Length 238 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

238 0 obj
  1892
endobj

239 0 obj
  << /Length 240 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

240 0 obj
  2281
endobj

241 0 obj
  << /Length 242 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.925490 exch 0.835294 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.000000 mul 1.000000 add exch dup 0.000000 sub -0.006800 mul 0.925490 add exch dup 0.000000 sub -0.013600 mul 0.835294 add exch } if dup 0.576700 gt { exch pop exch pop exch pop dup 0.576700 sub 0.000000 mul 1.000000 add exch dup 0.576700 sub -0.056643 mul 0.921569 add exch dup 0.576700 sub -0.132166 mul 0.827451 add exch } if dup 0.784400 gt { exch pop exch pop exch pop dup 0.784400 sub 0.000000 mul 1.000000 add exch dup 0.784400 sub -0.106276 mul 0.909804 add exch dup 0.784400 sub -0.292258 mul 0.800000 add exch } if dup 0.932000 gt { exch pop exch pop exch pop dup 0.932000 sub 0.000000 mul 1.000000 add exch dup 0.932000 sub -0.230680 mul 0.894118 add exch dup 0.932000 sub -0.519031 mul 0.756863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.878431 exch 0.721569 exch } if pop }
endstream
endobj

242 0 obj
  926
endobj

243 0 obj
  << /Length 244 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

244 0 obj
  530
endobj

245 0 obj
  << /Length 246 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

246 0 obj
  530
endobj

247 0 obj
  << /Length 248 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.945098 exch 0.000000 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.000000 mul 1.000000 add exch dup 0.000000 sub -0.016505 mul 0.945098 add exch dup 0.000000 sub 0.008252 mul 0.000000 add exch } if dup 0.475200 gt { exch pop exch pop exch pop dup 0.475200 sub -0.022906 mul 1.000000 add exch dup 0.475200 sub -0.160345 mul 0.937255 add exch dup 0.475200 sub 0.045813 mul 0.003922 add exch } if dup 0.646400 gt { exch pop exch pop exch pop dup 0.646400 sub -0.032118 mul 0.996078 add exch dup 0.646400 sub -0.353294 mul 0.909804 add exch dup 0.646400 sub 0.128471 mul 0.011765 add exch } if dup 0.768500 gt { exch pop exch pop exch pop dup 0.768500 sub -0.039772 mul 0.992157 add exch dup 0.768500 sub -0.676132 mul 0.866667 add exch dup 0.768500 sub 0.238635 mul 0.027451 add exch } if dup 0.867100 gt { exch pop exch pop exch pop dup 0.867100 sub -0.093930 mul 0.988235 add exch dup 0.867100 sub -1.033227 mul 0.800000 add exch dup 0.867100 sub 0.328754 mul 0.050980 add exch } if dup 0.950600 gt { exch pop exch pop exch pop dup 0.950600 sub -0.079384 mul 0.980392 add exch dup 0.950600 sub -1.349528 mul 0.713726 add exch dup 0.950600 sub 0.476304 mul 0.078431 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.976471 exch 0.647059 exch 0.101961 exch } if pop }
endstream
endobj

248 0 obj
  1317
endobj

249 0 obj
  << /Length 250 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

250 0 obj
  2281
endobj

251 0 obj
  << /Length 252 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

252 0 obj
  2281
endobj

253 0 obj
  << /Length 254 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

254 0 obj
  530
endobj

255 0 obj
  << /Length 256 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

256 0 obj
  530
endobj

257 0 obj
  << /Length 258 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

258 0 obj
  1892
endobj

259 0 obj
  << /Length 260 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.956863 exch 0.486275 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.000000 mul 1.000000 add exch dup 0.000000 sub 0.000000 mul 0.956863 add exch dup 0.000000 sub 0.018411 mul 0.486275 add exch } if dup 0.426000 gt { exch pop exch pop exch pop dup 0.426000 sub 0.000000 mul 1.000000 add exch dup 0.426000 sub 0.025548 mul 0.956863 add exch dup 0.426000 sub 0.178834 mul 0.494118 add exch } if dup 0.579500 gt { exch pop exch pop exch pop dup 0.579500 sub 0.000000 mul 1.000000 add exch dup 0.579500 sub 0.035846 mul 0.960784 add exch dup 0.579500 sub 0.394308 mul 0.521569 add exch } if dup 0.688900 gt { exch pop exch pop exch pop dup 0.688900 sub 0.000000 mul 1.000000 add exch dup 0.688900 sub 0.044362 mul 0.964706 add exch dup 0.688900 sub 0.754148 mul 0.564706 add exch } if dup 0.777300 gt { exch pop exch pop exch pop dup 0.777300 sub 0.000000 mul 1.000000 add exch dup 0.777300 sub 0.103608 mul 0.968627 add exch dup 0.777300 sub 1.139690 mul 0.631373 add exch } if dup 0.853000 gt { exch pop exch pop exch pop dup 0.853000 sub 0.000000 mul 1.000000 add exch dup 0.853000 sub 0.116887 mul 0.976471 add exch dup 0.853000 sub 1.636422 mul 0.717647 add exch } if dup 0.920100 gt { exch pop exch pop exch pop dup 0.920100 sub 0.000000 mul 1.000000 add exch dup 0.920100 sub 0.198728 mul 0.984314 add exch dup 0.920100 sub 2.053522 mul 0.827451 add exch } if dup 0.979300 gt { exch pop exch pop exch pop dup 0.979300 sub 0.000000 mul 1.000000 add exch dup 0.979300 sub 0.189448 mul 0.996078 add exch dup 0.979300 sub 2.462823 mul 0.949020 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 1.000000 exch 1.000000 exch } if pop }
endstream
endobj

260 0 obj
  1694
endobj

261 0 obj
  << /Length 262 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

262 0 obj
  530
endobj

263 0 obj
  << /Length 264 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

264 0 obj
  2281
endobj

265 0 obj
  << /Length 266 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

266 0 obj
  530
endobj

267 0 obj
  << /Length 268 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

268 0 obj
  530
endobj

269 0 obj
  << /Length 270 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

270 0 obj
  530
endobj

271 0 obj
  << /Length 272 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

272 0 obj
  1892
endobj

273 0 obj
  << /Length 274 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

274 0 obj
  530
endobj

275 0 obj
  << /Length 276 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

276 0 obj
  530
endobj

277 0 obj
  << /Length 278 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

278 0 obj
  530
endobj

279 0 obj
  << /Length 280 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

280 0 obj
  1892
endobj

281 0 obj
  << /Length 282 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

282 0 obj
  1892
endobj

283 0 obj
  << /Length 284 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

284 0 obj
  1892
endobj

285 0 obj
  << /Length 286 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

286 0 obj
  1892
endobj

287 0 obj
  << /Length 288 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

288 0 obj
  530
endobj

289 0 obj
  << /Length 290 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

290 0 obj
  530
endobj

291 0 obj
  << /Length 292 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

292 0 obj
  1892
endobj

293 0 obj
  << /Length 294 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

294 0 obj
  530
endobj

295 0 obj
  << /Length 296 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

296 0 obj
  530
endobj

297 0 obj
  << /Pattern << /P131 << /Matrix [ 46.691799 0.000000 -0.000000 116.487175 -6.208984 -69.480705 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 15 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P111 << /Matrix [ 78.139877 0.000000 -0.000000 50.195812 -47.723145 -23.582958 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 33 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P76 << /Matrix [ 93.962540 0.000000 -0.000000 44.067703 -32.858398 -1.168655 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 83 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P78 << /Matrix [ 44.067535 0.000000 -0.000000 103.750710 -26.666016 -37.574074 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 81 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P137 << /Matrix [ 132.198898 0.000000 -0.000000 44.760258 -79.437500 -23.548405 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 11 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P90 << /Matrix [ 102.951462 0.000000 -0.000000 36.150425 -24.928223 -18.128635 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 57 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P141 << /Matrix [ 54.924473 0.000000 -0.000000 93.575027 -32.733398 -40.473038 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 7 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P144 << /Matrix [ 54.556499 0.000000 -0.000000 45.027996 -15.239258 -26.794231 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 5 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P105 << /Matrix [ 197.726593 0.000000 -0.000000 48.277191 -70.812988 -5.458527 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 39 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P107 << /Matrix [ 44.587852 0.000000 -0.000000 72.795586 -7.592285 -44.278679 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 37 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P74 << /Matrix [ 103.356155 0.000000 -0.000000 43.476776 -48.797363 -26.422272 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 87 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P125 << /Matrix [ 124.935226 0.000000 -0.000000 48.276455 -69.359375 -28.149990 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 21 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P132 << /Matrix [ 36.266293 0.000000 -0.000000 133.711456 -18.806641 -37.588409 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 13 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P64 << /Matrix [ 99.355698 0.000000 -0.000000 35.253845 -33.564941 -19.167358 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 127 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P86 << /Matrix [ 64.244690 0.000000 -0.000000 42.266430 -26.356445 -24.585766 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 125 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P130 << /Matrix [ 35.363098 0.000000 -0.000000 109.241959 -0.994629 -64.544266 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 17 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P122 << /Matrix [ 106.754326 0.000000 -0.000000 41.799030 -31.922852 -2.226032 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 23 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P70 << /Matrix [ 44.761738 0.000000 -0.000000 85.807404 -25.196289 -48.041473 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 103 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P83 << /Matrix [ 49.432846 0.000000 -0.000000 102.889168 -4.208496 -42.401558 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 101 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P55 << /Matrix [ 64.784943 0.000000 -0.000000 69.753105 -19.099609 -11.519218 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 143 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P118 << /Matrix [ 87.456444 0.000000 -0.000000 45.659988 -42.706055 -2.110550 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 43 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P98 << /Matrix [ 36.323391 0.000000 -0.000000 87.157341 -0.254883 -39.782219 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 45 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P121 << /Matrix [ 93.961823 0.000000 -0.000000 50.085381 -31.205078 -30.755608 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 27 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P113 << /Matrix [ 75.044937 0.000000 -0.000000 58.756119 -13.305664 -15.118668 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 29 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P68 << /Matrix [ 90.593018 0.000000 -0.000000 44.617085 -50.484375 -3.066669 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 105 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P145 << /Matrix [ 102.889534 0.000000 -0.000000 55.868767 -42.568359 -33.520317 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 3 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P119 << /Matrix [ 106.756645 0.000000 -0.000000 52.154053 -52.582031 -4.466003 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 25 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P71 << /Matrix [ 52.274147 0.000000 -0.000000 95.543083 -29.682617 -54.030571 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 99 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P101 << /Matrix [ 44.938549 0.000000 -0.000000 159.565994 -24.916504 -58.517532 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 41 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P75 << /Matrix [ 143.015274 0.000000 -0.000000 53.884899 -68.125977 -32.937023 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 85 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P112 << /Matrix [ 72.214302 0.000000 -0.000000 38.475452 -12.464844 -4.539845 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 31 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P127 << /Matrix [ 54.011448 0.000000 -0.000000 118.431351 -31.314941 -37.807510 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 19 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P110 << /Matrix [ 75.206696 0.000000 -0.000000 37.586021 -45.562012 -17.446800 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 35 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P96 << /Matrix [ 36.558147 0.000000 -0.000000 107.746117 -1.671387 -26.777855 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 49 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P29 << /Matrix [ 28.434811 0.000000 -0.000000 12.333713 -5.918945 1.681790 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 47 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P93 << /Matrix [ 115.426056 0.000000 -0.000000 49.432465 -69.358398 -8.476044 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 55 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P84 << /Matrix [ 42.903706 0.000000 -0.000000 64.048676 -25.086426 -21.483002 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 59 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P148 << /Matrix [ 7.032783 0.000000 -0.000000 7.888928 4.333008 4.492236 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 1 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P95 << /Matrix [ 44.586258 0.000000 -0.000000 112.780640 -22.431152 -68.540588 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 53 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P124 << /Matrix [ 116.629288 0.000000 -0.000000 41.119438 -64.173340 -23.687309 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 51 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P126 << /Matrix [ 42.582981 0.000000 -0.000000 108.009926 -24.509766 -33.680458 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 61 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P22 << /Matrix [ 32.973312 0.000000 -0.000000 12.044628 -8.060547 1.814686 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 63 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P77 << /Matrix [ 119.677086 0.000000 -0.000000 50.306736 -45.640625 -3.316380 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 65 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P82 << /Matrix [ 42.265514 0.000000 -0.000000 59.590103 -1.456543 -24.365494 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 67 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P40 << /Matrix [ 12.219634 0.000000 -0.000000 29.613071 2.075195 -7.128391 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 69 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P80 << /Matrix [ 42.823345 0.000000 -0.000000 101.751984 -0.812988 -49.130585 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 71 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P97 << /Matrix [ 55.595501 0.000000 -0.000000 113.372833 -10.600586 -28.560150 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 75 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P128 << /Matrix [ 41.645981 0.000000 -0.000000 113.127884 -1.640137 -63.019608 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 73 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P136 << /Matrix [ 122.953011 0.000000 -0.000000 35.092556 -73.276855 -18.141323 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 77 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P79 << /Matrix [ 53.628403 0.000000 -0.000000 148.464951 -32.677734 -60.035202 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 79 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P139 << /Matrix [ 53.377575 0.000000 -0.000000 101.017029 -5.820801 -42.341797 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 9 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P69 << /Matrix [ 106.754753 0.000000 -0.000000 58.808224 -59.941406 -8.925045 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 179 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P60 << /Matrix [ 36.151070 0.000000 -0.000000 102.538383 -19.586426 -51.925713 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 181 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P39 << /Matrix [ 33.514595 0.000000 -0.000000 12.015979 -8.482422 1.839307 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 93 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P57 << /Matrix [ 68.489456 0.000000 -0.000000 68.904541 -31.516602 -41.875610 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 95 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P108 << /Matrix [ 39.272720 0.000000 -0.000000 75.058830 -18.265625 -13.517204 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 91 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P129 << /Matrix [ 45.116531 0.000000 -0.000000 121.597496 -2.856445 -68.336998 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 89 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P73 << /Matrix [ 48.588585 0.000000 -0.000000 100.173820 -4.717773 -27.327019 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 97 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P67 << /Matrix [ 106.751076 0.000000 -0.000000 61.294186 -29.668945 -35.071407 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 109 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P4 << /Matrix [ 13.323263 0.000000 -0.000000 21.257849 1.497559 -2.908606 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 107 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P134 << /Matrix [ 117.370041 0.000000 -0.000000 35.922630 -31.734375 -1.635155 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 111 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P94 << /Matrix [ 35.697414 0.000000 -0.000000 105.821106 -17.607422 -63.713684 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 113 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P66 << /Matrix [ 88.130684 0.000000 -0.000000 44.420456 -22.322266 -25.217636 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 117 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P52 << /Matrix [ 64.286423 0.000000 -0.000000 39.962517 -38.583984 -5.952202 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 115 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P115 << /Matrix [ 59.682621 0.000000 -0.000000 131.305283 -7.054688 -50.417465 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 121 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P133 << /Matrix [ 52.033382 0.000000 -0.000000 141.299393 -27.312500 -40.143875 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 119 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P65 << /Matrix [ 216.564056 0.000000 -0.000000 46.692459 -73.903320 -25.649429 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 123 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P106 << /Matrix [ 38.475212 0.000000 -0.000000 70.397049 -4.575195 -42.534744 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 129 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P89 << /Matrix [ 93.192474 0.000000 -0.000000 48.587528 -38.229004 -3.989445 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 131 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P63 << /Matrix [ 181.910080 0.000000 -0.000000 42.581947 -101.883789 -3.316505 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 133 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P102 << /Matrix [ 83.780998 0.000000 -0.000000 35.865688 -36.961426 -19.752407 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 135 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P88 << /Matrix [ 59.741005 0.000000 -0.000000 42.187477 -18.958008 -1.771950 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 137 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P58 << /Matrix [ 35.254749 0.000000 -0.000000 101.583076 -0.272949 -34.941536 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 139 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P56 << /Matrix [ 41.646133 0.000000 -0.000000 63.227654 -18.988281 -38.068962 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 141 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P33 << /Matrix [ 23.688311 0.000000 -0.000000 12.895647 -3.532715 1.395552 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 145 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P48 << /Matrix [ 18.187290 0.000000 -0.000000 14.453016 -0.854980 0.584154 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 147 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P10 << /Matrix [ 24.130789 0.000000 -0.000000 12.773159 -3.690430 1.469212 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 149 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P25 << /Matrix [ 11.961291 0.000000 -0.000000 34.123310 2.168457 -9.548725 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 151 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P47 << /Matrix [ 14.910483 0.000000 -0.000000 17.412703 0.739258 -0.955854 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 153 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P109 << /Matrix [ 57.278156 0.000000 -0.000000 78.142365 -26.921387 -14.388580 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 155 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P44 << /Matrix [ 37.509285 0.000000 -0.000000 11.866154 -10.198242 1.928524 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 157 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P54 << /Matrix [ 39.477066 0.000000 -0.000000 64.389526 -5.583008 -9.765503 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 159 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P16 << /Matrix [ 12.335350 0.000000 -0.000000 28.450121 2.011719 -6.671190 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 161 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P100 << /Matrix [ 36.092949 0.000000 -0.000000 82.495041 -19.757812 -29.897263 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 193 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P30 << /Matrix [ 12.955384 0.000000 -0.000000 23.275730 1.693359 -3.915562 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 195 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P92 << /Matrix [ 108.351044 0.000000 -0.000000 35.254208 -64.498047 -1.679195 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 165 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P103 << /Matrix [ 216.568176 0.000000 -0.000000 48.279530 -120.230469 -26.928699 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 163 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P43 << /Matrix [ 11.744013 0.000000 -0.000000 41.311760 2.269043 -13.231865 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 167 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P72 << /Matrix [ 43.365204 0.000000 -0.000000 93.573120 -2.653809 -24.933594 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 169 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P45 << /Matrix [ 39.169300 0.000000 -0.000000 11.833626 -11.069336 1.934990 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 173 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P140 << /Matrix [ 45.937244 0.000000 -0.000000 53.128353 -27.118652 -22.754818 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 171 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P135 << /Matrix [ 125.629799 0.000000 -0.000000 48.483990 -34.473145 -7.426556 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 175 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P41 << /Matrix [ 12.146783 0.000000 -0.000000 31.445412 2.111816 -8.188759 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 177 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P120 << /Matrix [ 80.919411 0.000000 -0.000000 45.567844 -24.994629 -27.788914 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 185 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P37 << /Matrix [ 22.833418 0.000000 -0.000000 13.002984 -3.132324 1.321357 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 187 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P142 << /Matrix [ 55.283901 0.000000 -0.000000 44.760658 -23.327637 -2.761574 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 183 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P34 << /Matrix [ 12.755444 0.000000 -0.000000 24.499533 1.804199 -4.566671 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 189 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P32 << /Matrix [ 24.435345 0.000000 -0.000000 12.757905 -3.933105 1.480620 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 191 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P104 << /Matrix [ 85.297371 0.000000 -0.000000 36.616455 -30.213379 -0.507263 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 197 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P53 << /Matrix [ 68.080727 0.000000 -0.000000 58.007565 -41.245117 -15.579342 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 199 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P35 << /Matrix [ 12.753966 0.000000 -0.000000 24.227125 1.793457 -4.455702 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 201 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P49 << /Matrix [ 17.820910 0.000000 -0.000000 14.643537 -0.679199 0.492389 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 203 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P116 << /Matrix [ 45.346653 0.000000 -0.000000 87.780891 -27.266113 -44.511482 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 205 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P19 << /Matrix [ 13.565078 0.000000 -0.000000 20.459478 1.376953 -2.503119 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 207 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P81 << /Matrix [ 46.216228 0.000000 -0.000000 112.171379 -1.885254 -54.616936 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 209 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P9 << /Matrix [ 33.168156 0.000000 -0.000000 12.015253 -8.142578 1.864080 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 211 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P23 << /Matrix [ 34.939476 0.000000 -0.000000 11.987522 -9.071289 1.849331 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 213 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P28 << /Matrix [ 28.607016 0.000000 -0.000000 12.310051 -6.085449 1.686836 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 215 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P21 << /Matrix [ 19.887968 0.000000 -0.000000 13.744007 -1.650879 0.969128 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 217 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P59 << /Matrix [ 38.870274 0.000000 -0.000000 143.485397 -1.641113 -49.796249 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 219 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P17 << /Matrix [ 12.297680 0.000000 -0.000000 28.612734 2.023926 -6.601625 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 221 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P27 << /Matrix [ 12.371730 0.000000 -0.000000 28.049982 1.968262 -6.390131 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 223 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P36 << /Matrix [ 24.068836 0.000000 -0.000000 12.843055 -3.658691 1.388024 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 225 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P38 << /Matrix [ 29.890892 0.000000 -0.000000 12.215808 -6.506836 1.708875 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 227 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P26 << /Matrix [ 12.248888 0.000000 -0.000000 29.174997 2.012695 -6.960093 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 229 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P15 << /Matrix [ 26.040642 0.000000 -0.000000 12.563046 -4.690430 1.545170 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 231 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P2 << /Matrix [ 20.278463 0.000000 -0.000000 13.601145 -1.865723 1.011587 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 233 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P143 << /Matrix [ 80.634216 0.000000 -0.000000 50.418732 -34.325195 -4.671783 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 235 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P61 << /Matrix [ 45.937130 0.000000 -0.000000 224.181168 -25.146973 -131.822220 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 237 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P62 << /Matrix [ 97.429199 0.000000 -0.000000 35.254116 -47.575684 -0.364346 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 239 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P147 << /Matrix [ 19.470219 0.000000 -0.000000 70.845413 -1.737305 0.650864 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 241 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P13 << /Matrix [ 12.528292 0.000000 -0.000000 25.966949 1.895996 -5.376129 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 243 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P12 << /Matrix [ 12.822624 0.000000 -0.000000 24.065649 1.756348 -4.274633 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 245 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P146 << /Matrix [ 16.005358 0.000000 -0.000000 16.005358 -0.181152 0.185865 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 247 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P114 << /Matrix [ 45.296741 0.000000 -0.000000 87.771797 -1.784180 -28.699165 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 249 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P50 << /Matrix [ 62.384464 0.000000 -0.000000 41.118759 -8.800781 -18.855148 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 251 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P20 << /Matrix [ 20.813383 0.000000 -0.000000 13.471159 -2.123047 1.093416 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 253 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P46 << /Matrix [ 14.355103 0.000000 -0.000000 18.332323 1.015137 -1.394762 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 255 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P123 << /Matrix [ 120.953018 0.000000 -0.000000 53.253315 -37.616699 -6.958149 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 257 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P1 << /Matrix [ 15.970793 0.000000 -0.000000 15.970793 0.017578 0.018526 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 259 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P5 << /Matrix [ 13.639157 0.000000 -0.000000 20.289686 1.345703 -2.423780 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 261 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P138 << /Matrix [ 44.143578 0.000000 -0.000000 56.415596 -2.205078 -16.779305 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 263 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P8 << /Matrix [ 33.109142 0.000000 -0.000000 12.027673 -8.117188 1.856421 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 265 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P42 << /Matrix [ 11.932861 0.000000 -0.000000 35.313255 2.180664 -10.065880 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 267 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P11 << /Matrix [ 24.973854 0.000000 -0.000000 12.622338 -4.172363 1.473914 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 269 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P117 << /Matrix [ 57.277424 0.000000 -0.000000 123.576851 -34.700195 -63.013924 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 271 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P14 << /Matrix [ 28.474459 0.000000 -0.000000 12.356841 -5.843262 1.669587 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 273 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P7 << /Matrix [ 12.019451 0.000000 -0.000000 33.413696 2.148926 -9.139893 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 275 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P31 << /Matrix [ 12.813802 0.000000 -0.000000 23.984604 1.735352 -4.258835 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 277 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P85 << /Matrix [ 53.628609 0.000000 -0.000000 124.395126 -31.621582 -56.341293 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 279 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P91 << /Matrix [ 109.854263 0.000000 -0.000000 52.036232 -27.053223 -26.314430 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 281 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P99 << /Matrix [ 49.541866 0.000000 -0.000000 245.092941 -5.856934 -139.982346 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 283 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P87 << /Matrix [ 108.799568 0.000000 -0.000000 49.648712 -45.090332 -29.229523 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 285 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P18 << /Matrix [ 13.849527 0.000000 -0.000000 19.638321 1.260254 -2.060501 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 287 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P24 << /Matrix [ 11.992099 0.000000 -0.000000 34.275223 2.174316 -9.567886 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 289 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P51 << /Matrix [ 68.285011 0.000000 -0.000000 71.059082 -10.810059 -32.884338 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 291 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P3 << /Matrix [ 21.070957 0.000000 -0.000000 13.408751 -2.299316 1.124513 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 293 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P6 << /Matrix [ 11.974309 0.000000 -0.000000 34.120037 2.151367 -9.437054 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 295 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
              >> >>
endobj

298 0 obj
  << /Length 299 0 R >>
stream
/DeviceRGB CS
/DeviceRGB cs
q
1.000000 0.000000 -0.000000 1.000000 0.000000 1.337097 cm
/Pattern cs
/P1 scn
8.000049 -0.668505 m
12.066390 -0.668505 15.362809 2.613891 15.362809 6.662928 c
15.362809 10.711966 12.066390 13.994358 8.000049 13.994358 c
3.933706 13.994358 0.637284 10.711966 0.637284 6.662928 c
0.637284 2.613891 3.933706 -0.668505 8.000049 -0.668505 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.631714 cm
/Pattern cs
/P2 scn
3.277340 -0.555172 m
4.051170 -1.608994 5.143636 -2.277549 6.349901 -2.413527 c
6.440939 -2.424857 l
6.406800 -2.334207 l
6.327141 -2.084915 6.327141 -1.835624 6.327141 -1.575001 c
6.327141 -1.507012 l
6.258862 -1.518343 l
5.485032 -1.586332 4.654303 -1.246389 3.800814 -0.498516 c
2.628689 0.679953 2.093836 2.289014 2.355572 3.920739 c
2.241774 3.943402 l
1.957278 2.424992 2.355572 0.702616 3.277340 -0.555172 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.484436 cm
/Pattern cs
/P3 scn
9.581792 -0.770517 m
9.854908 -1.575048 l
9.889049 -1.575048 l
12.403995 -1.903659 13.724056 -4.679856 13.553359 -7.184100 c
13.667157 -7.195434 l
13.894754 -5.427732 13.416800 -3.535383 12.415374 -2.266265 c
11.698443 -1.348419 10.742537 -0.804511 9.638691 -0.679865 c
9.559032 -0.679865 l
9.581792 -0.770517 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.796021 cm
/Pattern cs
/P4 scn
8.751060 -5.416390 m
8.671401 -5.450385 8.557602 -5.450385 8.455184 -5.450385 c
8.330006 -5.450385 8.204826 -5.450384 8.204826 -5.552367 c
8.216207 -5.518373 l
7.965850 -5.869647 7.772392 -6.243584 7.590315 -6.594857 c
7.317198 -7.116102 7.066841 -7.603353 6.668547 -7.999951 c
5.701259 -8.895132 4.369817 -9.393714 2.924576 -9.393714 c
2.708359 -9.393714 2.458002 -9.382381 2.219025 -9.359719 c
2.207645 -9.473035 l
2.446622 -9.495697 2.685600 -9.507029 2.924576 -9.507029 c
4.677073 -9.552354 6.099555 -9.099097 7.180640 -8.169922 c
7.988610 -7.524032 8.557602 -6.617520 8.842098 -5.473048 c
8.876238 -5.348402 l
8.751060 -5.416390 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.796021 cm
/Pattern cs
/P5 scn
12.586118 1.903699 m
11.436752 1.869705 10.389805 1.631745 9.445277 1.201150 c
8.079694 0.419282 7.260345 -0.849838 7.260345 -2.198277 c
7.260345 -2.277598 l
8.147973 -1.982980 l
8.147973 -1.948986 l
8.295912 0.317299 10.492225 1.643076 12.586118 1.790385 c
12.904754 1.801716 13.223391 1.790385 13.519267 1.779053 c
13.530646 1.892367 l
13.223391 1.926362 12.904754 1.926362 12.586118 1.903699 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.702515 cm
/Pattern cs
/P6 scn
0.011380 -4.770469 m
1.331442 -7.036750 4.438142 -7.999920 6.816531 -6.855448 c
6.827911 -6.855448 l
6.839290 -6.844116 l
7.009988 -6.674145 7.169306 -6.515507 7.419663 -6.424855 c
7.556221 -6.379529 l
7.431044 -6.311541 l
7.374145 -6.277546 7.305864 -6.220888 7.248965 -6.175563 c
7.135167 -6.073580 7.021368 -5.982929 6.930330 -6.073581 c
6.953089 -6.062249 l
6.634453 -6.152901 6.315817 -6.266215 6.019941 -6.379529 c
5.416809 -6.606157 4.802297 -6.832785 4.119506 -6.832785 c
2.617366 -6.742134 1.081086 -5.937604 0.113798 -4.702480 c
0.011380 -4.770469 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.087830 cm
/Pattern cs
/P7 scn
8.648589 -3.365445 m
8.603069 -3.410771 l
8.648589 -3.456097 l
8.739628 -3.546749 8.853427 -3.592074 8.967225 -3.637400 c
9.069644 -3.682726 9.172063 -3.716720 9.251721 -3.796040 c
9.285861 -3.830034 l
9.331380 -3.796040 l
11.379755 -2.266296 14.384038 -3.240800 15.806520 -5.076493 c
15.897559 -5.008504 l
15.522024 -4.475927 14.975790 -3.966012 14.247479 -3.444765 c
14.110921 -3.354114 13.985742 -3.286125 13.849184 -3.229468 c
13.724005 -3.161479 13.598827 -3.104822 13.462269 -3.014171 c
11.857709 -2.164313 9.877614 -2.311622 8.648589 -3.365445 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 8.453247 cm
/Pattern cs
/P8 scn
9.672840 -1.087818 m
9.672840 -1.167138 9.672840 -1.235126 9.604562 -1.303115 c
9.422483 -1.393766 9.251785 -1.575069 9.160747 -1.756371 c
9.137988 -1.790366 l
9.160747 -1.824360 l
9.741119 -2.447589 10.036995 -3.240788 10.036995 -4.135972 c
10.036995 -4.271949 10.025615 -4.407926 10.014235 -4.543903 c
9.877677 -5.971663 9.001430 -7.467410 7.783786 -8.362594 c
7.852065 -8.453246 l
9.137987 -7.648715 10.093895 -6.254949 10.412531 -4.713875 c
10.708406 -3.376766 10.469429 -2.084984 9.775259 -1.065155 c
9.672840 -0.906515 l
9.672840 -1.087818 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 8.555237 cm
/Pattern cs
/P9 scn
7.237584 6.798872 m
6.110980 5.699724 5.473709 4.521256 5.348531 3.274799 c
5.325771 2.764885 l
5.325771 1.609080 5.655786 0.702566 6.315816 0.045343 c
6.361337 0.000018 l
6.406856 0.045343 l
6.497894 0.135995 6.543414 0.249309 6.588933 0.362624 c
6.634452 0.464606 6.668591 0.566589 6.748250 0.645908 c
6.782390 0.679903 l
6.748250 0.725229 l
6.190638 1.416446 5.906143 2.288965 5.906143 3.229473 c
5.906143 4.464599 6.440995 5.767713 7.317243 6.708220 c
7.567599 6.946180 7.795196 7.161478 8.034172 7.342781 c
7.965894 7.444763 l
7.726917 7.274792 7.487940 7.059495 7.237584 6.798872 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.062317 cm
/Pattern cs
/P10 scn
3.971720 4.759193 m
4.051379 4.249280 4.142418 3.728034 4.313116 3.206789 c
4.620372 1.257784 5.269024 -0.056660 6.407010 -1.031162 c
6.532188 -1.155808 6.657366 -1.031163 6.748405 -0.940511 c
6.759785 -0.929179 l
6.759785 -0.917848 l
6.828064 -0.770539 6.907724 -0.691219 6.964623 -0.691219 c
7.089801 -0.691219 l
6.998763 -0.589237 l
5.451102 1.144470 4.472434 2.957498 4.085519 4.781857 c
3.971720 4.759193 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.130310 cm
/Pattern cs
/P11 scn
9.138001 -3.354099 m
9.001443 -3.433419 8.899023 -3.592058 8.899023 -3.716703 c
8.899023 -3.954663 9.081101 -4.124636 9.285938 -4.294607 c
9.399737 -4.396589 9.513535 -4.487241 9.604575 -4.611886 c
9.729753 -4.804521 l
9.832171 -4.963161 9.911830 -5.087807 10.037008 -5.212452 c
10.890497 -6.628880 11.436731 -7.875337 11.755368 -9.144456 c
11.869166 -9.110460 l
11.607429 -7.943324 l
11.243274 -6.232280 10.856359 -4.453246 9.433877 -3.320105 c
9.331458 -3.274778 9.229040 -3.286110 9.138001 -3.354099 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.872498 cm
/Pattern cs
/P12 scn
9.001301 -3.320082 m
8.955781 -3.365407 l
9.001301 -3.410733 l
9.080959 -3.490053 9.171999 -3.603367 9.251657 -3.705350 c
9.342696 -3.807333 9.422355 -3.920647 9.513393 -4.011298 c
9.558913 -4.056624 l
9.604432 -4.011298 l
9.775130 -3.841327 9.945828 -3.694019 10.116526 -3.546710 c
10.287224 -3.399402 10.457922 -3.240762 10.639999 -3.070790 c
10.719658 -2.991470 10.822077 -2.957476 10.924496 -2.912150 c
11.038294 -2.866825 11.152093 -2.821499 11.243132 -2.730848 c
11.527628 -2.447562 11.812123 -2.288922 12.142139 -2.096288 c
12.358356 -1.960311 l
12.381117 -1.937649 12.438016 -1.937649 12.494915 -1.937649 c
12.563194 -1.937649 12.654232 -1.937648 12.711132 -1.880991 c
12.699752 -1.892323 l
13.189085 -1.586374 13.723939 -1.416403 14.236032 -1.246432 c
14.850543 -1.042466 l
14.816404 -0.929152 l
12.972868 -1.201106 10.662759 -1.756346 9.001301 -3.320082 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.099182 cm
/Pattern cs
/P13 scn
6.497760 -6.119028 m
4.415247 -7.569449 2.696890 -8.419306 0.910253 -8.861231 c
0.921633 -8.974545 l
3.425200 -8.872562 5.439435 -8.113358 6.918815 -6.719594 c
6.930194 -6.708262 l
6.930194 -6.696930 l
6.998474 -6.549622 6.861916 -6.424977 6.736737 -6.311663 c
6.668458 -6.255006 6.611559 -6.187016 6.577419 -6.130360 c
6.543280 -6.073702 l
6.497760 -6.119028 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.994324 cm
/Pattern cs
/P14 scn
7.510817 -0.305921 m
7.510817 -0.373909 l
8.409825 -0.373909 l
8.409825 -0.317252 l
8.330166 1.473113 8.910538 3.467443 10.128181 5.575088 c
10.025763 5.631745 l
8.853638 3.898037 7.692894 1.994358 7.510817 -0.305921 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.869690 cm
/Pattern cs
/P15 scn
8.330115 -3.660045 m
8.079759 -3.739365 7.840782 -3.739365 7.590425 -3.660045 c
7.510767 -3.637382 l
7.510767 -3.637382 7.510767 -4.385256 7.510767 -4.396587 c
7.157991 -6.084970 6.816596 -7.490067 5.974487 -8.917827 c
5.803789 -9.087798 5.621712 -9.269100 5.530673 -9.541055 c
5.462394 -9.756351 l
5.633091 -9.597713 l
7.385588 -7.943324 8.034240 -5.597718 8.409775 -3.728033 c
8.432534 -3.626050 l
8.330115 -3.660045 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.246460 cm
/Pattern cs
/P16 scn
9.718398 -5.053798 m
9.672878 -5.065129 l
9.672878 -5.858329 l
9.729777 -5.858329 l
11.664351 -5.858329 13.405468 -6.481556 15.021407 -7.127447 c
15.192104 -7.263424 15.385563 -7.399402 15.556260 -7.558042 c
15.635918 -7.467390 l
15.465219 -7.297419 15.283143 -7.116117 15.101066 -7.025465 c
15.078306 -7.014133 l
15.078306 -7.014133 15.078305 -7.014133 15.066925 -7.014133 c
14.406894 -6.515551 13.678584 -6.118952 12.756817 -5.733683 c
12.597499 -5.665694 l
11.721251 -5.269094 10.708445 -4.804506 9.718398 -5.053798 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.985840 cm
/Pattern cs
/P17 scn
0.204932 -2.832821 m
1.115320 -3.467381 l
2.685740 -4.600523 4.324439 -5.756328 6.293153 -5.257746 c
6.361433 -5.235083 l
6.327292 -5.167093 l
6.281773 -5.076443 6.179354 -4.827151 6.236253 -4.702506 c
6.270393 -4.623186 l
6.190734 -4.611855 l
3.971663 -4.419220 2.298825 -3.897974 0.785305 -2.912141 c
0.682886 -2.866815 0.591847 -2.844152 0.512188 -2.821489 c
0.421149 -2.798827 0.341490 -2.776164 0.261831 -2.742169 c
0.204932 -2.832821 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.501404 cm
/Pattern cs
/P18 scn
0.432623 -0.713825 m
0.899197 -2.572178 2.173741 -4.135915 3.755540 -4.793138 c
4.836626 -5.189737 5.781154 -5.178406 6.646022 -4.793138 c
6.691541 -4.770475 l
6.384285 -3.965943 l
6.327386 -3.999938 l
5.371479 -4.589171 4.074175 -4.464526 2.765493 -3.659995 c
1.718546 -3.014104 0.910577 -1.937619 0.546422 -0.691162 c
0.432623 -0.713825 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.286133 cm
/Pattern cs
/P19 scn
9.365499 -2.062301 m
9.274459 -2.084963 l
9.342738 -2.152952 l
9.376878 -2.186946 9.388258 -2.254934 9.411017 -2.311591 c
9.433777 -2.413574 9.467916 -2.515557 9.558955 -2.515557 c
11.265934 -2.515557 12.665656 -2.934819 13.837781 -3.796007 c
14.497812 -4.373909 15.009906 -5.110452 15.374062 -6.005633 c
15.487860 -5.960307 l
14.577472 -3.444733 12.039763 -1.291765 9.365499 -2.062301 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.699768 cm
/Pattern cs
/P20 scn
6.645776 -0.464660 m
6.679915 -0.589305 l
6.748194 -0.475991 l
6.873373 -0.294688 7.032691 -0.260695 7.226148 -0.204037 c
7.476505 -0.136048 l
7.442366 -0.079391 l
7.044071 0.849785 7.066830 1.869613 7.510644 2.855447 c
8.068257 4.101903 9.251763 5.155725 10.605966 5.597651 c
10.571827 5.710966 l
7.817901 4.974423 5.985744 2.096241 6.645776 -0.464660 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.654419 cm
/Pattern cs
/P21 scn
9.149546 -2.968851 m
9.069886 -3.195479 8.842289 -3.354120 8.603312 -3.354120 c
8.523654 -3.354120 l
8.546412 -3.433440 l
8.660211 -3.750720 8.717111 -4.090663 8.717111 -4.430606 c
8.717111 -5.371114 8.273297 -6.300291 7.943282 -6.912189 c
7.704305 -7.297457 7.374289 -7.580742 7.021514 -7.864028 c
6.782537 -8.067994 6.520801 -8.283291 6.304584 -8.532583 c
6.304584 -8.532583 6.168025 -8.645896 6.156646 -8.657227 c
5.792490 -8.827199 5.428335 -8.951845 5.041420 -9.031165 c
5.064180 -9.144478 l
5.132459 -9.133148 l
5.485235 -9.065160 5.894909 -8.985841 6.213545 -8.759212 c
6.805297 -8.487257 7.362909 -8.090657 8.034320 -7.501423 c
8.933328 -6.538251 9.445421 -5.314456 9.445421 -4.158650 c
9.445421 -3.750719 9.377142 -3.354119 9.251964 -2.968851 c
9.195065 -2.798880 l
9.149546 -2.968851 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 8.770569 cm
/Pattern cs
/P22 scn
6.167788 -0.861222 m
6.201927 -0.872554 l
6.224687 -0.838559 l
6.327106 -0.736576 6.327106 -0.611931 6.327106 -0.498616 c
6.327106 -0.396633 6.327106 -0.305983 6.395385 -0.237995 c
6.452284 -0.181337 l
6.384005 -0.147342 l
4.051135 1.053788 3.595941 4.147265 4.517709 6.311567 c
4.415290 6.356893 l
3.448002 4.192591 3.345584 0.407897 6.167788 -0.861222 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 8.577942 cm
/Pattern cs
/P23 scn
9.786581 -0.827225 m
9.741061 -1.042522 9.695542 -1.257818 9.513464 -1.427790 c
9.456565 -1.484447 l
9.536225 -1.518442 l
10.457993 -1.960367 11.129403 -2.742235 11.482179 -3.796058 c
11.914613 -5.099172 11.789434 -6.662909 11.152163 -7.875371 c
11.254581 -7.932029 l
11.903233 -6.798886 12.142210 -5.450446 11.948752 -3.943367 c
11.948752 -3.252151 11.687016 -2.470281 11.243202 -1.858384 c
10.947327 -1.507110 10.651449 -1.235155 10.366954 -0.974532 c
9.866240 -0.509944 l
9.786581 -0.827225 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.178467 cm
/Pattern cs
/P24 scn
9.797846 -1.552431 m
9.126434 -1.801723 8.500543 -2.390956 8.125008 -3.116168 c
8.113627 -3.127499 7.760852 -3.478772 7.760852 -3.478772 c
8.068109 -3.467441 l
8.295706 -3.456110 8.534682 -3.444778 8.728140 -3.626081 c
8.785039 -3.682738 l
8.819179 -3.614749 l
9.126434 -3.002853 9.593008 -2.481608 10.264420 -2.005688 c
11.686901 -1.223820 13.462158 -1.189826 15.123616 -1.926368 c
15.180515 -1.824385 l
13.792173 -0.963197 11.777940 -0.861214 9.797846 -1.552431 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.371094 cm
/Pattern cs
/P25 scn
7.271739 -7.082145 m
6.099614 -8.770527 4.062620 -9.541064 1.945967 -9.110470 c
1.559052 -9.008487 1.149377 -8.872511 0.694183 -8.702539 c
0.637284 -8.815853 l
1.035579 -8.997156 1.456633 -9.133133 1.911828 -9.223784 c
3.413968 -9.631716 4.631613 -9.643047 5.780978 -9.246448 c
6.907583 -8.838516 7.647274 -8.067979 7.806592 -7.138802 c
7.817971 -7.082145 l
7.738313 -7.070813 l
7.567615 -7.048151 l
7.465197 -7.025488 7.351398 -7.014156 7.271739 -7.082145 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.781921 cm
/Pattern cs
/P26 scn
3.641552 -2.685585 m
2.116652 -3.082185 0.728310 -4.170001 0.000000 -5.518438 c
0.102419 -5.575096 l
0.933148 -4.147338 2.367009 -3.229493 4.028467 -3.059522 c
5.155072 -3.025528 6.019940 -3.274819 6.577553 -3.818727 c
6.623073 -3.864053 l
6.668592 -3.818727 l
6.839289 -3.614761 6.987227 -3.422127 7.214825 -3.286150 c
7.294484 -3.240824 l
7.214825 -3.195499 l
6.179258 -2.538277 4.916095 -2.356974 3.641552 -2.685585 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.611938 cm
/Pattern cs
/P27 scn
9.513491 -5.767768 m
9.479352 -5.745104 l
8.682763 -6.255018 l
8.762421 -6.300344 l
9.695568 -6.889578 10.788033 -7.070881 11.914638 -6.821589 c
13.496435 -6.470315 15.055473 -5.303179 16.000000 -3.784767 c
15.897581 -3.716779 l
14.463721 -5.779099 11.675661 -7.104877 9.513491 -5.767768 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 8.634583 cm
/Pattern cs
/P28 scn
7.044135 7.263435 m
8.489376 6.322927 9.411144 4.951825 9.627361 3.422083 c
9.638741 3.320100 9.638741 3.218117 9.638741 3.116135 c
9.638741 2.662878 9.547703 2.220952 9.445284 1.756364 c
9.365625 1.359764 9.274586 0.963165 9.240446 0.532570 c
9.251826 0.566565 l
9.183548 0.487245 9.285965 0.407925 9.388384 0.328605 c
9.468043 0.260617 9.559083 0.192627 9.593222 0.113308 c
9.650122 -0.000007 l
9.707021 0.113308 l
10.207734 1.178461 10.344292 2.232284 10.128075 3.252112 c
9.854959 4.838511 8.830771 6.220944 7.101034 7.365417 c
7.044135 7.263435 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 8.815857 cm
/Pattern cs
/P29 scn
6.395552 -1.631739 m
5.883460 -2.266299 5.610343 -3.059498 5.610343 -3.943349 c
5.610343 -4.498589 5.724141 -5.087823 5.940358 -5.643063 c
6.406932 -6.606234 7.112483 -7.490085 8.022870 -8.249290 c
8.261847 -8.464587 8.466682 -8.623229 8.671520 -8.747875 c
8.739799 -8.657222 l
8.534963 -8.509913 8.330125 -8.351274 8.102528 -8.169971 c
6.987303 -7.172806 6.293133 -5.745046 6.293133 -4.430601 c
6.293133 -3.671395 6.509350 -2.991509 6.941784 -2.390944 c
6.964544 -2.356950 l
6.463831 -1.563750 l
6.395552 -1.631739 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.580750 cm
/Pattern cs
/P30 scn
1.832111 1.450439 m
1.866251 1.337125 l
3.391151 1.677068 5.109509 1.348457 6.327153 0.464606 c
6.850626 0.034011 7.180643 -0.532559 7.510658 -1.076468 c
7.669976 -1.359753 7.840673 -1.643039 8.034131 -1.903662 c
8.068271 -2.005644 8.204828 -1.994313 8.330007 -1.994313 c
8.409666 -1.994313 8.500705 -1.982982 8.557604 -2.005645 c
8.694162 -2.039639 l
8.614503 -1.926325 l
8.477945 -1.711028 8.455185 -1.484399 8.432426 -1.235107 c
8.432426 -1.212445 l
7.317200 1.167154 4.290159 2.379616 1.832111 1.450439 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.226624 cm
/Pattern cs
/P31 scn
7.453869 -5.948962 m
7.396970 -5.960294 l
7.408350 -6.016951 l
7.681467 -7.603351 9.126707 -8.963121 10.913343 -9.314396 c
11.072661 -9.325727 11.209220 -9.359721 11.345778 -9.393716 c
11.482336 -9.427711 11.630274 -9.461705 11.789592 -9.473037 c
12.688600 -9.529694 13.439670 -9.473038 14.065562 -9.303066 c
14.031423 -9.189751 l
11.766832 -9.710997 8.819451 -8.577853 8.204939 -6.107602 c
8.193559 -6.062277 l
8.148040 -6.062277 l
8.034242 -6.073608 7.931823 -6.039614 7.829404 -6.005619 c
7.704226 -5.971625 7.579048 -5.937631 7.453869 -5.948962 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.019897 cm
/Pattern cs
/P32 scn
12.836429 5.189704 m
12.950228 4.759110 12.995747 4.305853 12.995747 3.841265 c
12.995747 2.764779 12.699871 1.665632 12.130878 0.827106 c
11.539126 -0.056746 10.719777 -0.589323 9.752490 -0.736631 c
9.706971 -0.747963 l
9.695591 -0.781958 l
9.684211 -0.849946 9.672832 -0.917935 9.672832 -0.985924 c
9.672832 -1.133232 9.706971 -1.280540 9.752490 -1.405187 c
9.752490 -1.416517 9.752490 -1.427849 9.752490 -1.427849 c
9.752490 -1.507169 9.718351 -1.552495 9.661452 -1.609152 c
9.559032 -1.767791 l
9.741110 -1.711134 l
10.935994 -1.359859 11.926042 -0.498672 12.551933 0.702460 c
13.280244 2.096225 13.416800 3.784607 12.938848 5.212367 c
12.836429 5.189704 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.235168 cm
/Pattern cs
/P33 scn
6.293119 -0.691217 m
5.234794 -0.793200 4.301646 -1.439091 3.493677 -2.583564 c
2.936064 -3.410758 2.662948 -4.419255 2.662948 -5.586392 c
2.662948 -5.903671 2.685707 -6.243614 2.731227 -6.606219 c
2.765366 -6.934831 2.810886 -7.206786 2.879165 -7.456078 c
2.992963 -7.433415 l
2.936064 -7.161461 2.890545 -6.878174 2.845025 -6.594889 c
2.845025 -6.538232 l
2.822266 -6.141632 l
2.822266 -4.203959 3.983010 -1.982999 6.202081 -1.495749 c
6.247601 -1.484417 l
6.247601 -1.382434 l
6.247601 -1.291782 6.270360 -1.201130 6.304500 -1.110479 c
6.338639 -1.008496 6.361399 -0.917846 6.361399 -0.804532 c
6.350019 -0.691217 l
6.293119 -0.691217 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.929138 cm
/Pattern cs
/P34 scn
6.088185 -4.781779 m
4.597425 -4.827105 3.265982 -5.427670 1.786602 -6.753446 c
1.331408 -7.036732 0.921733 -7.399337 0.534818 -7.739280 c
0.614477 -7.829930 l
2.071098 -6.640132 3.982913 -5.858264 6.293023 -5.484327 c
6.418201 -5.461664 l
6.315783 -5.382344 l
6.270263 -5.348350 6.258883 -5.235036 6.304402 -5.076396 c
6.304402 -5.053733 l
6.293023 -4.940419 6.270263 -4.759117 6.088185 -4.781779 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.940491 cm
/Pattern cs
/P35 scn
11.505049 -3.875292 m
11.322971 -3.897955 11.186412 -3.943281 11.004334 -3.999938 c
10.788118 -4.067926 l
10.640181 -4.101920 10.492242 -4.113252 10.344304 -4.113252 c
10.082567 -4.124583 9.843590 -4.124583 9.684272 -4.317217 c
9.638753 -4.373874 9.604614 -4.475858 9.604614 -4.566509 c
9.604614 -4.623167 9.615993 -4.691155 9.638753 -4.747812 c
9.672893 -4.861126 9.741172 -4.929114 9.832211 -4.951777 c
9.854970 -4.951777 l
11.675746 -4.963108 13.098228 -3.829967 14.475189 -2.730818 c
15.419718 -1.994276 l
15.351438 -1.903625 l
14.281732 -2.685493 13.064089 -3.308721 11.505049 -3.875292 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.266296 cm
/Pattern cs
/P36 scn
8.602962 -3.931974 m
8.477784 -3.943305 8.341225 -3.977300 8.204667 -3.999963 c
8.068109 -4.022625 7.942930 -4.056620 7.817751 -4.067951 c
7.760852 -4.079282 l
7.772233 -4.135940 l
8.068110 -6.402225 9.513350 -8.283240 10.742375 -9.665674 c
10.833413 -9.597689 l
10.492018 -9.053779 l
10.196141 -8.600522 9.900266 -8.124601 9.706808 -7.592024 c
9.706808 -7.603356 l
9.695428 -7.524036 9.638529 -7.467379 9.581630 -7.422053 c
9.536110 -7.388059 9.501971 -7.354064 9.501971 -7.320070 c
9.501971 -7.308739 l
9.410932 -7.070779 l
9.274373 -6.719504 9.160574 -6.402225 9.126435 -6.016956 c
9.115055 -5.880979 9.058157 -5.778996 8.989878 -5.677012 c
8.932979 -5.575030 8.887459 -5.484380 8.876079 -5.371065 c
8.853319 -5.121774 8.807799 -4.895144 8.773660 -4.679848 c
8.739520 -4.464551 8.694001 -4.226591 8.671241 -3.988631 c
8.659862 -3.931974 l
8.602962 -3.931974 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.209656 cm
/Pattern cs
/P37 scn
4.881973 5.121758 m
5.985819 3.660004 6.782408 1.914965 7.476579 -0.521291 c
7.499339 -0.589280 l
7.556239 -0.566617 l
7.613138 -0.543954 7.704176 -0.532623 7.795215 -0.532623 c
7.965913 -0.521291 8.147991 -0.509960 8.193511 -0.351320 c
8.193511 -0.328657 l
7.920394 1.699668 6.839307 3.546690 4.961632 5.201078 c
4.881973 5.121758 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.733704 cm
/Pattern cs
/P38 scn
6.532022 -2.776168 m
5.211958 -4.668515 4.904702 -6.878143 4.699865 -8.974456 c
4.813663 -8.985789 l
5.211958 -6.583527 6.031308 -4.679846 7.226192 -3.331407 c
7.271711 -3.286081 l
6.577540 -2.719511 l
6.532022 -2.776168 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.393799 cm
/Pattern cs
/P39 scn
10.936109 6.062300 m
10.879210 5.914991 10.867829 5.767683 10.867829 5.631705 c
10.867829 5.518391 10.879210 5.416409 10.890590 5.303094 c
10.628853 3.660038 10.002962 2.356924 9.206373 0.827182 c
9.194993 0.815850 8.728419 0.237947 8.728419 0.237947 c
8.808078 0.203953 l
9.047054 0.113302 9.240513 -0.045338 9.377070 -0.260635 c
9.433969 -0.339955 l
9.479489 -0.249304 l
10.367118 1.427747 11.357163 3.671369 11.049908 6.039637 c
11.015769 6.266265 l
10.936109 6.062300 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.450439 cm
/Pattern cs
/P40 scn
9.627286 -6.118996 m
9.160712 -6.685566 l
9.183472 -6.719561 l
9.797984 -7.535421 10.867691 -7.818707 11.823599 -8.067997 c
11.994297 -8.113324 l
12.938826 -8.396609 13.758175 -8.532586 14.588905 -8.566580 c
14.623044 -8.577911 l
14.816502 -8.623237 15.066859 -8.600574 15.317216 -8.566580 c
15.305835 -8.453265 l
15.066857 -8.464597 14.839260 -8.453265 14.611663 -8.453265 c
12.950204 -7.932020 11.209087 -7.331456 9.706946 -6.107664 c
9.661427 -6.073669 l
9.627286 -6.118996 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.575073 cm
/Pattern cs
/P41 scn
0.557643 -2.492916 m
0.648681 -2.515579 0.716960 -2.549573 0.796619 -2.583568 c
0.876278 -2.617562 0.967317 -2.662887 1.058356 -2.685550 c
2.856373 -2.878184 4.483691 -3.524076 6.338607 -4.759202 c
6.406885 -4.804527 l
6.429646 -4.725207 l
6.463785 -4.600561 6.702762 -4.464584 6.793801 -4.419259 c
6.862080 -4.385264 l
6.827940 -4.339939 l
5.621676 -2.708213 3.618822 -2.583567 1.684248 -2.458921 c
0.580402 -2.379602 l
0.557643 -2.492916 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.212463 cm
/Pattern cs
/P42 scn
0.352711 -2.662842 m
0.420990 -2.753494 l
1.490696 -2.016951 2.799380 -1.677009 4.028404 -1.846980 c
5.553305 -2.050946 6.634390 -2.764825 7.009926 -3.818648 c
7.032685 -3.886637 l
7.783755 -3.456042 l
7.760995 -3.410717 l
7.328561 -2.549529 6.600251 -1.960294 5.519165 -1.586357 c
3.869086 -1.099105 1.888991 -1.518368 0.352711 -2.662842 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.427734 cm
/Pattern cs
/P43 scn
8.466387 -7.104752 m
8.409488 -7.138746 8.352588 -7.184072 8.318449 -7.184072 c
8.216029 -7.195403 l
8.272928 -7.274723 l
9.854728 -9.552342 13.177645 -9.484354 15.487753 -8.090587 c
15.430854 -7.988604 l
14.588746 -8.453193 13.712498 -8.702486 12.836249 -8.736480 c
11.379628 -8.657160 10.036805 -8.101919 8.716743 -7.036763 c
8.637084 -6.980106 8.546045 -7.048095 8.466387 -7.104752 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 8.668579 cm
/Pattern cs
/P44 scn
6.156346 -0.827184 m
4.016935 -2.390921 3.607260 -5.779016 5.280098 -8.079296 c
5.371137 -8.011306 l
4.608687 -6.821506 4.358331 -5.257771 4.711106 -3.943326 c
4.995602 -2.900835 5.621493 -2.096304 6.520501 -1.620384 c
6.577400 -1.586390 l
6.429463 -1.382423 l
6.315665 -1.223783 6.213245 -1.087807 6.236005 -0.872510 c
6.247386 -0.747865 l
6.156346 -0.827184 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 8.498596 cm
/Pattern cs
/P45 scn
10.378333 7.025478 m
10.628691 6.719530 10.833528 6.390918 11.004226 6.039644 c
11.004226 6.028313 11.038366 5.847010 11.038366 5.847010 c
11.049746 5.507067 11.106645 5.189787 11.163544 4.883839 c
11.220444 4.555227 11.288722 4.226616 11.288722 3.886674 c
11.265963 3.569394 l
11.061126 2.504240 10.674210 1.189795 9.524844 0.498579 c
9.456565 0.453252 l
9.524844 0.396595 l
9.661403 0.294612 9.741061 0.113309 9.741061 -0.056662 c
9.741061 -0.124650 9.729682 -0.192640 9.706923 -0.249297 c
9.650023 -0.407937 l
9.797961 -0.317285 l
11.015605 0.453252 11.732536 1.915006 11.732536 3.592057 c
11.721157 3.954662 l
11.584599 4.838513 11.391141 5.495736 11.106645 6.084970 c
10.992846 6.458907 10.731110 6.776186 10.503512 7.048141 c
10.469373 7.093466 l
10.378333 7.025478 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.685547 cm
/Pattern cs
/P46 scn
0.682993 -5.994317 m
0.796792 -6.028311 l
1.456823 -3.773357 3.766933 -1.665713 6.338779 -2.198290 c
6.418439 -2.209621 l
6.407059 -2.130301 l
6.395679 -2.028318 6.452578 -1.960330 6.520857 -1.881010 c
6.589137 -1.790358 6.668796 -1.699706 6.657415 -1.552398 c
6.657415 -1.507072 l
6.623276 -1.495741 l
3.618995 -0.713873 1.308885 -3.716701 0.682993 -5.994317 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.070801 cm
/Pattern cs
/P47 scn
12.722602 -2.798823 m
11.778074 -3.388058 10.765267 -3.580692 9.775220 -3.342732 c
9.695560 -3.320070 l
9.706941 -3.399390 l
9.729700 -3.648681 9.627281 -3.841315 9.536242 -4.033950 c
9.388305 -4.339898 l
9.490724 -4.328567 l
10.082475 -4.283241 l
10.469390 -4.260579 10.867685 -4.226583 11.311500 -4.147264 c
12.039810 -3.943298 12.745361 -3.501372 13.189177 -2.957464 c
14.293022 -1.914972 14.953053 -0.725173 15.169271 0.566610 c
15.055472 0.589273 l
14.782355 -0.770498 13.883348 -2.062281 12.722602 -2.798823 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.039673 cm
/Pattern cs
/P48 scn
6.736944 -3.410745 m
6.736944 -3.410745 6.771083 -3.750687 6.771083 -3.762018 c
6.714184 -4.011310 6.691424 -4.260601 6.691424 -4.509892 c
6.691424 -5.065132 6.827982 -5.597709 7.066958 -6.016971 c
8.159424 -7.796004 9.786742 -8.985804 11.425440 -9.212432 c
11.448198 -9.099118 l
9.695703 -8.623199 8.330122 -7.478725 7.726990 -5.971646 c
7.510773 -5.189777 7.476633 -4.475899 7.624571 -3.818676 c
7.647330 -3.739355 l
7.567672 -3.750687 l
7.294556 -3.773350 7.123858 -3.614710 6.953160 -3.456070 c
6.725563 -3.252105 l
6.736944 -3.410745 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.152954 cm
/Pattern cs
/P49 scn
4.426796 4.985858 m
4.904750 4.827219 5.314425 4.668579 5.701340 4.498607 c
7.465217 3.558099 8.523543 1.881048 8.523543 0.000031 c
8.512164 -0.396568 l
8.523544 -0.509882 8.625962 -0.566540 8.728380 -0.623197 c
8.921839 -0.747843 l
8.955977 -0.702517 l
9.160815 -0.351243 9.251855 0.034026 9.251855 0.453289 c
9.251855 1.019860 9.069776 1.620426 8.717001 2.198328 c
8.091108 3.218156 7.146581 3.977362 5.746859 4.600590 c
5.337184 4.815887 4.904750 4.985858 4.460936 5.099173 c
4.426796 4.985858 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.733704 cm
/Pattern cs
/P50 scn
2.310372 3.807417 m
1.786899 1.144532 3.425598 -2.118919 6.361599 -2.458862 c
6.270560 -2.198239 6.270560 -1.948948 6.270560 -1.688325 c
5.326032 -1.778976 4.461164 -1.257730 3.766993 -0.657165 c
2.560729 0.543966 2.048635 2.175692 2.310372 3.807417 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.373962 cm
/Pattern cs
/P51 scn
3.368674 -3.229432 m
3.892147 -3.943311 4.825295 -4.827163 6.281916 -5.031128 c
6.225016 -4.815831 6.213636 -4.600534 6.213636 -4.396569 c
5.417047 -4.441895 4.586318 -4.090620 3.732829 -3.354077 c
3.163836 -2.787506 2.754162 -2.118952 2.492425 -1.405072 c
2.674503 -2.050963 2.970379 -2.685523 3.368674 -3.229432 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.552429 cm
/Pattern cs
/P52 scn
13.610217 -7.263428 m
13.951612 -4.600543 12.665689 -1.167120 9.638648 -0.815846 c
9.729687 -1.076469 9.809346 -1.337092 9.900385 -1.586383 c
12.574651 -1.937657 13.780915 -4.861165 13.610217 -7.263428 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.558044 cm
/Pattern cs
/P53 scn
9.729842 -2.900781 m
9.729842 -2.900781 9.923300 -3.490015 9.946059 -3.546672 c
11.937532 -3.818626 13.132417 -5.484345 13.530712 -7.342699 c
13.371393 -6.243551 12.950339 -5.212391 12.335827 -4.419191 c
11.653036 -3.558003 10.754028 -3.036758 9.729842 -2.900781 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.864014 cm
/Pattern cs
/P54 scn
2.219025 -9.484345 m
3.948763 -9.654317 5.758159 -9.393693 7.135120 -8.192561 c
7.999989 -7.501344 8.512082 -6.560836 8.773819 -5.529675 c
8.603121 -5.620326 8.250345 -5.529675 8.250345 -5.620326 c
7.647213 -6.481515 7.385478 -7.422024 6.702687 -8.113241 c
5.496423 -9.235053 3.857724 -9.665648 2.219025 -9.484345 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.305969 cm
/Pattern cs
/P55 scn
8.455424 -6.073631 m
8.409905 -6.073631 8.341625 -6.073632 8.318866 -6.084964 c
8.307487 -6.096294 l
8.068510 -6.447569 7.875051 -6.810175 7.692974 -7.161449 c
7.419858 -7.682695 7.169501 -8.181278 6.748446 -8.600542 c
6.168073 -9.133120 5.473902 -9.518387 4.700071 -9.756347 c
5.633220 -9.563712 6.429810 -9.178445 7.101221 -8.600542 c
7.875051 -7.988645 8.409905 -7.127455 8.694402 -6.062301 c
8.614742 -6.073631 8.535084 -6.073631 8.455424 -6.073631 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.694092 cm
/Pattern cs
/P56 scn
13.519284 1.937691 m
12.142322 2.028343 10.753979 1.847040 9.468056 1.246475 c
8.261791 0.555259 7.305883 -0.645872 7.305883 -2.107625 c
7.567620 -2.016973 7.817977 -1.937654 8.079714 -1.847002 c
8.261791 0.736561 11.106755 2.198314 13.519284 1.937691 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.260620 cm
/Pattern cs
/P57 scn
9.490946 0.634590 m
8.193643 -0.113285 7.408432 -1.303085 7.374293 -2.583538 c
7.431192 -2.560875 7.966045 -2.390903 8.034324 -2.368241 c
8.170882 -0.577874 9.547845 0.634590 11.152404 1.155836 c
10.572031 1.042522 10.014419 0.872550 9.490946 0.634590 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.815857 cm
/Pattern cs
/P58 scn
0.056963 -4.849818 m
1.354267 -7.093437 4.460967 -8.033944 6.793837 -6.912134 c
6.964534 -6.742163 7.135232 -6.572192 7.396968 -6.481541 c
7.226271 -6.390889 7.055573 -6.141599 6.964534 -6.220919 c
6.020007 -6.481541 5.155138 -6.991454 4.119571 -6.991454 c
2.560531 -6.912135 1.012871 -6.062279 0.056963 -4.849818 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.688354 cm
/Pattern cs
/P59 scn
6.759726 -7.739317 m
6.907664 -7.592008 7.066982 -7.444700 7.271819 -7.354049 c
7.226299 -7.320054 7.192161 -7.286059 7.158021 -7.263396 c
7.112502 -7.218071 7.032843 -7.150083 6.998703 -7.150083 c
6.975943 -7.172745 l
6.657307 -7.263396 6.350051 -7.376711 6.054175 -7.490026 c
5.451043 -7.716654 4.813772 -7.954614 4.119601 -7.954614 c
2.856437 -7.886625 1.581894 -7.308722 0.614606 -6.413540 c
2.071227 -8.101923 4.699973 -8.725151 6.759726 -7.739317 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.167114 cm
/Pattern cs
/P60 scn
15.852169 -5.121761 m
15.419735 -4.521195 14.816603 -3.999949 14.213470 -3.580686 c
13.951734 -3.410715 13.701376 -3.320063 13.439639 -3.150091 c
11.971638 -2.379553 9.991542 -2.379554 8.694239 -3.490035 c
8.864936 -3.660006 9.126672 -3.660006 9.297370 -3.829977 c
11.368505 -2.288902 14.384168 -3.229411 15.852169 -5.121761 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 14.572205 cm
/Pattern cs
/P61 scn
8.785383 -4.895103 m
8.853662 -4.940429 8.933321 -4.985754 9.012980 -5.019748 c
9.104019 -5.053743 9.206438 -5.099069 9.297477 -5.178389 c
10.833756 -4.056577 12.859371 -4.294537 14.418411 -5.212382 c
14.338752 -5.155725 14.270473 -5.099068 14.179434 -5.031080 c
14.054255 -4.951760 13.929078 -4.883771 13.803900 -4.815783 c
13.678721 -4.747794 13.542163 -4.679806 13.405604 -4.600486 c
11.869324 -3.784623 9.980268 -3.909269 8.785383 -4.895103 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 8.691223 cm
/Pattern cs
/P62 scn
7.829470 -8.634507 m
10.162338 -7.172753 11.368601 -3.739332 9.729903 -1.325738 c
9.729903 -1.416389 9.729903 -1.495709 9.638865 -1.586361 c
9.468166 -1.677012 9.297469 -1.846984 9.206430 -2.016955 c
11.015826 -3.999955 9.809563 -7.172753 7.829470 -8.634507 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.948975 cm
/Pattern cs
/P63 scn
9.684262 -2.889426 m
9.661502 -2.900758 l
9.513564 -2.980078 9.365626 -3.127386 9.274588 -3.274694 c
9.854959 -3.920586 10.150835 -4.725117 10.150835 -5.620299 c
10.150835 -5.756277 10.139456 -5.892254 10.128076 -6.039562 c
10.037037 -6.991402 9.615983 -7.977237 8.990091 -8.804431 c
9.627362 -8.067888 10.093937 -7.150043 10.298774 -6.175540 c
10.378432 -5.812935 10.412572 -5.461660 10.412572 -5.110386 c
10.412572 -4.260529 10.184975 -3.444666 9.752541 -2.753448 c
9.752541 -2.798775 9.729781 -2.844101 9.684262 -2.889426 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 8.691223 cm
/Pattern cs
/P64 scn
8.000301 7.263482 m
6.702998 6.232323 5.587771 4.849890 5.417074 3.138844 c
5.326035 2.017034 5.508113 0.815903 6.361602 -0.045286 c
6.532300 0.124686 6.532300 0.385309 6.702997 0.555280 c
5.064298 2.617599 5.929168 5.801729 8.000301 7.263482 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.481567 cm
/Pattern cs
/P65 scn
5.473755 1.337164 m
5.450996 0.838581 l
5.450996 -0.249236 5.758252 -1.121755 6.361385 -1.744984 c
6.418284 -1.676995 6.452423 -1.597675 6.486563 -1.518355 c
6.520702 -1.427704 6.566222 -1.325721 6.645881 -1.235070 c
6.088267 -0.521190 5.803771 0.351330 5.803771 1.303169 c
5.803771 2.153027 6.042748 3.014215 6.463803 3.773421 c
5.883430 3.002884 5.553414 2.187021 5.473755 1.337164 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.153015 cm
/Pattern cs
/P66 scn
4.028684 4.679886 m
4.461119 2.617568 5.576344 0.815873 6.964685 -0.736531 c
6.873646 -0.736531 6.793988 -0.827183 6.702949 -0.997155 c
6.611910 -1.087806 6.532251 -1.167125 6.441212 -1.087806 c
5.143909 0.034005 4.631816 1.484426 4.370080 3.127482 c
4.199382 3.648727 4.119723 4.169972 4.028684 4.679886 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.784668 cm
/Pattern cs
/P67 scn
4.427104 1.518471 m
4.734360 -0.419202 5.371631 -1.710984 6.475476 -2.662823 c
6.509615 -2.696817 6.543755 -2.685486 6.646173 -2.583503 c
6.714452 -2.458858 6.782732 -2.379538 6.851010 -2.334212 c
5.758545 -1.076425 4.939197 0.215358 4.427104 1.518471 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.152954 cm
/Pattern cs
/P68 scn
11.800951 -9.155731 m
11.459556 -7.784629 10.856424 -6.492847 10.071214 -5.201066 c
9.900517 -5.031095 9.809477 -4.861122 9.638779 -4.600499 c
9.377042 -4.260556 8.944608 -4.079255 8.944608 -3.739312 c
8.944608 -3.569341 9.206345 -3.308718 9.377043 -3.399369 c
11.106780 -4.770472 11.277478 -7.093412 11.800951 -9.155731 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.603455 cm
/Pattern cs
/P69 scn
9.194722 -4.929203 m
9.092303 -4.985860 9.012644 -5.110505 9.012644 -5.189825 c
9.012644 -5.382459 9.171962 -5.518436 9.354039 -5.677076 c
9.467837 -5.779058 9.593016 -5.881042 9.695435 -6.017018 c
9.820614 -6.209653 l
9.923032 -6.368293 10.002691 -6.492938 10.116489 -6.606252 c
10.116489 -6.617583 l
10.685482 -7.558090 11.106536 -8.419278 11.436552 -9.269135 c
11.083776 -7.626079 10.685481 -5.960361 9.354039 -4.895208 c
9.297140 -4.872546 9.228861 -4.906540 9.194722 -4.929203 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.997192 cm
/Pattern cs
/P70 scn
14.816871 -1.087811 m
14.122699 -1.348433 13.348868 -1.518405 12.654696 -1.948999 c
12.563658 -2.039650 12.392961 -1.948999 12.313301 -2.039650 c
11.880867 -2.300273 11.539471 -2.470244 11.186695 -2.810187 c
11.015997 -2.980158 10.754261 -2.980159 10.583563 -3.150130 c
10.242167 -3.490073 9.889391 -3.750696 9.547996 -4.090639 c
9.377297 -3.920667 9.206600 -3.660044 9.035902 -3.490073 c
10.594943 -2.028319 12.745736 -1.427753 14.816871 -1.087811 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.303162 cm
/Pattern cs
/P71 scn
9.115542 -3.796070 m
9.195201 -3.875390 9.263480 -3.966041 9.331759 -4.056693 c
9.400039 -4.147344 9.479698 -4.237995 9.547976 -4.305984 c
9.707294 -4.147344 9.866612 -4.011367 10.025930 -3.875390 c
10.196629 -3.728081 10.367326 -3.580773 10.538024 -3.410801 c
10.629063 -3.320150 10.742861 -3.274824 10.856660 -3.229498 c
10.959078 -3.184173 11.061497 -3.150179 11.141156 -3.070859 c
11.437032 -2.776242 11.721528 -2.606270 12.062923 -2.413636 c
12.290521 -2.288990 l
12.279141 -2.300322 l
12.336040 -2.243665 12.415699 -2.243665 12.495358 -2.243665 c
12.552258 -2.243665 12.597777 -2.243665 12.631916 -2.221002 c
12.643295 -2.221002 l
13.098490 -1.937716 13.587824 -1.767745 14.065778 -1.609105 c
12.415700 -1.915054 10.538024 -2.492956 9.115542 -3.796070 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.246460 cm
/Pattern cs
/P72 scn
0.922064 -9.065119 m
2.993197 -8.555204 4.813974 -7.524045 6.532331 -6.311583 c
6.623371 -6.481553 6.964766 -6.651525 6.873727 -6.821496 c
5.235029 -8.373901 3.084236 -8.985799 0.922064 -9.065119 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.427795 cm
/Pattern cs
/P73 scn
1.502260 -9.144493 m
3.698571 -8.963190 5.485209 -8.237978 6.828032 -6.980188 c
6.828032 -6.968857 6.828032 -6.968856 6.828032 -6.957525 c
6.828032 -6.900867 6.759752 -6.821548 6.657333 -6.730896 c
6.600434 -6.685571 6.554914 -6.628913 6.509395 -6.572256 c
4.665859 -7.864039 3.095439 -8.668572 1.502260 -9.144493 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.073669 cm
/Pattern cs
/P74 scn
10.071348 5.529747 m
9.035782 3.728050 8.261951 1.665730 8.341611 -0.396590 c
8.079874 -0.396590 7.818138 -0.396590 7.567781 -0.396590 c
7.738479 1.835701 8.865084 3.728050 10.071348 5.529747 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.218140 cm
/Pattern cs
/P75 scn
7.636042 -1.484393 m
7.738461 -1.484393 8.193655 -1.484393 8.284694 -1.484393 c
8.284694 -1.393742 8.284694 -1.314423 8.284694 -1.223772 c
8.284694 0.181325 8.682988 1.699736 9.445438 3.297467 c
8.546430 1.869708 7.783980 0.317303 7.636042 -1.484393 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.152954 cm
/Pattern cs
/P76 scn
5.587619 -9.835607 m
5.678658 -9.574984 5.849356 -9.405014 6.020054 -9.235043 c
6.884922 -7.773289 7.226317 -6.311535 7.567713 -4.679810 c
7.567713 -4.419187 7.567713 -4.249216 7.567713 -3.988593 c
7.829449 -4.079245 8.079806 -4.079245 8.341542 -3.988593 c
7.909109 -6.141563 7.226317 -8.294533 5.587619 -9.835607 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.878174 cm
/Pattern cs
/P77 scn
7.624785 -5.405060 m
7.624785 -5.416391 l
7.272010 -7.093443 6.930614 -8.498541 6.099885 -9.926301 c
7.385808 -8.385226 7.932041 -6.413557 8.262056 -4.804493 c
8.045839 -4.861151 7.829623 -4.861151 7.624785 -4.804493 c
7.624785 -4.917808 7.624785 -5.405060 7.624785 -5.405060 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.325745 cm
/Pattern cs
/P78 scn
15.590468 -7.603314 m
15.419770 -7.433343 15.249071 -7.263372 15.066994 -7.172721 c
13.337256 -6.481504 11.618898 -5.880939 9.718463 -5.880939 c
9.718463 -5.620316 9.718463 -5.450345 9.718463 -5.189723 c
10.754029 -4.929100 11.789597 -5.450344 12.734124 -5.880939 c
13.781071 -6.311532 14.736979 -6.821446 15.590468 -7.603314 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 14.107666 cm
/Pattern cs
/P79 scn
9.786600 -6.028305 m
9.786600 -6.107625 9.786600 -6.526887 9.786600 -6.606206 c
11.539098 -6.617537 13.132276 -7.127451 14.611655 -7.705353 c
14.065423 -7.342748 13.450912 -7.014137 12.722602 -6.719521 c
12.551905 -6.640201 l
11.652896 -6.232270 10.731128 -5.813008 9.786600 -6.028305 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.985840 cm
/Pattern cs
/P80 scn
0.239071 -2.787530 m
0.409769 -2.878181 0.580467 -2.878181 0.751164 -2.957501 c
2.480902 -4.079313 4.290299 -4.509907 6.190735 -4.679879 c
6.099696 -4.849850 6.281773 -5.201124 6.281773 -5.201124 c
3.948904 -5.801689 2.048468 -3.988662 0.239071 -2.787530 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.359802 cm
/Pattern cs
/P81 scn
1.183534 -3.750731 m
2.719814 -4.849879 4.312993 -5.971688 6.190668 -5.529763 c
6.156528 -5.450443 6.111009 -5.303134 6.111009 -5.178489 c
6.111009 -5.155826 6.122389 -5.133164 6.122389 -5.110501 c
3.903318 -4.906536 2.241860 -4.373959 0.728340 -3.388125 c
0.682820 -3.365463 0.637301 -3.354132 0.591781 -3.331469 c
0.853518 -3.524103 1.183534 -3.750731 1.183534 -3.750731 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.535400 cm
/Pattern cs
/P82 scn
0.489587 -0.736512 m
0.830982 -1.937643 1.616192 -3.059453 2.731418 -3.739338 c
3.858023 -4.430555 5.234985 -4.770498 6.350211 -4.079282 c
6.441249 -4.339904 6.520908 -4.509875 6.611947 -4.770498 c
5.667419 -5.201092 4.711512 -5.110440 3.766984 -4.770498 c
2.128285 -4.090612 0.922021 -2.458888 0.489587 -0.736512 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.405151 cm
/Pattern cs
/P83 scn
3.789786 -6.594900 m
4.813973 -6.968836 5.712981 -6.968837 6.543710 -6.617563 c
6.520950 -6.538243 6.361632 -6.130312 6.327493 -6.039660 c
5.337446 -6.606231 4.028763 -6.470255 2.708700 -5.665726 c
2.173847 -5.337115 1.695894 -4.895189 1.308979 -4.373945 c
1.923491 -5.382440 2.788359 -6.175638 3.789786 -6.594900 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.354126 cm
/Pattern cs
/P84 scn
15.419930 -6.062266 m
15.078535 -5.201079 14.555063 -4.430543 13.872272 -3.829978 c
12.574969 -2.878139 11.106573 -2.538253 9.558913 -2.538253 c
9.467875 -2.538253 9.468270 -2.277574 9.388611 -2.198254 c
12.051496 -1.416386 14.555062 -3.648675 15.419930 -6.062266 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.563782 cm
/Pattern cs
/P85 scn
9.468520 -4.441918 m
9.491281 -4.487244 9.502660 -4.521238 9.514040 -4.566564 c
9.525419 -4.600558 9.548180 -4.668547 9.559560 -4.679878 c
11.289299 -4.679878 12.700401 -5.110473 13.895288 -5.982992 c
14.043225 -6.107638 14.168404 -6.243614 14.293583 -6.379592 c
13.121457 -4.895175 11.334818 -3.943336 9.468520 -4.441918 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.903748 cm
/Pattern cs
/P86 scn
10.594704 5.450403 m
8.261834 4.668534 6.361399 2.096301 7.396966 -0.305961 c
7.135229 -0.396612 6.884872 -0.396612 6.702795 -0.645904 c
6.020003 2.005650 8.000098 4.759186 10.594704 5.450403 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.810181 cm
/Pattern cs
/P87 scn
6.634748 -0.498511 m
6.634748 -0.815791 6.680268 -1.121738 6.748547 -1.439019 c
6.885105 -1.303041 7.044424 -1.257716 7.203741 -1.212390 c
7.203741 -1.212390 7.272020 -1.189728 7.317540 -1.178396 c
7.135462 -0.736471 7.044423 -0.283213 7.044423 0.181375 c
7.044423 0.713952 7.169601 1.257860 7.408578 1.790437 c
7.749974 2.549643 8.318967 3.229528 9.013138 3.750774 c
7.567896 2.787603 6.634748 1.144546 6.634748 -0.498511 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.892334 cm
/Pattern cs
/P88 scn
5.064180 -9.325717 m
5.496615 -9.235065 6.008709 -9.155746 6.361485 -8.804472 c
6.884958 -8.203906 7.567750 -7.863963 8.000184 -7.172746 c
8.603316 -6.050935 9.035750 -4.849803 8.603315 -3.648672 c
8.865052 -3.648672 9.115392 -3.478689 9.206430 -3.218066 c
9.729903 -4.759141 9.115410 -6.481529 8.000184 -7.682661 c
7.135315 -8.464529 6.270445 -9.065094 5.064180 -9.325717 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.696899 cm
/Pattern cs
/P89 scn
8.683265 -4.498528 m
8.785684 -4.804476 8.842583 -5.133087 8.842583 -5.461698 c
8.842583 -6.436200 8.398769 -7.376708 8.057373 -7.999936 c
7.795637 -8.407867 7.454240 -8.702485 7.112844 -8.985770 c
6.930767 -9.144410 6.748690 -9.303050 6.566612 -9.484353 c
7.010427 -9.235062 7.454240 -8.895120 7.966333 -8.441862 c
8.842583 -7.501354 9.343297 -6.311555 9.343297 -5.189744 c
9.343297 -4.838470 9.286398 -4.509858 9.195358 -4.181247 c
9.081560 -4.362550 8.888103 -4.475864 8.683265 -4.498528 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 8.872559 cm
/Pattern cs
/P90 scn
4.461054 6.220973 m
3.516527 3.988682 4.028620 0.895204 6.361489 -0.305927 c
6.190791 -0.475898 6.361488 -0.736521 6.190791 -0.906492 c
3.516527 0.294638 3.425488 3.898031 4.461054 6.220973 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.048157 cm
/Pattern cs
/P91 scn
3.914838 1.099219 m
3.914838 -0.566500 4.517971 -2.243551 6.168049 -3.014088 c
6.213568 -2.946100 6.213568 -2.878111 6.213568 -2.787459 c
6.213568 -2.696808 6.213568 -2.594826 6.270467 -2.504174 c
4.677288 -1.642986 3.960358 0.079391 3.960358 1.779105 c
3.960358 1.835762 3.971738 1.881088 3.971738 1.937745 c
3.937598 1.665791 3.914838 1.382505 3.914838 1.099219 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 8.691223 cm
/Pattern cs
/P92 scn
11.198037 -8.033956 m
12.324642 -5.880984 11.892208 -2.708185 9.559339 -1.586374 c
9.821075 -1.325752 9.820726 -0.985800 9.900385 -0.725177 c
10.332820 -1.155771 10.765603 -1.495724 11.198037 -2.016970 c
11.630471 -2.617535 11.892208 -3.388071 11.892208 -4.079288 c
12.051526 -5.461721 11.880828 -6.832825 11.198037 -8.033956 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.787537 cm
/Pattern cs
/P93 scn
9.900658 -3.070766 m
9.855138 -3.263401 9.798240 -3.478698 9.650302 -3.671332 c
10.560689 -4.135921 11.232100 -4.929121 11.584875 -5.982944 c
11.755572 -6.504189 11.846610 -7.070760 11.846610 -7.637331 c
11.846610 -7.807302 11.835231 -7.965943 11.812471 -8.135914 c
11.857990 -7.818635 11.892130 -7.490022 11.892130 -7.150079 c
11.892130 -6.832799 11.869370 -6.515519 11.823852 -6.175576 c
11.823852 -5.495691 11.573494 -4.736486 11.141060 -4.135921 c
10.856565 -3.795978 10.572069 -3.524024 10.287573 -3.263401 c
10.287573 -3.263401 10.025836 -3.014110 9.923417 -2.923458 c
9.912038 -3.002778 9.900658 -3.070766 9.900658 -3.070766 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.325806 cm
/Pattern cs
/P94 scn
15.158072 -2.016957 m
13.610413 -1.325741 11.789638 -1.246421 10.241979 -2.107609 c
9.638846 -2.538202 9.115374 -3.048116 8.773979 -3.739332 c
8.512242 -3.478710 8.170847 -3.569361 7.909111 -3.569361 c
8.000150 -3.478709 8.079808 -3.399390 8.170847 -3.308738 c
8.512242 -2.617522 9.115374 -2.016957 9.809545 -1.767666 c
11.539281 -1.155770 13.610413 -1.065118 15.158072 -2.016957 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.586426 cm
/Pattern cs
/P95 scn
9.832543 -2.073632 m
9.183892 -2.311592 8.580761 -2.889494 8.227985 -3.592043 c
8.227985 -3.603374 l
8.227985 -3.603374 8.080048 -3.750683 8.068668 -3.762014 c
8.080048 -3.762014 l
8.296265 -3.750683 8.558002 -3.739351 8.774219 -3.909322 c
9.092854 -3.308757 9.559428 -2.787512 10.219459 -2.311592 c
11.311924 -1.711027 12.597845 -1.541055 13.872388 -1.801678 c
12.666124 -1.495730 11.243645 -1.586381 9.832543 -2.073632 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.246460 cm
/Pattern cs
/P96 scn
0.671694 -8.634491 m
2.913525 -9.665651 5.758488 -9.235057 7.317527 -7.002766 c
7.408566 -6.912115 7.579263 -7.002766 7.749961 -7.002766 c
7.579263 -8.033926 6.714395 -8.725143 5.769867 -9.065086 c
4.028750 -9.665651 2.310393 -9.235057 0.671694 -8.634491 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.643066 cm
/Pattern cs
/P97 scn
7.351689 -7.444690 m
6.361642 -8.861120 4.768462 -9.642989 3.015965 -9.620326 c
4.017392 -9.767634 4.905021 -9.699647 5.735750 -9.416361 c
6.794076 -9.031092 7.499628 -8.317210 7.670325 -7.456021 c
7.613426 -7.444690 7.556526 -7.444690 7.556526 -7.444690 c
7.465487 -7.422027 7.385828 -7.410696 7.351689 -7.444690 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.113281 cm
/Pattern cs
/P98 scn
0.045584 -4.872486 m
1.342887 -2.481556 4.677183 -0.985808 7.169371 -2.572207 c
6.941773 -2.719515 6.771075 -2.912149 6.611758 -3.116115 c
5.928967 -2.447561 4.938920 -2.311584 4.017152 -2.345579 c
2.321554 -2.504219 0.887693 -3.444726 0.045584 -4.872486 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 14.787537 cm
/Pattern cs
/P99 scn
3.664538 -4.804498 m
3.015887 -4.974470 2.401375 -5.269087 1.843762 -5.665687 c
2.492414 -5.280418 3.232104 -5.031127 4.017313 -4.951807 c
5.155299 -4.906482 6.031548 -5.167104 6.611920 -5.699682 c
6.748478 -5.541041 6.885036 -5.371070 7.067114 -5.246425 c
5.815331 -4.487219 4.529407 -4.589201 3.664538 -4.804498 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.864014 cm
/Pattern cs
/P100 scn
15.954736 -3.014149 m
14.532253 -5.291764 11.345895 -7.150117 8.785428 -5.518393 c
9.013025 -5.371084 9.240623 -5.223776 9.479601 -5.076468 c
11.766952 -6.492895 14.566394 -4.985816 15.954736 -3.014149 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 14.255005 cm
/Pattern cs
/P101 scn
9.479441 -7.535429 m
9.433922 -7.569424 9.001487 -7.841376 8.899068 -7.898034 c
9.786696 -8.430612 10.810884 -8.589252 11.880589 -8.351292 c
12.859258 -8.124662 13.837925 -7.592086 14.657274 -6.844212 c
13.166513 -8.034012 11.197799 -8.566589 9.479441 -7.535429 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 8.815857 cm
/Pattern cs
/P102 scn
7.066686 7.127495 m
8.511926 6.175655 9.752329 4.838548 10.059585 3.036851 c
10.287181 1.960365 10.093724 0.906543 9.638530 -0.056628 c
9.558871 0.113343 9.240235 0.271983 9.297134 0.339971 c
9.376794 1.382463 9.775088 2.277645 9.672670 3.252148 c
9.445073 4.872541 8.455027 6.232313 7.066686 7.127495 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.662903 cm
/Pattern cs
/P103 scn
9.729798 1.405123 m
9.741179 1.291809 9.741179 1.189826 9.741179 1.076512 c
9.741179 0.611923 9.650140 0.158666 9.547721 -0.305922 c
9.468062 -0.691191 9.377023 -1.099122 9.354263 -1.518384 c
9.354263 -1.529716 l
9.365643 -1.552379 9.422543 -1.586373 9.456682 -1.620368 c
9.513581 -1.665693 9.570480 -1.722351 9.627380 -1.790339 c
9.934636 -1.099122 10.105333 -0.407905 10.105333 0.260649 c
10.105333 0.566597 10.071195 0.872546 10.002915 1.167163 c
9.854978 2.028351 9.479442 2.821551 8.910449 3.546762 c
9.342883 2.900871 9.627379 2.175660 9.729798 1.405123 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 8.963196 cm
/Pattern cs
/P104 scn
8.694386 -8.849864 m
7.567780 -8.045333 6.611871 -7.048166 5.985979 -5.767715 c
5.485265 -4.475932 5.508025 -2.946190 6.441173 -1.813047 c
6.589111 -2.039676 6.737050 -2.266304 6.884988 -2.504264 c
5.371467 -4.611909 6.657391 -7.535419 8.694386 -8.849864 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.662903 cm
/Pattern cs
/P105 scn
5.724187 -5.790359 m
5.724187 -6.334267 5.837986 -6.912169 6.042823 -7.456078 c
6.304560 -7.988654 6.634575 -8.487237 7.032870 -8.951825 c
6.486637 -8.113300 6.168002 -7.172792 6.168002 -6.277610 c
6.168002 -5.507074 6.384219 -4.815857 6.816654 -4.203960 c
6.782514 -4.158635 6.509397 -3.728041 6.441118 -3.614727 c
5.963164 -4.215292 5.724187 -4.963165 5.724187 -5.790359 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.682739 cm
/Pattern cs
/P106 scn
1.854810 1.291779 m
4.278719 2.209624 7.283000 0.985830 8.386846 -1.348443 c
8.409606 -1.586403 8.432365 -1.835694 8.580304 -2.062323 c
8.386847 -2.016997 8.090970 -2.107648 8.079591 -1.994335 c
7.510597 -1.201135 7.169202 -0.249295 6.361232 0.396596 c
5.098068 1.314441 3.356951 1.631721 1.854810 1.291779 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.124634 cm
/Pattern cs
/P107 scn
2.685707 1.019856 m
4.005771 1.110507 5.371354 0.747902 6.395541 0.011359 c
6.941774 -0.430566 7.283170 -1.008470 7.613186 -1.563709 c
7.772504 -1.835664 7.943202 -2.130280 8.136660 -2.390903 c
8.148039 -2.402235 l
8.148039 -2.402235 8.148039 -2.413566 8.148039 -2.424897 c
8.170799 -2.447560 8.273218 -2.436229 8.341497 -2.436229 c
8.387016 -2.436229 8.443915 -2.436229 8.489434 -2.436229 c
8.387016 -2.232263 8.352877 -2.016966 8.341497 -1.801669 c
7.351449 0.260651 4.904779 1.427787 2.685707 1.019856 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.192688 cm
/Pattern cs
/P108 scn
14.042660 -9.212463 m
13.325729 -9.405097 12.529140 -9.427759 11.789449 -9.382434 c
11.482193 -9.348439 11.220457 -9.257787 10.913201 -9.223793 c
9.285882 -8.895182 7.749602 -7.648727 7.453726 -5.971679 c
7.692703 -5.949016 7.897541 -6.107656 8.136518 -6.084992 c
8.762409 -8.589235 11.709790 -9.756371 14.042660 -9.212463 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 12.702576 cm
/Pattern cs
/P109 scn
10.924710 -9.677040 m
11.072648 -9.688372 11.220587 -9.722364 11.368525 -9.756359 c
11.505083 -9.790353 11.641640 -9.813016 11.800959 -9.835679 c
11.891996 -9.835679 11.971656 -9.835680 12.051315 -9.847012 c
10.276058 -9.575058 8.580460 -8.475909 8.102506 -6.662881 c
7.988708 -6.662881 7.886289 -6.628887 7.783871 -6.606224 c
7.692832 -6.583561 7.613172 -6.560899 7.533513 -6.549567 c
7.829389 -8.056646 9.206352 -9.337097 10.924710 -9.677040 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.144531 cm
/Pattern cs
/P110 scn
12.893332 5.076422 m
13.769579 2.481526 12.529344 -0.940521 9.729903 -1.779046 c
9.786802 -1.711058 9.843534 -1.643111 9.820775 -1.529797 c
9.741116 -1.359826 9.718355 -1.110534 9.763875 -0.929231 c
12.426758 -0.532631 13.496463 2.696823 12.893332 5.076422 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.866882 cm
/Pattern cs
/P111 scn
12.233330 -1.087822 m
11.630198 -1.983005 10.799469 -2.538244 9.820802 -2.696884 c
9.809422 -2.742210 9.809422 -2.787536 9.809422 -2.844193 c
9.809422 -2.980170 9.832182 -3.116147 9.889081 -3.229462 c
9.889081 -3.252124 l
9.889081 -3.263455 9.889081 -3.274788 9.889081 -3.297450 c
9.889081 -3.342776 9.877701 -3.376770 9.866322 -3.410764 c
10.958787 -3.036827 11.880555 -2.232296 12.460927 -1.110485 c
12.893361 -0.271959 13.120958 0.668549 13.120958 1.586394 c
13.120958 1.631720 13.120958 1.677045 13.120958 1.722371 c
13.064059 0.725206 12.768183 -0.294622 12.233330 -1.087822 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.303101 cm
/Pattern cs
/P112 scn
2.936099 -7.512668 m
2.583323 -5.903606 2.594703 -4.124573 3.550610 -2.685482 c
4.187881 -1.767637 5.086890 -0.940444 6.304533 -0.815798 c
6.327293 -1.053758 6.167975 -1.257723 6.190735 -1.495683 c
3.607510 -2.073586 2.264688 -5.076412 2.936099 -7.512668 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.614746 cm
/Pattern cs
/P113 scn
3.596036 -5.031150 m
3.118082 -5.745028 2.856346 -6.606216 2.799447 -7.580718 c
3.106703 -5.881006 4.233307 -4.215288 6.133741 -3.773363 c
6.133741 -3.762032 l
6.133741 -3.648717 6.167881 -3.546734 6.190641 -3.456082 c
6.213400 -3.365431 6.247540 -3.286112 6.247540 -3.195460 c
5.246113 -3.320106 4.358486 -3.943334 3.596036 -5.031150 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.053833 cm
/Pattern cs
/P114 scn
0.569022 -7.897970 m
2.219101 -6.572192 4.233335 -5.880976 6.281708 -5.552364 c
6.213429 -5.495707 6.202049 -5.382394 6.247569 -5.189759 c
6.236188 -5.065113 6.224809 -4.951799 6.099630 -4.963130 c
4.392652 -5.019788 3.061210 -5.824319 1.820806 -6.923468 c
1.354232 -7.206753 0.967317 -7.558027 0.569022 -7.897970 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 14.028320 cm
/Pattern cs
/P115 scn
6.099655 -5.994305 m
4.620275 -6.039630 3.311592 -6.640195 1.854971 -7.943309 c
1.843591 -7.954639 l
3.072615 -7.252091 4.529236 -6.764840 6.179315 -6.481555 c
6.167934 -6.447560 6.156554 -6.402236 6.156554 -6.345579 c
6.156554 -6.288921 6.167934 -6.232265 6.179315 -6.164276 c
6.167934 -6.016968 6.145175 -5.982973 6.099655 -5.994305 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.031189 cm
/Pattern cs
/P116 scn
15.362741 -2.039670 m
14.224756 -2.889526 12.938833 -3.512754 11.516352 -4.022668 c
11.277374 -4.045331 11.095297 -4.124651 10.799420 -4.215302 c
10.378366 -4.317285 9.934552 -4.181309 9.718334 -4.441931 c
9.604536 -4.577908 9.650056 -4.940513 9.832133 -4.974507 c
12.051206 -5.008502 13.655764 -3.320120 15.362741 -2.039670 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.903687 cm
/Pattern cs
/P117 scn
11.539133 -4.951789 m
11.527754 -4.951789 l
11.357056 -4.974452 11.220497 -5.019777 11.038420 -5.076435 c
10.822203 -5.144423 l
10.662885 -5.189749 10.503567 -5.189749 10.344249 -5.189749 c
10.105272 -5.201080 9.889055 -5.201079 9.775256 -5.348388 c
9.741117 -5.382382 9.729737 -5.450371 9.729737 -5.529691 c
9.729737 -5.575017 9.741117 -5.631673 9.752497 -5.676999 c
9.763876 -5.710993 9.798017 -5.778982 9.854916 -5.801644 c
11.573273 -5.812976 12.938854 -4.770486 14.247537 -3.716665 c
13.462327 -4.169921 12.574699 -4.577852 11.539133 -4.951789 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.356995 cm
/Pattern cs
/P118 scn
10.788131 -9.722374 m
10.412596 -9.087814 9.923262 -8.464586 9.661526 -7.694049 c
9.650146 -7.569403 9.456688 -7.535408 9.445309 -7.410762 c
9.274611 -6.934842 9.115293 -6.583568 9.069773 -6.107648 c
9.047013 -5.869688 8.842176 -5.699717 8.819416 -5.461757 c
8.773897 -4.974504 8.671477 -4.566574 8.614578 -4.079323 c
8.375602 -4.101985 8.079727 -4.192636 7.829370 -4.215300 c
8.102487 -6.334277 9.399789 -8.158637 10.788131 -9.722374 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.059509 cm
/Pattern cs
/P119 scn
8.239127 -4.917827 m
8.125329 -4.940490 8.011531 -4.963152 7.897732 -4.974483 c
8.159469 -6.878163 9.251934 -8.509891 10.321639 -9.790341 c
10.048523 -9.371078 9.775407 -8.929152 9.604710 -8.419238 c
9.604710 -8.396576 l
9.604710 -8.362581 9.559190 -8.328587 9.513670 -8.294593 c
9.456771 -8.249268 9.399872 -8.203940 9.388492 -8.113289 c
9.388492 -8.124622 l
9.297453 -7.886661 l
9.160894 -7.524055 9.047096 -7.206775 9.001576 -6.798843 c
8.990197 -6.685530 8.933298 -6.594878 8.887778 -6.492895 c
8.830879 -6.390912 8.773980 -6.277598 8.751221 -6.152952 c
8.728460 -5.937655 8.694321 -5.711027 8.660181 -5.484398 c
8.626041 -5.280433 8.591903 -5.065135 8.569143 -4.849838 c
8.455344 -4.872500 8.341546 -4.895164 8.239127 -4.917827 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.345581 cm
/Pattern cs
/P120 scn
4.927557 5.019886 m
6.202100 3.320173 6.953170 1.382499 7.533542 -0.634495 c
7.704240 -0.555175 8.091155 -0.634495 8.125294 -0.453192 c
7.829418 1.767767 6.543495 3.592127 4.927557 5.019886 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.855530 cm
/Pattern cs
/P121 scn
7.567636 -1.076436 m
7.635915 -1.065104 7.704195 -1.053772 7.772474 -1.042441 c
7.920412 -1.031109 8.034211 -1.019778 8.056971 -0.951789 c
7.817994 0.849906 6.884844 2.538288 5.303045 4.068030 c
6.236193 2.696928 6.941744 1.076535 7.567636 -1.076436 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.835693 cm
/Pattern cs
/P122 scn
4.768228 -9.087775 m
5.109623 -7.036788 5.815175 -4.951806 7.192137 -3.410731 c
6.987299 -3.252091 6.793841 -3.082120 6.589004 -2.923480 c
5.303081 -4.759171 4.973065 -6.923473 4.768228 -9.087775 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.161499 cm
/Pattern cs
/P123 scn
4.961713 -9.167082 m
5.405528 -7.342723 6.122459 -5.846974 7.101127 -4.736495 c
7.032847 -4.679838 6.680071 -4.385221 6.600412 -4.328565 c
5.576226 -5.812981 5.177931 -7.501363 4.961713 -9.167082 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 9.733704 cm
/Pattern cs
/P124 scn
10.992934 5.699753 m
10.890515 5.450461 10.924655 5.201170 10.947414 4.963210 c
10.685678 3.286160 10.025647 1.937720 9.263197 0.453304 c
9.103879 0.249339 8.990080 0.124693 8.830762 -0.079273 c
9.081119 -0.169924 9.285956 -0.339895 9.433894 -0.566524 c
10.446702 1.371149 11.277431 3.467462 10.992934 5.699753 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.662903 cm
/Pattern cs
/P125 scn
9.308746 -0.498587 m
9.308746 -0.498587 8.990110 -0.895186 8.910452 -0.985838 c
9.115289 -1.076489 9.274606 -1.212466 9.411164 -1.382438 c
10.173615 0.067985 10.981585 1.903675 10.981585 3.875343 c
10.981585 3.898006 10.981585 3.920669 10.981585 3.954663 c
10.719849 2.322938 10.093956 1.019824 9.308746 -0.498587 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.586426 cm
/Pattern cs
/P126 scn
15.317199 -8.645826 m
15.078221 -8.668489 14.827865 -8.691152 14.645787 -8.657157 c
12.870529 -8.101917 11.140791 -7.478690 9.672790 -6.288890 c
9.513472 -6.492856 9.399673 -6.617501 9.240355 -6.821466 c
9.877627 -7.671324 11.004233 -7.920615 12.017040 -8.192570 c
13.086746 -8.509850 14.156453 -8.702483 15.317199 -8.645826 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.824402 cm
/Pattern cs
/P127 scn
9.308871 -7.059512 m
9.900623 -7.818719 10.890670 -8.079343 11.846578 -8.328634 c
12.017276 -8.373960 l
12.768346 -8.600589 13.439757 -8.725235 14.099789 -8.793224 c
12.586268 -8.305972 11.027228 -7.705405 9.673026 -6.617586 c
9.627506 -6.674244 9.365770 -7.002855 9.308871 -7.059512 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.722412 cm
/Pattern cs
/P128 scn
0.569022 -2.583547 m
0.762480 -2.628872 0.887658 -2.730855 1.081115 -2.776181 c
3.129489 -2.991477 4.802327 -3.807339 6.384126 -4.861161 c
6.429646 -4.668527 6.782422 -4.521219 6.782422 -4.521219 c
5.359940 -2.594878 2.742574 -2.798844 0.569022 -2.583547 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.880981 cm
/Pattern cs
/P129 scn
1.092395 -2.878143 m
2.890411 -3.070777 4.517730 -3.705337 6.361266 -4.940463 c
6.429545 -4.815817 6.600243 -4.713834 6.691281 -4.657176 c
5.519157 -3.116103 3.561823 -3.002789 1.684147 -2.878143 c
1.684147 -2.878143 1.285852 -2.844149 0.955836 -2.821486 c
0.989976 -2.855480 1.035495 -2.866811 1.092395 -2.878143 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.337097 cm
/Pattern cs
/P130 scn
0.386914 -2.832778 m
1.422481 -2.118899 2.731164 -1.744962 4.039847 -1.914933 c
5.348530 -2.084905 6.634453 -2.685470 7.066887 -3.931924 c
7.294485 -3.784616 7.476562 -3.705296 7.704159 -3.557988 c
7.237585 -2.628812 6.452375 -2.096236 5.496468 -1.767625 c
3.789490 -1.269043 1.820776 -1.767625 0.386914 -2.832778 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.665710 cm
/Pattern cs
/P131 scn
2.082626 -2.322882 m
2.731278 -2.152910 3.402690 -2.096253 4.039962 -2.186905 c
5.576242 -2.390871 6.680089 -3.116082 7.089764 -4.169904 c
7.169423 -4.124579 7.556338 -3.897950 7.624618 -3.863956 c
7.214942 -3.070756 6.509391 -2.504185 5.473824 -2.152910 c
4.415497 -1.835630 3.209232 -1.914950 2.082626 -2.322882 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.507080 cm
/Pattern cs
/P132 scn
15.453666 -8.124609 m
14.645696 -8.577867 13.746688 -8.849822 12.836300 -8.883817 c
11.231740 -8.804497 9.877537 -8.147273 8.671272 -7.172770 c
8.602993 -7.116112 8.443675 -7.320077 8.318497 -7.331409 c
9.900297 -9.609028 13.257354 -9.450388 15.453666 -8.124609 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.914978 cm
/Pattern cs
/P133 scn
8.534967 -7.693922 m
8.500828 -7.716585 8.455309 -7.750578 8.421169 -7.761909 c
9.547774 -9.325646 11.539249 -9.710916 13.394166 -9.291653 c
13.212089 -9.314315 13.018631 -9.336978 12.836554 -9.348310 c
11.345792 -9.268990 9.980209 -8.713750 8.637386 -7.625933 c
8.614626 -7.625933 8.557727 -7.659927 8.534967 -7.693922 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 8.827209 cm
/Pattern cs
/P134 scn
5.326006 -8.203926 m
4.005943 -6.141605 4.176641 -2.946142 6.509511 -1.733679 c
6.361573 -1.507051 6.168116 -1.337079 6.190875 -1.031131 c
3.960424 -2.662856 3.755586 -6.039623 5.326006 -8.203926 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.685608 cm
/Pattern cs
/P135 scn
4.369808 -6.866822 m
4.369808 -7.354074 4.438087 -7.841324 4.574645 -8.328575 c
4.494986 -7.954638 4.460846 -7.569370 4.460846 -7.195434 c
4.460846 -6.764839 4.517745 -6.334246 4.620164 -5.937646 c
4.904661 -4.883824 5.530552 -4.067962 6.429561 -3.580710 c
6.395421 -3.535385 6.361282 -3.478727 6.361282 -3.478727 c
6.258863 -3.342751 6.167824 -3.206773 6.145064 -3.014139 c
4.972940 -3.909321 4.369808 -5.359743 4.369808 -6.866822 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 8.657166 cm
/Pattern cs
/P136 scn
10.424001 6.900956 m
10.708498 6.561013 11.049893 6.175745 11.095413 5.688494 c
11.118173 4.895294 11.436809 4.192746 11.334390 3.388215 c
11.095413 2.141759 10.662978 0.940628 9.570512 0.272074 c
9.775349 0.113434 9.866294 -0.181243 9.763875 -0.441865 c
11.140838 0.430654 11.766825 2.141759 11.664406 3.784815 c
11.482327 4.929289 11.197832 5.937785 10.424001 6.900956 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.243652 cm
/Pattern cs
/P137 scn
11.288898 3.150159 m
11.357178 2.821548 11.414077 2.481605 11.414077 2.130331 c
11.391317 1.801720 l
11.186481 0.725235 10.799566 -0.589211 9.650201 -1.314422 c
9.775379 -1.439068 9.855038 -1.620369 9.855038 -1.801672 c
9.855038 -1.824335 9.843658 -1.858329 9.843658 -1.880992 c
10.947503 -1.121787 11.607534 0.260646 11.607534 1.847046 c
11.596154 2.198320 l
11.493736 2.866874 11.357178 3.399451 11.175100 3.875371 c
11.197860 3.626079 11.243379 3.388119 11.288898 3.150159 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.810242 cm
/Pattern cs
/P138 scn
0.739625 -6.130317 m
1.422416 -3.796043 3.789552 -1.733714 6.350019 -2.266290 c
6.327259 -2.028330 6.623008 -1.937689 6.600248 -1.688398 c
3.766665 -0.940525 1.411036 -3.682729 0.739625 -6.130317 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.042480 cm
/Pattern cs
/P139 scn
1.695587 -6.402224 m
2.776673 -5.019788 4.460891 -4.079278 6.304427 -4.430553 c
6.315807 -4.328570 6.384086 -4.249250 6.440985 -4.169930 c
6.497884 -4.101942 6.543404 -4.045284 6.543404 -3.965964 c
4.472270 -3.444718 2.742533 -4.781828 1.695587 -6.402224 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.150085 cm
/Pattern cs
/P140 scn
15.112293 0.487336 m
14.622959 -1.880931 12.267330 -4.079226 9.752382 -3.478662 c
9.786522 -3.841267 9.570640 -4.113248 9.479601 -4.362539 c
10.082733 -4.305882 10.640011 -4.305854 11.300043 -4.181209 c
12.016973 -3.988574 12.711143 -3.546649 13.143579 -3.014072 c
14.145005 -2.050902 14.884696 -0.883766 15.112293 0.487336 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.246460 cm
/Pattern cs
/P141 scn
12.791010 -5.065110 m
11.846482 -5.665675 10.822296 -5.858310 9.820868 -5.643013 c
9.820868 -5.654344 l
9.820868 -5.892303 9.718450 -6.084937 9.627411 -6.266240 c
9.627411 -6.266240 9.593271 -6.334229 9.570512 -6.390885 c
9.707069 -6.379555 10.071225 -6.356892 10.071225 -6.356892 c
10.458140 -6.334229 10.856435 -6.300234 11.288869 -6.220914 c
11.994420 -6.028280 12.665832 -5.597687 13.098266 -5.076442 c
13.576220 -4.623185 13.963134 -4.135934 14.281770 -3.637352 c
13.872095 -4.203923 13.360003 -4.702505 12.791010 -5.065110 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.243652 cm
/Pattern cs
/P142 scn
11.436737 -9.359761 m
9.798038 -8.917835 8.341416 -7.841351 7.681384 -6.198295 c
7.487926 -5.484414 7.408268 -4.759203 7.578966 -4.011330 c
7.214810 -4.045323 6.998593 -3.762038 6.805135 -3.603398 c
6.816515 -3.728044 6.827895 -3.841358 6.839275 -3.966004 c
6.668577 -4.713879 6.759616 -5.563735 7.123772 -6.198295 c
8.079679 -7.750699 9.627340 -9.121800 11.436737 -9.359761 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.889526 cm
/Pattern cs
/P143 scn
6.873443 -4.430521 m
6.896202 -4.623156 l
6.896202 -4.634487 l
6.839303 -4.883779 6.816543 -5.133069 6.816543 -5.371029 c
6.816543 -5.903605 6.941721 -6.413520 7.180698 -6.821450 c
7.931768 -8.045243 8.944574 -8.974419 10.025660 -9.506995 c
8.921815 -8.895099 8.079705 -7.988585 7.624512 -6.878107 c
7.487954 -6.390857 7.431055 -5.948932 7.431055 -5.518338 c
7.431055 -5.246384 7.465194 -4.985762 7.510714 -4.725139 c
7.226217 -4.725139 7.032760 -4.543836 6.884822 -4.396527 c
6.873442 -4.407859 6.873443 -4.430521 6.873443 -4.430521 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 10.277588 cm
/Pattern cs
/P144 scn
4.449448 4.917891 m
6.839217 4.305994 8.773792 2.187018 8.568955 -0.532524 c
8.580335 -0.657169 8.773791 -0.691164 8.898970 -0.804478 c
9.422443 0.102036 9.183466 1.178522 8.671372 2.039710 c
7.715465 3.603446 6.099527 4.351320 4.449448 4.917891 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 11.388123 cm
/Pattern cs
/P145 scn
8.637395 -1.235075 m
8.626015 -1.643006 l
8.626015 -1.677000 8.694293 -1.722326 8.773952 -1.767652 c
8.773952 -1.767652 8.830852 -1.801646 8.876371 -1.835640 c
9.047069 -1.518360 9.138107 -1.167087 9.138107 -0.793150 c
9.138107 -0.249242 8.956030 0.339992 8.626015 0.895232 c
8.159441 1.643105 7.510789 2.255002 6.623161 2.776247 c
7.897704 1.801745 8.637395 0.351324 8.637395 -1.235075 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 8.407959 cm
/Pattern cs
/P146 scn
11.812534 -0.407958 m
11.812534 -2.504272 10.105557 -4.203984 8.000283 -4.203984 c
5.895010 -4.203984 4.188031 -2.504272 4.188031 -0.407958 c
4.188031 1.688355 5.895010 3.388069 8.000283 3.388069 c
10.105557 3.388069 11.812534 1.688355 11.812534 -0.407958 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 14.651550 cm
/Pattern cs
/P147 scn
5.496497 -8.498542 m
6.031350 -9.303074 6.953118 -9.846983 8.000064 -9.846983 c
8.990110 -9.846983 9.877738 -9.371062 10.423970 -8.623187 c
9.798079 -9.155765 8.955970 -9.484377 8.034203 -9.484377 c
7.032776 -9.484377 6.133769 -9.099108 5.496497 -8.498542 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 13.507080 cm
/Pattern cs
/P148 scn
10.344222 -3.739352 m
10.344222 -4.430569 9.297276 -4.985809 7.999972 -4.985809 c
6.714048 -4.985809 5.667101 -4.430569 5.667101 -3.739352 c
5.667101 -3.048135 6.714047 -2.492895 8.011352 -2.492895 c
9.297275 -2.492895 10.344222 -3.048135 10.344222 -3.739352 c
h
f*
n
Q

endstream
endobj

299 0 obj
  70429
endobj

300 0 obj
  << /Annots []
     /Type /Page
     /MediaBox [ 0.000000 0.000000 16.000000 16.000000 ]
     /Resources 297 0 R
     /Contents 298 0 R
     /Parent 301 0 R
  >>
endobj

301 0 obj
  << /Kids [ 300 0 R ]
     /Count 1
     /Type /Pages
  >>
endobj

302 0 obj
  << /Pages 301 0 R
     /Type /Catalog
  >>
endobj

xref
0 303
0000000000 65535 f
0000000010 00000 n
0000001500 00000 n
0000001523 00000 n
0000003599 00000 n
0000003622 00000 n
0000006087 00000 n
0000006110 00000 n
0000008186 00000 n
0000008209 00000 n
0000010286 00000 n
0000010310 00000 n
0000012388 00000 n
0000012412 00000 n
0000014879 00000 n
0000014903 00000 n
0000016981 00000 n
0000017005 00000 n
0000019472 00000 n
0000019496 00000 n
0000021574 00000 n
0000021598 00000 n
0000023676 00000 n
0000023700 00000 n
0000026167 00000 n
0000026191 00000 n
0000028269 00000 n
0000028293 00000 n
0000030371 00000 n
0000030395 00000 n
0000032473 00000 n
0000032497 00000 n
0000034964 00000 n
0000034988 00000 n
0000037066 00000 n
0000037090 00000 n
0000039557 00000 n
0000039581 00000 n
0000041659 00000 n
0000041683 00000 n
0000043761 00000 n
0000043785 00000 n
0000045863 00000 n
0000045887 00000 n
0000048354 00000 n
0000048378 00000 n
0000050845 00000 n
0000050869 00000 n
0000051585 00000 n
0000051608 00000 n
0000054075 00000 n
0000054099 00000 n
0000056566 00000 n
0000056590 00000 n
0000058668 00000 n
0000058692 00000 n
0000060770 00000 n
0000060794 00000 n
0000063261 00000 n
0000063285 00000 n
0000065752 00000 n
0000065776 00000 n
0000068243 00000 n
0000068267 00000 n
0000068983 00000 n
0000069006 00000 n
0000071084 00000 n
0000071108 00000 n
0000073575 00000 n
0000073599 00000 n
0000074315 00000 n
0000074338 00000 n
0000076805 00000 n
0000076829 00000 n
0000079296 00000 n
0000079320 00000 n
0000081398 00000 n
0000081422 00000 n
0000083889 00000 n
0000083913 00000 n
0000085991 00000 n
0000086015 00000 n
0000088482 00000 n
0000088506 00000 n
0000090973 00000 n
0000090997 00000 n
0000093075 00000 n
0000093099 00000 n
0000095566 00000 n
0000095590 00000 n
0000097668 00000 n
0000097692 00000 n
0000100159 00000 n
0000100183 00000 n
0000100899 00000 n
0000100922 00000 n
0000103000 00000 n
0000103024 00000 n
0000105102 00000 n
0000105126 00000 n
0000107205 00000 n
0000107230 00000 n
0000109310 00000 n
0000109335 00000 n
0000111804 00000 n
0000111829 00000 n
0000114298 00000 n
0000114323 00000 n
0000115041 00000 n
0000115065 00000 n
0000117145 00000 n
0000117170 00000 n
0000119639 00000 n
0000119664 00000 n
0000122133 00000 n
0000122158 00000 n
0000124627 00000 n
0000124652 00000 n
0000127121 00000 n
0000127146 00000 n
0000129226 00000 n
0000129251 00000 n
0000131331 00000 n
0000131356 00000 n
0000133436 00000 n
0000133461 00000 n
0000135930 00000 n
0000135955 00000 n
0000138424 00000 n
0000138449 00000 n
0000140918 00000 n
0000140943 00000 n
0000143023 00000 n
0000143048 00000 n
0000145128 00000 n
0000145153 00000 n
0000147622 00000 n
0000147647 00000 n
0000150116 00000 n
0000150141 00000 n
0000152610 00000 n
0000152635 00000 n
0000155104 00000 n
0000155129 00000 n
0000157209 00000 n
0000157234 00000 n
0000157952 00000 n
0000157976 00000 n
0000158694 00000 n
0000158718 00000 n
0000159436 00000 n
0000159460 00000 n
0000160178 00000 n
0000160202 00000 n
0000160920 00000 n
0000160944 00000 n
0000163024 00000 n
0000163049 00000 n
0000163767 00000 n
0000163791 00000 n
0000166260 00000 n
0000166285 00000 n
0000167003 00000 n
0000167027 00000 n
0000169107 00000 n
0000169132 00000 n
0000171601 00000 n
0000171626 00000 n
0000172344 00000 n
0000172368 00000 n
0000174837 00000 n
0000174862 00000 n
0000177331 00000 n
0000177356 00000 n
0000178074 00000 n
0000178098 00000 n
0000180178 00000 n
0000180203 00000 n
0000180921 00000 n
0000180945 00000 n
0000183025 00000 n
0000183050 00000 n
0000185519 00000 n
0000185544 00000 n
0000188013 00000 n
0000188038 00000 n
0000190507 00000 n
0000190532 00000 n
0000191250 00000 n
0000191274 00000 n
0000191992 00000 n
0000192016 00000 n
0000192734 00000 n
0000192758 00000 n
0000195227 00000 n
0000195252 00000 n
0000195970 00000 n
0000195994 00000 n
0000198463 00000 n
0000198488 00000 n
0000200568 00000 n
0000200593 00000 n
0000201311 00000 n
0000201335 00000 n
0000202053 00000 n
0000202077 00000 n
0000204546 00000 n
0000204571 00000 n
0000205289 00000 n
0000205313 00000 n
0000207393 00000 n
0000207418 00000 n
0000208136 00000 n
0000208160 00000 n
0000208878 00000 n
0000208902 00000 n
0000209620 00000 n
0000209644 00000 n
0000210362 00000 n
0000210386 00000 n
0000212466 00000 n
0000212491 00000 n
0000213209 00000 n
0000213233 00000 n
0000213951 00000 n
0000213975 00000 n
0000214693 00000 n
0000214717 00000 n
0000215435 00000 n
0000215459 00000 n
0000216177 00000 n
0000216201 00000 n
0000216919 00000 n
0000216943 00000 n
0000217661 00000 n
0000217685 00000 n
0000219765 00000 n
0000219790 00000 n
0000221870 00000 n
0000221895 00000 n
0000224364 00000 n
0000224389 00000 n
0000225503 00000 n
0000225527 00000 n
0000226245 00000 n
0000226269 00000 n
0000226987 00000 n
0000227011 00000 n
0000228516 00000 n
0000228541 00000 n
0000231010 00000 n
0000231035 00000 n
0000233504 00000 n
0000233529 00000 n
0000234247 00000 n
0000234271 00000 n
0000234989 00000 n
0000235013 00000 n
0000237093 00000 n
0000237118 00000 n
0000239000 00000 n
0000239025 00000 n
0000239743 00000 n
0000239767 00000 n
0000242236 00000 n
0000242261 00000 n
0000242979 00000 n
0000243003 00000 n
0000243721 00000 n
0000243745 00000 n
0000244463 00000 n
0000244487 00000 n
0000246567 00000 n
0000246592 00000 n
0000247310 00000 n
0000247334 00000 n
0000248052 00000 n
0000248076 00000 n
0000248794 00000 n
0000248818 00000 n
0000250898 00000 n
0000250923 00000 n
0000253003 00000 n
0000253028 00000 n
0000255108 00000 n
0000255133 00000 n
0000257213 00000 n
0000257238 00000 n
0000257956 00000 n
0000257980 00000 n
0000258698 00000 n
0000258722 00000 n
0000260802 00000 n
0000260827 00000 n
0000261545 00000 n
0000261569 00000 n
0000262287 00000 n
0000262311 00000 n
0000356716 00000 n
0000427205 00000 n
0000427231 00000 n
0000427412 00000 n
0000427490 00000 n
trailer
<< /ID [ (some) (id) ]
   /Root 302 0 R
   /Size 303
>>
startxref
427553
%%EOF